// Package shipping provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.15.0 DO NOT EDIT.
package shipping

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"io"
	"net/http"
	"net/url"
	"strings"
	"time"

	"github.com/oapi-codegen/runtime"
)

// Defines values for AdditionalLabelsDetailType.
const (
	AdditionalLabelsDetailTypeBROKER                      AdditionalLabelsDetailType = "BROKER"
	AdditionalLabelsDetailTypeCONSIGNEE                   AdditionalLabelsDetailType = "CONSIGNEE"
	AdditionalLabelsDetailTypeCUSTOMS                     AdditionalLabelsDetailType = "CUSTOMS"
	AdditionalLabelsDetailTypeDESTINATION                 AdditionalLabelsDetailType = "DESTINATION"
	AdditionalLabelsDetailTypeDESTINATIONCONTROLSTATEMENT AdditionalLabelsDetailType = "DESTINATION_CONTROL_STATEMENT"
	AdditionalLabelsDetailTypeFREIGHTREFERENCE            AdditionalLabelsDetailType = "FREIGHT_REFERENCE"
	AdditionalLabelsDetailTypeMANIFEST                    AdditionalLabelsDetailType = "MANIFEST"
	AdditionalLabelsDetailTypeORIGIN                      AdditionalLabelsDetailType = "ORIGIN"
	AdditionalLabelsDetailTypeRECIPIENT                   AdditionalLabelsDetailType = "RECIPIENT"
	AdditionalLabelsDetailTypeSECONDADDRESS               AdditionalLabelsDetailType = "SECOND_ADDRESS"
	AdditionalLabelsDetailTypeSHIPPER                     AdditionalLabelsDetailType = "SHIPPER"
)

// Defines values for AlcoholDetailAlcoholRecipientType.
const (
	AlcoholDetailAlcoholRecipientTypeCONSUMER AlcoholDetailAlcoholRecipientType = "CONSUMER"
	AlcoholDetailAlcoholRecipientTypeLICENSEE AlcoholDetailAlcoholRecipientType = "LICENSEE"
)

// Defines values for AlertAlertType.
const (
	NOTE    AlertAlertType = "NOTE"
	WARNING AlertAlertType = "WARNING"
)

// Defines values for AsynchronousProcessingOptionType1.
const (
	ALLOWASYNCHRONOUS AsynchronousProcessingOptionType1 = "ALLOW_ASYNCHRONOUS"
	SYNCHRONOUSONLY   AsynchronousProcessingOptionType1 = "SYNCHRONOUS_ONLY"
)

// Defines values for BatteryDetailBatteryMaterialType.
const (
	LITHIUMION   BatteryDetailBatteryMaterialType = "LITHIUM_ION"
	LITHIUMMETAL BatteryDetailBatteryMaterialType = "LITHIUM_METAL"
)

// Defines values for BatteryDetailBatteryPackingType.
const (
	CONTAINEDINEQUIPMENT BatteryDetailBatteryPackingType = "CONTAINED_IN_EQUIPMENT"
	PACKEDWITHEQUIPMENT  BatteryDetailBatteryPackingType = "PACKED_WITH_EQUIPMENT"
)

// Defines values for BatteryDetailBatteryRegulatoryType.
const (
	IATASECTIONII BatteryDetailBatteryRegulatoryType = "IATA_SECTION_II"
)

// Defines values for BrokerDetailType.
const (
	IMPORT BrokerDetailType = "IMPORT"
)

// Defines values for CODTransportationChargesDetailChargeLevelType.
const (
	CURRENTPACKAGE CODTransportationChargesDetailChargeLevelType = "CURRENT_PACKAGE"
	SUMOFPACKAGES  CODTransportationChargesDetailChargeLevelType = "SUM_OF_PACKAGES"
)

// Defines values for CODTransportationChargesDetailChargeType.
const (
	CODTransportationChargesDetailChargeTypeCODSURCHARGE        CODTransportationChargesDetailChargeType = "COD_SURCHARGE"
	CODTransportationChargesDetailChargeTypeNETCHARGE           CODTransportationChargesDetailChargeType = "NET_CHARGE"
	CODTransportationChargesDetailChargeTypeNETFREIGHT          CODTransportationChargesDetailChargeType = "NET_FREIGHT"
	CODTransportationChargesDetailChargeTypeTOTALCUSTOMERCHARGE CODTransportationChargesDetailChargeType = "TOTAL_CUSTOMER_CHARGE"
)

// Defines values for CODTransportationChargesDetailRateLevelType.
const (
	CODTransportationChargesDetailRateLevelTypeBUNDLEDRATE           CODTransportationChargesDetailRateLevelType = "BUNDLED_RATE"
	CODTransportationChargesDetailRateLevelTypeINDIVIDUALPACKAGERATE CODTransportationChargesDetailRateLevelType = "INDIVIDUAL_PACKAGE_RATE"
)

// Defines values for CODTransportationChargesDetailRateType.
const (
	CODTransportationChargesDetailRateTypeACCOUNT CODTransportationChargesDetailRateType = "ACCOUNT"
	CODTransportationChargesDetailRateTypeCURRENT CODTransportationChargesDetailRateType = "CURRENT"
	CODTransportationChargesDetailRateTypeCUSTOM  CODTransportationChargesDetailRateType = "CUSTOM"
)

// Defines values for CommercialInvoiceShipmentPurpose.
const (
	GIFT            CommercialInvoiceShipmentPurpose = "GIFT"
	NOTSOLD         CommercialInvoiceShipmentPurpose = "NOT_SOLD"
	PERSONALEFFECTS CommercialInvoiceShipmentPurpose = "PERSONAL_EFFECTS"
	REPAIRANDRETURN CommercialInvoiceShipmentPurpose = "REPAIR_AND_RETURN"
	SAMPLE          CommercialInvoiceShipmentPurpose = "SAMPLE"
	SOLD            CommercialInvoiceShipmentPurpose = "SOLD"
)

// Defines values for CommercialInvoiceTaxesOrMiscellaneousChargeType.
const (
	CommercialInvoiceTaxesOrMiscellaneousChargeTypeCOMMISSIONS             CommercialInvoiceTaxesOrMiscellaneousChargeType = "COMMISSIONS"
	CommercialInvoiceTaxesOrMiscellaneousChargeTypeDISCOUNTS               CommercialInvoiceTaxesOrMiscellaneousChargeType = "DISCOUNTS"
	CommercialInvoiceTaxesOrMiscellaneousChargeTypeHANDLINGFEES            CommercialInvoiceTaxesOrMiscellaneousChargeType = "HANDLING_FEES"
	CommercialInvoiceTaxesOrMiscellaneousChargeTypeOTHER                   CommercialInvoiceTaxesOrMiscellaneousChargeType = "OTHER"
	CommercialInvoiceTaxesOrMiscellaneousChargeTypeROYALTIESANDLICENSEFEES CommercialInvoiceTaxesOrMiscellaneousChargeType = "ROYALTIES_AND_LICENSE_FEES"
	CommercialInvoiceTaxesOrMiscellaneousChargeTypeTAXES                   CommercialInvoiceTaxesOrMiscellaneousChargeType = "TAXES"
)

// Defines values for CommodityPurpose.
const (
	CommodityPurposeBUSINESS CommodityPurpose = "BUSINESS"
	CommodityPurposeCONSUMER CommodityPurpose = "CONSUMER"
)

// Defines values for CreateTagRequestedShipmentPickupType.
const (
	CreateTagRequestedShipmentPickupTypeCONTACTFEDEXTOSCHEDULE CreateTagRequestedShipmentPickupType = "CONTACT_FEDEX_TO_SCHEDULE"
	CreateTagRequestedShipmentPickupTypeDROPOFFATFEDEXLOCATION CreateTagRequestedShipmentPickupType = "DROPOFF_AT_FEDEX_LOCATION"
	CreateTagRequestedShipmentPickupTypeUSESCHEDULEDPICKUP     CreateTagRequestedShipmentPickupType = "USE_SCHEDULED_PICKUP"
)

// Defines values for CreateTagRequestedShipmentRateRequestType.
const (
	CreateTagRequestedShipmentRateRequestTypeACCOUNT   CreateTagRequestedShipmentRateRequestType = "ACCOUNT"
	CreateTagRequestedShipmentRateRequestTypeINCENTIVE CreateTagRequestedShipmentRateRequestType = "INCENTIVE"
	CreateTagRequestedShipmentRateRequestTypeLIST      CreateTagRequestedShipmentRateRequestType = "LIST"
	CreateTagRequestedShipmentRateRequestTypeNONE      CreateTagRequestedShipmentRateRequestType = "NONE"
	CreateTagRequestedShipmentRateRequestTypePREFERRED CreateTagRequestedShipmentRateRequestType = "PREFERRED"
	CreateTagRequestedShipmentRateRequestTypeRETAIL    CreateTagRequestedShipmentRateRequestType = "RETAIL"
)

// Defines values for CustomerImageUsageId.
const (
	IMAGE1 CustomerImageUsageId = "IMAGE_1"
	IMAGE2 CustomerImageUsageId = "IMAGE_2"
	IMAGE3 CustomerImageUsageId = "IMAGE_3"
	IMAGE4 CustomerImageUsageId = "IMAGE_4"
	IMAGE5 CustomerImageUsageId = "IMAGE_5"
)

// Defines values for CustomerImageUsageProvidedImageType.
const (
	CustomerImageUsageProvidedImageTypeLETTERHEAD CustomerImageUsageProvidedImageType = "LETTER_HEAD"
	CustomerImageUsageProvidedImageTypeSIGNATURE  CustomerImageUsageProvidedImageType = "SIGNATURE"
)

// Defines values for CustomerImageUsageType.
const (
	CustomerImageUsageTypeLETTERHEAD CustomerImageUsageType = "LETTER_HEAD"
	CustomerImageUsageTypeSIGNATURE  CustomerImageUsageType = "SIGNATURE"
)

// Defines values for CustomerReferenceCustomerReferenceType.
const (
	CustomerReferenceCustomerReferenceTypeCUSTOMERREFERENCE               CustomerReferenceCustomerReferenceType = "CUSTOMER_REFERENCE"
	CustomerReferenceCustomerReferenceTypeDEPARTMENTNUMBER                CustomerReferenceCustomerReferenceType = "DEPARTMENT_NUMBER"
	CustomerReferenceCustomerReferenceTypeINTRACOUNTRYREGULATORYREFERENCE CustomerReferenceCustomerReferenceType = "INTRACOUNTRY_REGULATORY_REFERENCE"
	CustomerReferenceCustomerReferenceTypeINVOICENUMBER                   CustomerReferenceCustomerReferenceType = "INVOICE_NUMBER"
	CustomerReferenceCustomerReferenceTypePONUMBER                        CustomerReferenceCustomerReferenceType = "P_O_NUMBER"
	CustomerReferenceCustomerReferenceTypeRMAASSOCIATION                  CustomerReferenceCustomerReferenceType = "RMA_ASSOCIATION"
)

// Defines values for CustomerReference1CustomerReferenceType.
const (
	CustomerReference1CustomerReferenceTypeCUSTOMERREFERENCE               CustomerReference1CustomerReferenceType = "CUSTOMER_REFERENCE"
	CustomerReference1CustomerReferenceTypeDEPARTMENTNUMBER                CustomerReference1CustomerReferenceType = "DEPARTMENT_NUMBER"
	CustomerReference1CustomerReferenceTypeINTRACOUNTRYREGULATORYREFERENCE CustomerReference1CustomerReferenceType = "INTRACOUNTRY_REGULATORY_REFERENCE"
	CustomerReference1CustomerReferenceTypeINVOICENUMBER                   CustomerReference1CustomerReferenceType = "INVOICE_NUMBER"
	CustomerReference1CustomerReferenceTypePONUMBER                        CustomerReference1CustomerReferenceType = "P_O_NUMBER"
	CustomerReference1CustomerReferenceTypeRMAASSOCIATION                  CustomerReference1CustomerReferenceType = "RMA_ASSOCIATION"
)

// Defines values for CustomerSpecifiedLabelDetailMaskedData.
const (
	CUSTOMSVALUE                            CustomerSpecifiedLabelDetailMaskedData = "CUSTOMS_VALUE"
	DIMENSIONS                              CustomerSpecifiedLabelDetailMaskedData = "DIMENSIONS"
	DUTIESANDTAXESPAYORACCOUNTNUMBER        CustomerSpecifiedLabelDetailMaskedData = "DUTIES_AND_TAXES_PAYOR_ACCOUNT_NUMBER"
	INSUREDVALUE                            CustomerSpecifiedLabelDetailMaskedData = "INSURED_VALUE"
	SECONDARYBARCODE                        CustomerSpecifiedLabelDetailMaskedData = "SECONDARY_BARCODE"
	SHIPPERINFORMATION                      CustomerSpecifiedLabelDetailMaskedData = "SHIPPER_INFORMATION"
	TERMSANDCONDITIONS                      CustomerSpecifiedLabelDetailMaskedData = "TERMS_AND_CONDITIONS"
	TOTALWEIGHT                             CustomerSpecifiedLabelDetailMaskedData = "TOTAL_WEIGHT"
	TRANSPORTATIONCHARGESPAYORACCOUNTNUMBER CustomerSpecifiedLabelDetailMaskedData = "TRANSPORTATION_CHARGES_PAYOR_ACCOUNT_NUMBER"
)

// Defines values for CustomsClearanceDetailFreightOnValue.
const (
	CARRIERRISK CustomsClearanceDetailFreightOnValue = "CARRIER_RISK"
	OWNRISK     CustomsClearanceDetailFreightOnValue = "OWN_RISK"
)

// Defines values for CustomsClearanceDetailRegulatoryControls.
const (
	FOODORPERISHABLE                          CustomsClearanceDetailRegulatoryControls = "FOOD_OR_PERISHABLE"
	NOTAPPLICABLEFORLOWVALUECUSTOMSEXCEPTIONS CustomsClearanceDetailRegulatoryControls = "NOT_APPLICABLE_FOR_LOW_VALUE_CUSTOMS_EXCEPTIONS"
	NOTINFREECIRCULATION                      CustomsClearanceDetailRegulatoryControls = "NOT_IN_FREE_CIRCULATION"
	USMCA                                     CustomsClearanceDetailRegulatoryControls = "USMCA"
)

// Defines values for CustomsOptionDetailType.
const (
	CustomsOptionDetailTypeCOURTESYRETURNLABEL CustomsOptionDetailType = "COURTESY_RETURN_LABEL"
	CustomsOptionDetailTypeEXHIBITIONTRADESHOW CustomsOptionDetailType = "EXHIBITION_TRADE_SHOW"
	CustomsOptionDetailTypeFAULTYITEM          CustomsOptionDetailType = "FAULTY_ITEM"
	CustomsOptionDetailTypeFOLLOWINGREPAIR     CustomsOptionDetailType = "FOLLOWING_REPAIR"
	CustomsOptionDetailTypeFORREPAIR           CustomsOptionDetailType = "FOR_REPAIR"
	CustomsOptionDetailTypeITEMFORLOAN         CustomsOptionDetailType = "ITEM_FOR_LOAN"
	CustomsOptionDetailTypeOTHER               CustomsOptionDetailType = "OTHER"
	CustomsOptionDetailTypeREJECTED            CustomsOptionDetailType = "REJECTED"
	CustomsOptionDetailTypeREPLACEMENT         CustomsOptionDetailType = "REPLACEMENT"
	CustomsOptionDetailTypeTRIAL               CustomsOptionDetailType = "TRIAL"
)

// Defines values for DangerousGoodsDetailAccessibility.
const (
	ACCESSIBLE   DangerousGoodsDetailAccessibility = "ACCESSIBLE"
	INACCESSIBLE DangerousGoodsDetailAccessibility = "INACCESSIBLE"
)

// Defines values for DangerousGoodsDetailOptions.
const (
	BATTERY                      DangerousGoodsDetailOptions = "BATTERY"
	HAZARDOUSMATERIALS           DangerousGoodsDetailOptions = "HAZARDOUS_MATERIALS"
	LIMITEDQUANTITIESCOMMODITIES DangerousGoodsDetailOptions = "LIMITED_QUANTITIES_COMMODITIES"
	ORMD                         DangerousGoodsDetailOptions = "ORM_D"
	REPORTABLEQUANTITIES         DangerousGoodsDetailOptions = "REPORTABLE_QUANTITIES"
	SMALLQUANTITYEXCEPTION       DangerousGoodsDetailOptions = "SMALL_QUANTITY_EXCEPTION"
)

// Defines values for DestinationControlDetailStatementTypes.
const (
	DEPARTMENTOFCOMMERCE                     DestinationControlDetailStatementTypes = "DEPARTMENT_OF_COMMERCE"
	DEPARTMENTOFCOMMERCEANDDEPARTMENTOFSTATE DestinationControlDetailStatementTypes = "DEPARTMENT_OF_COMMERCE_AND_DEPARTMENT_OF_STATE"
	DEPARTMENTOFSTATE                        DestinationControlDetailStatementTypes = "DEPARTMENT_OF_STATE"
)

// Defines values for DimensionsUnits.
const (
	CM DimensionsUnits = "CM"
	IN DimensionsUnits = "IN"
)

// Defines values for DocTabContentDocTabContentType.
const (
	DocTabContentDocTabContentTypeBARCODED DocTabContentDocTabContentType = "BARCODED"
	DocTabContentDocTabContentTypeCUSTOM   DocTabContentDocTabContentType = "CUSTOM"
	DocTabContentDocTabContentTypeMINIMUM  DocTabContentDocTabContentType = "MINIMUM"
	DocTabContentDocTabContentTypeSTANDARD DocTabContentDocTabContentType = "STANDARD"
	DocTabContentDocTabContentTypeZONE001  DocTabContentDocTabContentType = "ZONE001"
)

// Defines values for DocTabContentBarcodedSymbology.
const (
	CODABAR        DocTabContentBarcodedSymbology = "CODABAR"
	CODE128        DocTabContentBarcodedSymbology = "CODE128"
	CODE128B       DocTabContentBarcodedSymbology = "CODE128B"
	CODE128C       DocTabContentBarcodedSymbology = "CODE128C"
	CODE128WIDEBAR DocTabContentBarcodedSymbology = "CODE128_WIDEBAR"
	CODE39         DocTabContentBarcodedSymbology = "CODE39"
	CODE93         DocTabContentBarcodedSymbology = "CODE93"
	I2OF5          DocTabContentBarcodedSymbology = "I2OF5"
	MANUAL         DocTabContentBarcodedSymbology = "MANUAL"
	PDF417         DocTabContentBarcodedSymbology = "PDF417"
	POSTNET        DocTabContentBarcodedSymbology = "POSTNET"
	QRCODE         DocTabContentBarcodedSymbology = "QR_CODE"
	UCC128         DocTabContentBarcodedSymbology = "UCC128"
)

// Defines values for DocTabZoneSpecificationJustification.
const (
	DocTabZoneSpecificationJustificationLEFT  DocTabZoneSpecificationJustification = "LEFT"
	DocTabZoneSpecificationJustificationRIGHT DocTabZoneSpecificationJustification = "RIGHT"
)

// Defines values for DocumentFormatOptionsRequestedOptions.
const (
	DocumentFormatOptionsRequestedOptionsSHIPPINGLABELFIRST          DocumentFormatOptionsRequestedOptions = "SHIPPING_LABEL_FIRST"
	DocumentFormatOptionsRequestedOptionsSHIPPINGLABELLAST           DocumentFormatOptionsRequestedOptions = "SHIPPING_LABEL_LAST"
	DocumentFormatOptionsRequestedOptionsSUPPRESSADDITIONALLANGUAGES DocumentFormatOptionsRequestedOptions = "SUPPRESS_ADDITIONAL_LANGUAGES"
)

// Defines values for EMailNotificationDetailAggregationType.
const (
	EMailNotificationDetailAggregationTypePERPACKAGE  EMailNotificationDetailAggregationType = "PER_PACKAGE"
	EMailNotificationDetailAggregationTypePERSHIPMENT EMailNotificationDetailAggregationType = "PER_SHIPMENT"
)

// Defines values for ETDDetailAttributes.
const (
	POSTSHIPMENTUPLOADREQUESTED ETDDetailAttributes = "POST_SHIPMENT_UPLOAD_REQUESTED"
)

// Defines values for ETDDetailRequestedDocumentTypes.
const (
	ETDDetailRequestedDocumentTypesCERTIFICATEOFORIGIN                         ETDDetailRequestedDocumentTypes = "CERTIFICATE_OF_ORIGIN"
	ETDDetailRequestedDocumentTypesCOMMERCIALINVOICE                           ETDDetailRequestedDocumentTypes = "COMMERCIAL_INVOICE"
	ETDDetailRequestedDocumentTypesCUSTOMERSPECIFIEDLABELS                     ETDDetailRequestedDocumentTypes = "CUSTOMER_SPECIFIED_LABELS"
	ETDDetailRequestedDocumentTypesCUSTOMPACKAGEDOCUMENT                       ETDDetailRequestedDocumentTypes = "CUSTOM_PACKAGE_DOCUMENT"
	ETDDetailRequestedDocumentTypesCUSTOMSHIPMENTDOCUMENT                      ETDDetailRequestedDocumentTypes = "CUSTOM_SHIPMENT_DOCUMENT"
	ETDDetailRequestedDocumentTypesEXPORTDECLARATION                           ETDDetailRequestedDocumentTypes = "EXPORT_DECLARATION"
	ETDDetailRequestedDocumentTypesGENERALAGENCYAGREEMENT                      ETDDetailRequestedDocumentTypes = "GENERAL_AGENCY_AGREEMENT"
	ETDDetailRequestedDocumentTypesLABEL                                       ETDDetailRequestedDocumentTypes = "LABEL"
	ETDDetailRequestedDocumentTypesOP900                                       ETDDetailRequestedDocumentTypes = "OP_900"
	ETDDetailRequestedDocumentTypesPENDINGSHIPMENTEMAILNOTIFICATION            ETDDetailRequestedDocumentTypes = "PENDING_SHIPMENT_EMAIL_NOTIFICATION"
	ETDDetailRequestedDocumentTypesPROFORMAINVOICE                             ETDDetailRequestedDocumentTypes = "PRO_FORMA_INVOICE"
	ETDDetailRequestedDocumentTypesRETURNINSTRUCTIONS                          ETDDetailRequestedDocumentTypes = "RETURN_INSTRUCTIONS"
	ETDDetailRequestedDocumentTypesUSMCACERTIFICATIONOFORIGIN                  ETDDetailRequestedDocumentTypes = "USMCA_CERTIFICATION_OF_ORIGIN"
	ETDDetailRequestedDocumentTypesUSMCACOMMERCIALINVOICECERTIFICATIONOFORIGIN ETDDetailRequestedDocumentTypes = "USMCA_COMMERCIAL_INVOICE_CERTIFICATION_OF_ORIGIN"
)

// Defines values for EmailNotificationRecipientEmailNotificationRecipientType.
const (
	EmailNotificationRecipientEmailNotificationRecipientTypeBROKER     EmailNotificationRecipientEmailNotificationRecipientType = "BROKER"
	EmailNotificationRecipientEmailNotificationRecipientTypeOTHER      EmailNotificationRecipientEmailNotificationRecipientType = "OTHER"
	EmailNotificationRecipientEmailNotificationRecipientTypeRECIPIENT  EmailNotificationRecipientEmailNotificationRecipientType = "RECIPIENT"
	EmailNotificationRecipientEmailNotificationRecipientTypeSHIPPER    EmailNotificationRecipientEmailNotificationRecipientType = "SHIPPER"
	EmailNotificationRecipientEmailNotificationRecipientTypeTHIRDPARTY EmailNotificationRecipientEmailNotificationRecipientType = "THIRD_PARTY"
)

// Defines values for EmailNotificationRecipientNotificationEventType.
const (
	EmailNotificationRecipientNotificationEventTypeONBILLOFLADING         EmailNotificationRecipientNotificationEventType = "ON_BILL_OF_LADING"
	EmailNotificationRecipientNotificationEventTypeONDELIVERY             EmailNotificationRecipientNotificationEventType = "ON_DELIVERY"
	EmailNotificationRecipientNotificationEventTypeONESTIMATEDDELIVERY    EmailNotificationRecipientNotificationEventType = "ON_ESTIMATED_DELIVERY"
	EmailNotificationRecipientNotificationEventTypeONEXCEPTION            EmailNotificationRecipientNotificationEventType = "ON_EXCEPTION"
	EmailNotificationRecipientNotificationEventTypeONLABEL                EmailNotificationRecipientNotificationEventType = "ON_LABEL"
	EmailNotificationRecipientNotificationEventTypeONPICKUPDRIVERARRIVED  EmailNotificationRecipientNotificationEventType = "ON_PICKUP_DRIVER_ARRIVED"
	EmailNotificationRecipientNotificationEventTypeONPICKUPDRIVERASSIGNED EmailNotificationRecipientNotificationEventType = "ON_PICKUP_DRIVER_ASSIGNED"
	EmailNotificationRecipientNotificationEventTypeONPICKUPDRIVERDEPARTED EmailNotificationRecipientNotificationEventType = "ON_PICKUP_DRIVER_DEPARTED"
	EmailNotificationRecipientNotificationEventTypeONPICKUPDRIVERENROUTE  EmailNotificationRecipientNotificationEventType = "ON_PICKUP_DRIVER_EN_ROUTE"
	EmailNotificationRecipientNotificationEventTypeONSHIPMENT             EmailNotificationRecipientNotificationEventType = "ON_SHIPMENT"
	EmailNotificationRecipientNotificationEventTypeONTENDER               EmailNotificationRecipientNotificationEventType = "ON_TENDER"
)

// Defines values for EmailNotificationRecipientNotificationFormatType.
const (
	EmailNotificationRecipientNotificationFormatTypeHTML EmailNotificationRecipientNotificationFormatType = "HTML"
	EmailNotificationRecipientNotificationFormatTypeTEXT EmailNotificationRecipientNotificationFormatType = "TEXT"
)

// Defines values for EmailNotificationRecipientNotificationType.
const (
	EmailNotificationRecipientNotificationTypeEMAIL EmailNotificationRecipientNotificationType = "EMAIL"
)

// Defines values for EmailOptionsRequestedOptions.
const (
	EmailOptionsRequestedOptionsPRODUCEPAPERLESSSHIPPINGFORMAT EmailOptionsRequestedOptions = "PRODUCE_PAPERLESS_SHIPPING_FORMAT"
	EmailOptionsRequestedOptionsSUPPRESSACCESSEMAILS           EmailOptionsRequestedOptions = "SUPPRESS_ACCESS_EMAILS"
	EmailOptionsRequestedOptionsSUPPRESSADDITIONALLANGUAGES    EmailOptionsRequestedOptions = "SUPPRESS_ADDITIONAL_LANGUAGES"
)

// Defines values for EmailRecipientRole.
const (
	SHIPMENTCOMPLETOR EmailRecipientRole = "SHIPMENT_COMPLETOR"
	SHIPMENTINITIATOR EmailRecipientRole = "SHIPMENT_INITIATOR"
)

// Defines values for ExportDetailB13AFilingOption.
const (
	FEDEXTOSTAMP        ExportDetailB13AFilingOption = "FEDEX_TO_STAMP"
	FILEDELECTRONICALLY ExportDetailB13AFilingOption = "FILED_ELECTRONICALLY"
	MANUALLYATTACHED    ExportDetailB13AFilingOption = "MANUALLY_ATTACHED"
	NOTREQUIRED         ExportDetailB13AFilingOption = "NOT_REQUIRED"
	SUMMARYREPORTING    ExportDetailB13AFilingOption = "SUMMARY_REPORTING"
)

// Defines values for FullSchemaCancelShipmentDeletionControl.
const (
	DELETEALLPACKAGES FullSchemaCancelShipmentDeletionControl = "DELETE_ALL_PACKAGES"
)

// Defines values for FullSchemaShipMergeLabelDocOption.
const (
	FullSchemaShipMergeLabelDocOptionLABELSANDDOCS FullSchemaShipMergeLabelDocOption = "LABELS_AND_DOCS"
	FullSchemaShipMergeLabelDocOptionLABELSONLY    FullSchemaShipMergeLabelDocOption = "LABELS_ONLY"
	FullSchemaShipMergeLabelDocOptionNONE          FullSchemaShipMergeLabelDocOption = "NONE"
)

// Defines values for HazardousCommodityDescription01PackingGroup.
const (
	DEFAULT HazardousCommodityDescription01PackingGroup = "DEFAULT"
	I       HazardousCommodityDescription01PackingGroup = "I"
	II      HazardousCommodityDescription01PackingGroup = "II"
	III     HazardousCommodityDescription01PackingGroup = "III"
)

// Defines values for HazardousCommodityDescription01ProcessingOptions.
const (
	INCLUDESPECIALPROVISIONS HazardousCommodityDescription01ProcessingOptions = "INCLUDE_SPECIAL_PROVISIONS"
)

// Defines values for HazardousCommodityOptionDetail01LabelTextOption.
const (
	HazardousCommodityOptionDetail01LabelTextOptionAPPEND   HazardousCommodityOptionDetail01LabelTextOption = "APPEND"
	HazardousCommodityOptionDetail01LabelTextOptionOVERRIDE HazardousCommodityOptionDetail01LabelTextOption = "OVERRIDE"
	HazardousCommodityOptionDetail01LabelTextOptionSTANDARD HazardousCommodityOptionDetail01LabelTextOption = "STANDARD"
)

// Defines values for HazardousCommodityQuantityDetailQuantityType.
const (
	HazardousCommodityQuantityDetailQuantityTypeGROSS HazardousCommodityQuantityDetailQuantityType = "GROSS"
	HazardousCommodityQuantityDetailQuantityTypeNET   HazardousCommodityQuantityDetailQuantityType = "NET"
)

// Defines values for HazardousCommodityQuantityDetail002QuantityType.
const (
	HazardousCommodityQuantityDetail002QuantityTypeGROSS HazardousCommodityQuantityDetail002QuantityType = "GROSS"
	HazardousCommodityQuantityDetail002QuantityTypeNET   HazardousCommodityQuantityDetail002QuantityType = "NET"
)

// Defines values for HoldAtLocationDetailLocationType.
const (
	FEDEXAUTHORIZEDSHIPCENTER HoldAtLocationDetailLocationType = "FEDEX_AUTHORIZED_SHIP_CENTER"
	FEDEXGROUNDTERMINAL       HoldAtLocationDetailLocationType = "FEDEX_GROUND_TERMINAL"
	FEDEXOFFICE               HoldAtLocationDetailLocationType = "FEDEX_OFFICE"
	FEDEXONSITE               HoldAtLocationDetailLocationType = "FEDEX_ONSITE"
	FEDEXSELFSERVICELOCATION  HoldAtLocationDetailLocationType = "FEDEX_SELF_SERVICE_LOCATION"
	FEDEXSTAFFED              HoldAtLocationDetailLocationType = "FEDEX_STAFFED"
	RETAILALLICANCELOCATION   HoldAtLocationDetailLocationType = "RETAIL_ALLICANCE_LOCATION"
)

// Defines values for HomeDeliveryPremiumDetailHomedeliveryPremiumType.
const (
	APPOINTMENT HomeDeliveryPremiumDetailHomedeliveryPremiumType = "APPOINTMENT"
	DATECERTAIN HomeDeliveryPremiumDetailHomedeliveryPremiumType = "DATE_CERTAIN"
	EVENING     HomeDeliveryPremiumDetailHomedeliveryPremiumType = "EVENING"
)

// Defines values for InternationalControlledExportDetailType.
const (
	DEA036              InternationalControlledExportDetailType = "DEA_036"
	DEA236              InternationalControlledExportDetailType = "DEA_236"
	DSP05               InternationalControlledExportDetailType = "DSP_05"
	DSP61               InternationalControlledExportDetailType = "DSP_61"
	DSP73               InternationalControlledExportDetailType = "DSP_73"
	DSP85               InternationalControlledExportDetailType = "DSP_85"
	DSPLICENSEAGREEMENT InternationalControlledExportDetailType = "DSP_LICENSE_AGREEMENT"
	WAREHOUSEWITHDRAWAL InternationalControlledExportDetailType = "WAREHOUSE_WITHDRAWAL"
)

// Defines values for LABELRESPONSEOPTIONS.
const (
	LABELRESPONSEOPTIONSLABEL   LABELRESPONSEOPTIONS = "LABEL"
	LABELRESPONSEOPTIONSURLONLY LABELRESPONSEOPTIONS = "URL_ONLY"
)

// Defines values for LabelResponseVOContentType.
const (
	LabelResponseVOContentTypeACCEPTANCELABEL            LabelResponseVOContentType = "ACCEPTANCE_LABEL"
	LabelResponseVOContentTypeAUXILIARY                  LabelResponseVOContentType = "AUXILIARY"
	LabelResponseVOContentTypeBILLOFLADING               LabelResponseVOContentType = "BILL_OF_LADING"
	LabelResponseVOContentTypeCERTIFICATEOFORIGIN        LabelResponseVOContentType = "CERTIFICATE_OF_ORIGIN"
	LabelResponseVOContentTypeCOMMERCIALINVOICE          LabelResponseVOContentType = "COMMERCIAL_INVOICE"
	LabelResponseVOContentTypeENDOFDAYHAZMATREPORT       LabelResponseVOContentType = "END_OF_DAY_HAZMAT_REPORT"
	LabelResponseVOContentTypeGAAFORM                    LabelResponseVOContentType = "GAA_FORM"
	LabelResponseVOContentTypeHAZMATLABEL                LabelResponseVOContentType = "HAZMAT_LABEL"
	LabelResponseVOContentTypeLABEL                      LabelResponseVOContentType = "LABEL"
	LabelResponseVOContentTypeMANIFESTREPORT             LabelResponseVOContentType = "MANIFEST_REPORT"
	LabelResponseVOContentTypeMERGEDLABELDOCUMENTS       LabelResponseVOContentType = "MERGED_LABEL_DOCUMENTS"
	LabelResponseVOContentTypeMERGEDLABELSONLY           LabelResponseVOContentType = "MERGED_LABELS_ONLY"
	LabelResponseVOContentTypeMULTIWEIGHTREPORT          LabelResponseVOContentType = "MULTIWEIGHT_REPORT"
	LabelResponseVOContentTypePROFORMAINVOICE            LabelResponseVOContentType = "PROFORMA_INVOICE"
	LabelResponseVOContentTypeRETURNINSTRUCTIONS         LabelResponseVOContentType = "RETURN_INSTRUCTIONS"
	LabelResponseVOContentTypeUSMCACERTIFICATIONOFORIGIN LabelResponseVOContentType = "USMCA_CERTIFICATION_OF_ORIGIN"
)

// Defines values for LabelSpecificationImageType.
const (
	LabelSpecificationImageTypeEPL2  LabelSpecificationImageType = "EPL2"
	LabelSpecificationImageTypePDF   LabelSpecificationImageType = "PDF"
	LabelSpecificationImageTypePNG   LabelSpecificationImageType = "PNG"
	LabelSpecificationImageTypeZPLII LabelSpecificationImageType = "ZPLII"
)

// Defines values for LabelSpecificationLabelFormatType.
const (
	COMMON2D      LabelSpecificationLabelFormatType = "COMMON2D"
	LABELDATAONLY LabelSpecificationLabelFormatType = "LABEL_DATA_ONLY"
)

// Defines values for LabelSpecificationLabelOrder.
const (
	SHIPPINGLABELFIRST LabelSpecificationLabelOrder = "SHIPPING_LABEL_FIRST"
	SHIPPINGLABELLAST  LabelSpecificationLabelOrder = "SHIPPING_LABEL_LAST"
)

// Defines values for LabelSpecificationLabelPrintingOrientation.
const (
	BOTTOMEDGEOFTEXTFIRST LabelSpecificationLabelPrintingOrientation = "BOTTOM_EDGE_OF_TEXT_FIRST"
	TOPEDGEOFTEXTFIRST    LabelSpecificationLabelPrintingOrientation = "TOP_EDGE_OF_TEXT_FIRST"
)

// Defines values for LabelSpecificationLabelRotation.
const (
	LabelSpecificationLabelRotationLEFT       LabelSpecificationLabelRotation = "LEFT"
	LabelSpecificationLabelRotationNONE       LabelSpecificationLabelRotation = "NONE"
	LabelSpecificationLabelRotationRIGHT      LabelSpecificationLabelRotation = "RIGHT"
	LabelSpecificationLabelRotationUPSIDEDOWN LabelSpecificationLabelRotation = "UPSIDE_DOWN"
)

// Defines values for LabelSpecificationLabelStockType.
const (
	LabelSpecificationLabelStockTypePAPER4X6                  LabelSpecificationLabelStockType = "PAPER_4X6"
	LabelSpecificationLabelStockTypePAPER4X675                LabelSpecificationLabelStockType = "PAPER_4X675"
	LabelSpecificationLabelStockTypePAPER4X8                  LabelSpecificationLabelStockType = "PAPER_4X8"
	LabelSpecificationLabelStockTypePAPER4X9                  LabelSpecificationLabelStockType = "PAPER_4X9"
	LabelSpecificationLabelStockTypePAPER7X475                LabelSpecificationLabelStockType = "PAPER_7X475"
	LabelSpecificationLabelStockTypePAPER85X11BOTTOMHALFLABEL LabelSpecificationLabelStockType = "PAPER_85X11_BOTTOM_HALF_LABEL"
	LabelSpecificationLabelStockTypePAPER85X11TOPHALFLABEL    LabelSpecificationLabelStockType = "PAPER_85X11_TOP_HALF_LABEL"
	LabelSpecificationLabelStockTypePAPERLETTER               LabelSpecificationLabelStockType = "PAPER_LETTER"
	LabelSpecificationLabelStockTypeSTOCK4X105TRAILINGDOCTAB  LabelSpecificationLabelStockType = "STOCK_4X105_TRAILING_DOC_TAB"
	LabelSpecificationLabelStockTypeSTOCK4X6                  LabelSpecificationLabelStockType = "STOCK_4X6"
	LabelSpecificationLabelStockTypeSTOCK4X675LEADINGDOCTAB   LabelSpecificationLabelStockType = "STOCK_4X675_LEADING_DOC_TAB"
	LabelSpecificationLabelStockTypeSTOCK4X675TRAILINGDOCTAB  LabelSpecificationLabelStockType = "STOCK_4X675_TRAILING_DOC_TAB"
	LabelSpecificationLabelStockTypeSTOCK4X8                  LabelSpecificationLabelStockType = "STOCK_4X8"
	LabelSpecificationLabelStockTypeSTOCK4X85TRAILINGDOCTAB   LabelSpecificationLabelStockType = "STOCK_4X85_TRAILING_DOC_TAB"
	LabelSpecificationLabelStockTypeSTOCK4X9                  LabelSpecificationLabelStockType = "STOCK_4X9"
	LabelSpecificationLabelStockTypeSTOCK4X9LEADINGDOCTAB     LabelSpecificationLabelStockType = "STOCK_4X9_LEADING_DOC_TAB"
	LabelSpecificationLabelStockTypeSTOCK4X9TRAILINGDOCTAB    LabelSpecificationLabelStockType = "STOCK_4X9_TRAILING_DOC_TAB"
)

// Defines values for OpenShipmentAction.
const (
	CONFIRM  OpenShipmentAction = "CONFIRM"
	TRANSFER OpenShipmentAction = "TRANSFER"
)

// Defines values for PackageSpecialServicesRequestedSignatureOptionType.
const (
	ADULT               PackageSpecialServicesRequestedSignatureOptionType = "ADULT"
	DIRECT              PackageSpecialServicesRequestedSignatureOptionType = "DIRECT"
	INDIRECT            PackageSpecialServicesRequestedSignatureOptionType = "INDIRECT"
	NOSIGNATUREREQUIRED PackageSpecialServicesRequestedSignatureOptionType = "NO_SIGNATURE_REQUIRED"
	SERVICEDEFAULT      PackageSpecialServicesRequestedSignatureOptionType = "SERVICE_DEFAULT"
)

// Defines values for PaymentPaymentType.
const (
	PaymentPaymentTypeCOLLECT    PaymentPaymentType = "COLLECT"
	PaymentPaymentTypeRECIPIENT  PaymentPaymentType = "RECIPIENT"
	PaymentPaymentTypeSENDER     PaymentPaymentType = "SENDER"
	PaymentPaymentTypeTHIRDPARTY PaymentPaymentType = "THIRD_PARTY"
)

// Defines values for Payment1PaymentType.
const (
	Payment1PaymentTypeCOLLECT    Payment1PaymentType = "COLLECT"
	Payment1PaymentTypeRECIPIENT  Payment1PaymentType = "RECIPIENT"
	Payment1PaymentTypeSENDER     Payment1PaymentType = "SENDER"
	Payment1PaymentTypeTHIRDPARTY Payment1PaymentType = "THIRD_PARTY"
)

// Defines values for PendingShipmentDetailPendingShipmentType.
const (
	PendingShipmentDetailPendingShipmentTypeEMAIL PendingShipmentDetailPendingShipmentType = "EMAIL"
)

// Defines values for PendingShipmentProcessingOptionsRequestedOptions.
const (
	ALLOWMODIFICATIONS PendingShipmentProcessingOptionsRequestedOptions = "ALLOW_MODIFICATIONS"
)

// Defines values for PieceResponseServiceCategory.
const (
	EXPRESS        PieceResponseServiceCategory = "EXPRESS"
	EXPRESSFREIGHT PieceResponseServiceCategory = "EXPRESS_FREIGHT"
	EXPRESSPARCEL  PieceResponseServiceCategory = "EXPRESS_PARCEL"
	FREIGHT        PieceResponseServiceCategory = "FREIGHT"
	GROUND         PieceResponseServiceCategory = "GROUND"
	NULL           PieceResponseServiceCategory = "NULL"
	SMARTPOST      PieceResponseServiceCategory = "SMARTPOST"
)

// Defines values for RecipientCustomsIdType.
const (
	COMPANY    RecipientCustomsIdType = "COMPANY"
	INDIVIDUAL RecipientCustomsIdType = "INDIVIDUAL"
	PASSPORT   RecipientCustomsIdType = "PASSPORT"
)

// Defines values for RecommendedDocumentSpecificationTypes.
const (
	ANTIQUESTATEMENTEUROPEANUNION                                               RecommendedDocumentSpecificationTypes = "ANTIQUE_STATEMENT_EUROPEAN_UNION"
	ANTIQUESTATEMENTUNITEDSTATES                                                RecommendedDocumentSpecificationTypes = "ANTIQUE_STATEMENT_UNITED_STATES"
	ASSEMBLERDECLARATION                                                        RecommendedDocumentSpecificationTypes = "ASSEMBLER_DECLARATION"
	BEARINGWORKSHEET                                                            RecommendedDocumentSpecificationTypes = "BEARING_WORKSHEET"
	CERTIFICATEOFSHIPMENTSTOSYRIA                                               RecommendedDocumentSpecificationTypes = "CERTIFICATE_OF_SHIPMENTS_TO_SYRIA"
	COMMERCIALINVOICEFORTHECARIBBEANCOMMONMARKET                                RecommendedDocumentSpecificationTypes = "COMMERCIAL_INVOICE_FOR_THE_CARIBBEAN_COMMON_MARKET"
	CONIFEROUSSOLIDWOODPACKAGINGMATERIALTOTHEPEOPLESREPUBLICOFCHINA             RecommendedDocumentSpecificationTypes = "CONIFEROUS_SOLID_WOOD_PACKAGING_MATERIAL_TO_THE_PEOPLES_REPUBLIC_OF_CHINA"
	DECLARATIONFORFREEENTRYOFRETURNEDAMERICANPRODUCTS                           RecommendedDocumentSpecificationTypes = "DECLARATION_FOR_FREE_ENTRY_OF_RETURNED_AMERICAN_PRODUCTS"
	DECLARATIONOFBIOLOGICALSTANDARDS                                            RecommendedDocumentSpecificationTypes = "DECLARATION_OF_BIOLOGICAL_STANDARDS"
	DECLARATIONOFIMPORTEDELECTRONICPRODUCTSSUBJECTTORADIATIONCONTROLSTANDARD    RecommendedDocumentSpecificationTypes = "DECLARATION_OF_IMPORTED_ELECTRONIC_PRODUCTS_SUBJECT_TO_RADIATION_CONTROL_STANDARD"
	ELECTRONICINTEGRATEDCIRCUITWORKSHEET                                        RecommendedDocumentSpecificationTypes = "ELECTRONIC_INTEGRATED_CIRCUIT_WORKSHEET"
	FILMANDVIDEOCERTIFICATE                                                     RecommendedDocumentSpecificationTypes = "FILM_AND_VIDEO_CERTIFICATE"
	INTERIMFOOTWEARINVOICE                                                      RecommendedDocumentSpecificationTypes = "INTERIM_FOOTWEAR_INVOICE"
	PACKINGLIST                                                                 RecommendedDocumentSpecificationTypes = "PACKING_LIST"
	PRINTEDCIRCUITBOARDWORKSHEET                                                RecommendedDocumentSpecificationTypes = "PRINTED_CIRCUIT_BOARD_WORKSHEET"
	REPAIREDWATCHBREAKOUTWORKSHEET                                              RecommendedDocumentSpecificationTypes = "REPAIRED_WATCH_BREAKOUT_WORKSHEET"
	STATEMENTREGARDINGTHEIMPORTOFRADIOFREQUENCYDEVICES                          RecommendedDocumentSpecificationTypes = "STATEMENT_REGARDING_THE_IMPORT_OF_RADIO_FREQUENCY_DEVICES"
	TOXICSUBSTANCESCONTROLACT                                                   RecommendedDocumentSpecificationTypes = "TOXIC_SUBSTANCES_CONTROL_ACT"
	UNITEDSTATESCARIBBEANBASINTRADEPARTNERSHIPACTCERTIFICATEOFORIGINNONTEXTILES RecommendedDocumentSpecificationTypes = "UNITED_STATES_CARIBBEAN_BASIN_TRADE_PARTNERSHIP_ACT_CERTIFICATE_OF_ORIGIN_NON_TEXTILES"
	UNITEDSTATESCARIBBEANBASINTRADEPARTNERSHIPACTCERTIFICATEOFORIGINTEXTILES    RecommendedDocumentSpecificationTypes = "UNITED_STATES_CARIBBEAN_BASIN_TRADE_PARTNERSHIP_ACT_CERTIFICATE_OF_ORIGIN_TEXTILES"
	UNITEDSTATESNEWWATCHWORKSHEET                                               RecommendedDocumentSpecificationTypes = "UNITED_STATES_NEW_WATCH_WORKSHEET"
	UNITEDSTATESWATCHREPAIRDECLARATION                                          RecommendedDocumentSpecificationTypes = "UNITED_STATES_WATCH_REPAIR_DECLARATION"
	USMCACERTIFICATIONOFORIGINCANADAENGLISH                                     RecommendedDocumentSpecificationTypes = "USMCA_CERTIFICATION_OF_ORIGIN_CANADA_ENGLISH"
	USMCACERTIFICATIONOFORIGINCANADAFRENCH                                      RecommendedDocumentSpecificationTypes = "USMCA_CERTIFICATION_OF_ORIGIN_CANADA_FRENCH"
	USMCACERTIFICATIONOFORIGINSPANISH                                           RecommendedDocumentSpecificationTypes = "USMCA_CERTIFICATION_OF_ORIGIN_SPANISH"
	USMCACERTIFICATIONOFORIGINUNITEDSTATES                                      RecommendedDocumentSpecificationTypes = "USMCA_CERTIFICATION_OF_ORIGIN_UNITED_STATES"
)

// Defines values for RegulatoryLabelContentDetailGenerationOptions.
const (
	CONTENTONSHIPPINGLABELONLY      RegulatoryLabelContentDetailGenerationOptions = "CONTENT_ON_SHIPPING_LABEL_ONLY"
	CONTENTONSHIPPINGLABELPREFERRED RegulatoryLabelContentDetailGenerationOptions = "CONTENT_ON_SHIPPING_LABEL_PREFERRED"
	CONTENTONSUPPLEMENTALLABELONLY  RegulatoryLabelContentDetailGenerationOptions = "CONTENT_ON_SUPPLEMENTAL_LABEL_ONLY"
)

// Defines values for RegulatoryLabelContentDetailType.
const (
	ALCOHOLSHIPMENTLABEL RegulatoryLabelContentDetailType = "ALCOHOL_SHIPMENT_LABEL"
)

// Defines values for RequestedShipmentPickupType.
const (
	RequestedShipmentPickupTypeCONTACTFEDEXTOSCHEDULE RequestedShipmentPickupType = "CONTACT_FEDEX_TO_SCHEDULE"
	RequestedShipmentPickupTypeDROPOFFATFEDEXLOCATION RequestedShipmentPickupType = "DROPOFF_AT_FEDEX_LOCATION"
	RequestedShipmentPickupTypeUSESCHEDULEDPICKUP     RequestedShipmentPickupType = "USE_SCHEDULED_PICKUP"
)

// Defines values for RequestedShipmentRateRequestType.
const (
	RequestedShipmentRateRequestTypeACCOUNT   RequestedShipmentRateRequestType = "ACCOUNT"
	RequestedShipmentRateRequestTypeINCENTIVE RequestedShipmentRateRequestType = "INCENTIVE"
	RequestedShipmentRateRequestTypeLIST      RequestedShipmentRateRequestType = "LIST"
	RequestedShipmentRateRequestTypeNONE      RequestedShipmentRateRequestType = "NONE"
	RequestedShipmentRateRequestTypePREFERRED RequestedShipmentRateRequestType = "PREFERRED"
	RequestedShipmentRateRequestTypeRETAIL    RequestedShipmentRateRequestType = "RETAIL"
)

// Defines values for RequestedShipmentVerifyPickupType.
const (
	CONTACTFEDEXTOSCHEDULE RequestedShipmentVerifyPickupType = "CONTACT_FEDEX TO_SCHEDULE"
	DROPOFFATFEDEXLOCATION RequestedShipmentVerifyPickupType = "DROPOFF_AT_FEDEX_LOCATION"
	USESCHEDULEDPICKUP     RequestedShipmentVerifyPickupType = "USE_SCHEDULED_PICKUP"
)

// Defines values for RequestedShipmentVerifyRateRequestType.
const (
	RequestedShipmentVerifyRateRequestTypeACCOUNT   RequestedShipmentVerifyRateRequestType = "ACCOUNT"
	RequestedShipmentVerifyRateRequestTypeINCENTIVE RequestedShipmentVerifyRateRequestType = "INCENTIVE"
	RequestedShipmentVerifyRateRequestTypeLIST      RequestedShipmentVerifyRateRequestType = "LIST"
	RequestedShipmentVerifyRateRequestTypeNONE      RequestedShipmentVerifyRateRequestType = "NONE"
	RequestedShipmentVerifyRateRequestTypePREFERRED RequestedShipmentVerifyRateRequestType = "PREFERRED"
	RequestedShipmentVerifyRateRequestTypeRETAIL    RequestedShipmentVerifyRateRequestType = "RETAIL"
)

// Defines values for ReturnEmailDetailAllowedSpecialService.
const (
	SATURDAYDELIVERY ReturnEmailDetailAllowedSpecialService = "SATURDAY_DELIVERY"
	SATURDAYPICKUP   ReturnEmailDetailAllowedSpecialService = "SATURDAY_PICKUP"
)

// Defines values for ReturnShipmentDetailReturnType.
const (
	PENDING          ReturnShipmentDetailReturnType = "PENDING"
	PRINTRETURNLABEL ReturnShipmentDetailReturnType = "PRINT_RETURN_LABEL"
)

// Defines values for ReturnShippingDocumentFormatDocType.
const (
	ReturnShippingDocumentFormatDocTypePDF ReturnShippingDocumentFormatDocType = "PDF"
	ReturnShippingDocumentFormatDocTypePNG ReturnShippingDocumentFormatDocType = "PNG"
)

// Defines values for ReturnShippingDocumentFormatStockType.
const (
	ReturnShippingDocumentFormatStockTypePAPERLETTER ReturnShippingDocumentFormatStockType = "PAPER_LETTER"
)

// Defines values for ShipShipmentEMailNotificationDetailAggregationType.
const (
	ShipShipmentEMailNotificationDetailAggregationTypePERPACKAGE  ShipShipmentEMailNotificationDetailAggregationType = "PER_PACKAGE"
	ShipShipmentEMailNotificationDetailAggregationTypePERSHIPMENT ShipShipmentEMailNotificationDetailAggregationType = "PER_SHIPMENT"
)

// Defines values for ShipShipmentEmailNotificationRecipientEmailNotificationRecipientType.
const (
	ShipShipmentEmailNotificationRecipientEmailNotificationRecipientTypeBROKER     ShipShipmentEmailNotificationRecipientEmailNotificationRecipientType = "BROKER"
	ShipShipmentEmailNotificationRecipientEmailNotificationRecipientTypeOTHER      ShipShipmentEmailNotificationRecipientEmailNotificationRecipientType = "OTHER"
	ShipShipmentEmailNotificationRecipientEmailNotificationRecipientTypeRECIPIENT  ShipShipmentEmailNotificationRecipientEmailNotificationRecipientType = "RECIPIENT"
	ShipShipmentEmailNotificationRecipientEmailNotificationRecipientTypeSHIPPER    ShipShipmentEmailNotificationRecipientEmailNotificationRecipientType = "SHIPPER"
	ShipShipmentEmailNotificationRecipientEmailNotificationRecipientTypeTHIRDPARTY ShipShipmentEmailNotificationRecipientEmailNotificationRecipientType = "THIRD_PARTY"
)

// Defines values for ShipShipmentEmailNotificationRecipientNotificationEventType.
const (
	ShipShipmentEmailNotificationRecipientNotificationEventTypeONDELIVERY             ShipShipmentEmailNotificationRecipientNotificationEventType = "ON_DELIVERY"
	ShipShipmentEmailNotificationRecipientNotificationEventTypeONESTIMATEDDELIVERY    ShipShipmentEmailNotificationRecipientNotificationEventType = "ON_ESTIMATED_DELIVERY"
	ShipShipmentEmailNotificationRecipientNotificationEventTypeONEXCEPTION            ShipShipmentEmailNotificationRecipientNotificationEventType = "ON_EXCEPTION"
	ShipShipmentEmailNotificationRecipientNotificationEventTypeONLABEL                ShipShipmentEmailNotificationRecipientNotificationEventType = "ON_LABEL"
	ShipShipmentEmailNotificationRecipientNotificationEventTypeONPICKUPDRIVERARRIVED  ShipShipmentEmailNotificationRecipientNotificationEventType = "ON_PICKUP_DRIVER_ARRIVED"
	ShipShipmentEmailNotificationRecipientNotificationEventTypeONPICKUPDRIVERASSIGNED ShipShipmentEmailNotificationRecipientNotificationEventType = "ON_PICKUP_DRIVER_ASSIGNED"
	ShipShipmentEmailNotificationRecipientNotificationEventTypeONPICKUPDRIVERDEPARTED ShipShipmentEmailNotificationRecipientNotificationEventType = "ON_PICKUP_DRIVER_DEPARTED"
	ShipShipmentEmailNotificationRecipientNotificationEventTypeONPICKUPDRIVERENROUTE  ShipShipmentEmailNotificationRecipientNotificationEventType = "ON_PICKUP_DRIVER_EN_ROUTE"
	ShipShipmentEmailNotificationRecipientNotificationEventTypeONSHIPMENT             ShipShipmentEmailNotificationRecipientNotificationEventType = "ON_SHIPMENT"
	ShipShipmentEmailNotificationRecipientNotificationEventTypeONTENDER               ShipShipmentEmailNotificationRecipientNotificationEventType = "ON_TENDER"
)

// Defines values for ShipShipmentEmailNotificationRecipientNotificationFormatType.
const (
	ShipShipmentEmailNotificationRecipientNotificationFormatTypeHTML ShipShipmentEmailNotificationRecipientNotificationFormatType = "HTML"
	ShipShipmentEmailNotificationRecipientNotificationFormatTypeTEXT ShipShipmentEmailNotificationRecipientNotificationFormatType = "TEXT"
)

// Defines values for ShipShipmentEmailNotificationRecipientNotificationType.
const (
	EMAIL ShipShipmentEmailNotificationRecipientNotificationType = "EMAIL"
)

// Defines values for ShipmentCODDetailCodCollectionType.
const (
	ANY             ShipmentCODDetailCodCollectionType = "ANY"
	CASH            ShipmentCODDetailCodCollectionType = "CASH"
	COMPANYCHECK    ShipmentCODDetailCodCollectionType = "COMPANY_CHECK"
	GUARANTEEDFUNDS ShipmentCODDetailCodCollectionType = "GUARANTEED_FUNDS"
	PERSONALCHECK   ShipmentCODDetailCodCollectionType = "PERSONAL_CHECK"
)

// Defines values for ShipmentCODDetailReturnReferenceIndicatorType.
const (
	INVOICE   ShipmentCODDetailReturnReferenceIndicatorType = "INVOICE"
	PO        ShipmentCODDetailReturnReferenceIndicatorType = "PO"
	REFERENCE ShipmentCODDetailReturnReferenceIndicatorType = "REFERENCE"
	TRACKING  ShipmentCODDetailReturnReferenceIndicatorType = "TRACKING"
)

// Defines values for ShippingDocumentDispositionDetailDispositionType.
const (
	CONFIRMED        ShippingDocumentDispositionDetailDispositionType = "CONFIRMED"
	DEFERREDQUEUED   ShippingDocumentDispositionDetailDispositionType = "DEFERRED_QUEUED"
	DEFERREDRETURNED ShippingDocumentDispositionDetailDispositionType = "DEFERRED_RETURNED"
	DEFERREDSTORED   ShippingDocumentDispositionDetailDispositionType = "DEFERRED_STORED"
	EMAILED          ShippingDocumentDispositionDetailDispositionType = "EMAILED"
	QUEUED           ShippingDocumentDispositionDetailDispositionType = "QUEUED"
	RETURNED         ShippingDocumentDispositionDetailDispositionType = "RETURNED"
	STORED           ShippingDocumentDispositionDetailDispositionType = "STORED"
)

// Defines values for ShippingDocumentEmailDetailGrouping.
const (
	ShippingDocumentEmailDetailGroupingBYRECIPIENT ShippingDocumentEmailDetailGrouping = "BY_RECIPIENT"
	ShippingDocumentEmailDetailGroupingNONE        ShippingDocumentEmailDetailGrouping = "NONE"
)

// Defines values for ShippingDocumentEmailRecipientRecipientType.
const (
	ShippingDocumentEmailRecipientRecipientTypeBROKER     ShippingDocumentEmailRecipientRecipientType = "BROKER"
	ShippingDocumentEmailRecipientRecipientTypeOTHER      ShippingDocumentEmailRecipientRecipientType = "OTHER"
	ShippingDocumentEmailRecipientRecipientTypeOTHER1     ShippingDocumentEmailRecipientRecipientType = "OTHER1"
	ShippingDocumentEmailRecipientRecipientTypeOTHER2     ShippingDocumentEmailRecipientRecipientType = "OTHER2"
	ShippingDocumentEmailRecipientRecipientTypeRECIPIENT  ShippingDocumentEmailRecipientRecipientType = "RECIPIENT"
	ShippingDocumentEmailRecipientRecipientTypeSHIPPER    ShippingDocumentEmailRecipientRecipientType = "SHIPPER"
	ShippingDocumentEmailRecipientRecipientTypeTHIRDPARTY ShippingDocumentEmailRecipientRecipientType = "THIRD_PARTY"
)

// Defines values for ShippingDocumentFormatDocType.
const (
	PDF ShippingDocumentFormatDocType = "PDF"
)

// Defines values for ShippingDocumentFormatStockType.
const (
	PAPERLETTER ShippingDocumentFormatStockType = "PAPER_LETTER"
)

// Defines values for ShippingDocumentSpecificationShippingDocumentTypes.
const (
	ShippingDocumentSpecificationShippingDocumentTypesCERTIFICATEOFORIGIN                         ShippingDocumentSpecificationShippingDocumentTypes = "CERTIFICATE_OF_ORIGIN"
	ShippingDocumentSpecificationShippingDocumentTypesCOMMERCIALINVOICE                           ShippingDocumentSpecificationShippingDocumentTypes = "COMMERCIAL_INVOICE"
	ShippingDocumentSpecificationShippingDocumentTypesCUSTOMERSPECIFIEDLABELS                     ShippingDocumentSpecificationShippingDocumentTypes = "CUSTOMER_SPECIFIED_LABELS"
	ShippingDocumentSpecificationShippingDocumentTypesCUSTOMPACKAGEDOCUMENT                       ShippingDocumentSpecificationShippingDocumentTypes = "CUSTOM_PACKAGE_DOCUMENT"
	ShippingDocumentSpecificationShippingDocumentTypesCUSTOMSHIPMENTDOCUMENT                      ShippingDocumentSpecificationShippingDocumentTypes = "CUSTOM_SHIPMENT_DOCUMENT"
	ShippingDocumentSpecificationShippingDocumentTypesEXPORTDECLARATION                           ShippingDocumentSpecificationShippingDocumentTypes = "EXPORT_DECLARATION"
	ShippingDocumentSpecificationShippingDocumentTypesGENERALAGENCYAGREEMENT                      ShippingDocumentSpecificationShippingDocumentTypes = "GENERAL_AGENCY_AGREEMENT"
	ShippingDocumentSpecificationShippingDocumentTypesLABEL                                       ShippingDocumentSpecificationShippingDocumentTypes = "LABEL"
	ShippingDocumentSpecificationShippingDocumentTypesOP900                                       ShippingDocumentSpecificationShippingDocumentTypes = "OP_900"
	ShippingDocumentSpecificationShippingDocumentTypesPENDINGSHIPMENTEMAILNOTIFICATION            ShippingDocumentSpecificationShippingDocumentTypes = "PENDING_SHIPMENT_EMAIL_NOTIFICATION"
	ShippingDocumentSpecificationShippingDocumentTypesPROFORMAINVOICE                             ShippingDocumentSpecificationShippingDocumentTypes = "PRO_FORMA_INVOICE"
	ShippingDocumentSpecificationShippingDocumentTypesRETURNINSTRUCTIONS                          ShippingDocumentSpecificationShippingDocumentTypes = "RETURN_INSTRUCTIONS"
	ShippingDocumentSpecificationShippingDocumentTypesUSMCACERTIFICATIONOFORIGIN                  ShippingDocumentSpecificationShippingDocumentTypes = "USMCA_CERTIFICATION_OF_ORIGIN"
	ShippingDocumentSpecificationShippingDocumentTypesUSMCACOMMERCIALINVOICECERTIFICATIONOFORIGIN ShippingDocumentSpecificationShippingDocumentTypes = "USMCA_COMMERCIAL_INVOICE_CERTIFICATION_OF_ORIGIN"
)

// Defines values for SmartPostInfoDetailAncillaryEndorsement.
const (
	ADDRESSCORRECTION        SmartPostInfoDetailAncillaryEndorsement = "ADDRESS_CORRECTION"
	CARRIERLEAVEIFNORESPONSE SmartPostInfoDetailAncillaryEndorsement = "CARRIER_LEAVE_IF_NO_RESPONSE"
	CHANGESERVICE            SmartPostInfoDetailAncillaryEndorsement = "CHANGE_SERVICE"
	FORWARDINGSERVICE        SmartPostInfoDetailAncillaryEndorsement = "FORWARDING_SERVICE"
	RETURNSERVICE            SmartPostInfoDetailAncillaryEndorsement = "RETURN_SERVICE"
)

// Defines values for SmartPostInfoDetailIndicia.
const (
	MEDIAMAIL                   SmartPostInfoDetailIndicia = "MEDIA_MAIL"
	PARCELRETURN                SmartPostInfoDetailIndicia = "PARCEL_RETURN"
	PARCELSELECT                SmartPostInfoDetailIndicia = "PARCEL_SELECT"
	PRESORTEDBOUNDPRINTEDMATTER SmartPostInfoDetailIndicia = "PRESORTED_BOUND_PRINTED_MATTER"
	PRESORTEDSTANDARD           SmartPostInfoDetailIndicia = "PRESORTED_STANDARD"
)

// Defines values for SmartPostInfoDetailSpecialServices.
const (
	USPSDELIVERYCONFIRMATION SmartPostInfoDetailSpecialServices = "USPS_DELIVERY_CONFIRMATION"
)

// Defines values for TaxpayerIdentificationTinType.
const (
	BUSINESSNATIONAL TaxpayerIdentificationTinType = "BUSINESS_NATIONAL"
	BUSINESSSTATE    TaxpayerIdentificationTinType = "BUSINESS_STATE"
	BUSINESSUNION    TaxpayerIdentificationTinType = "BUSINESS_UNION"
	FEDERAL          TaxpayerIdentificationTinType = "FEDERAL"
	PERSONALNATIONAL TaxpayerIdentificationTinType = "PERSONAL_NATIONAL"
	PERSONALSTATE    TaxpayerIdentificationTinType = "PERSONAL_STATE"
)

// Defines values for UploadDocumentReferenceDetailDocumentType.
const (
	UploadDocumentReferenceDetailDocumentTypeCERTIFICATEOFORIGIN                         UploadDocumentReferenceDetailDocumentType = "CERTIFICATE_OF_ORIGIN"
	UploadDocumentReferenceDetailDocumentTypeCOMMERCIALINVOICE                           UploadDocumentReferenceDetailDocumentType = "COMMERCIAL_INVOICE"
	UploadDocumentReferenceDetailDocumentTypeETDLABEL                                    UploadDocumentReferenceDetailDocumentType = "ETD_LABEL"
	UploadDocumentReferenceDetailDocumentTypeOTHER                                       UploadDocumentReferenceDetailDocumentType = "OTHER"
	UploadDocumentReferenceDetailDocumentTypePROFORMAINVOICE                             UploadDocumentReferenceDetailDocumentType = "PRO_FORMA_INVOICE"
	UploadDocumentReferenceDetailDocumentTypeUSMCACERTIFICATIONOFORIGIN                  UploadDocumentReferenceDetailDocumentType = "USMCA_CERTIFICATION_OF_ORIGIN"
	UploadDocumentReferenceDetailDocumentTypeUSMCACOMMERCIALINVOICECERTIFICATIONOFORIGIN UploadDocumentReferenceDetailDocumentType = "USMCA_COMMERCIAL_INVOICE_CERTIFICATION_OF_ORIGIN"
)

// Defines values for UploadDocumentReferenceDetail1DocumentType.
const (
	UploadDocumentReferenceDetail1DocumentTypeCERTIFICATEOFORIGIN                         UploadDocumentReferenceDetail1DocumentType = "CERTIFICATE_OF_ORIGIN"
	UploadDocumentReferenceDetail1DocumentTypeCOMMERCIALINVOICE                           UploadDocumentReferenceDetail1DocumentType = "COMMERCIAL_INVOICE"
	UploadDocumentReferenceDetail1DocumentTypeETDLABEL                                    UploadDocumentReferenceDetail1DocumentType = "ETD_LABEL"
	UploadDocumentReferenceDetail1DocumentTypeNETRATESHEET                                UploadDocumentReferenceDetail1DocumentType = "NET_RATE_SHEET"
	UploadDocumentReferenceDetail1DocumentTypeOTHER                                       UploadDocumentReferenceDetail1DocumentType = "OTHER"
	UploadDocumentReferenceDetail1DocumentTypePROFORMAINVOICE                             UploadDocumentReferenceDetail1DocumentType = "PRO_FORMA_INVOICE"
	UploadDocumentReferenceDetail1DocumentTypeUSMCACERTIFICATIONOFORIGIN                  UploadDocumentReferenceDetail1DocumentType = "USMCA_CERTIFICATION_OF_ORIGIN"
	UploadDocumentReferenceDetail1DocumentTypeUSMCACOMMERCIALINVOICECERTIFICATIONOFORIGIN UploadDocumentReferenceDetail1DocumentType = "USMCA_COMMERCIAL_INVOICE_CERTIFICATION_OF_ORIGIN"
)

// Defines values for UsmcaCertificationOfOriginDetailCertifierSpecification.
const (
	UsmcaCertificationOfOriginDetailCertifierSpecificationEXPORTER UsmcaCertificationOfOriginDetailCertifierSpecification = "EXPORTER"
	UsmcaCertificationOfOriginDetailCertifierSpecificationIMPORTER UsmcaCertificationOfOriginDetailCertifierSpecification = "IMPORTER"
	UsmcaCertificationOfOriginDetailCertifierSpecificationPRODUCER UsmcaCertificationOfOriginDetailCertifierSpecification = "PRODUCER"
)

// Defines values for UsmcaCertificationOfOriginDetailImporterSpecification.
const (
	UsmcaCertificationOfOriginDetailImporterSpecificationUNKNOWN UsmcaCertificationOfOriginDetailImporterSpecification = "UNKNOWN"
	UsmcaCertificationOfOriginDetailImporterSpecificationVARIOUS UsmcaCertificationOfOriginDetailImporterSpecification = "VARIOUS"
)

// Defines values for UsmcaCertificationOfOriginDetailProducerSpecification.
const (
	UsmcaCertificationOfOriginDetailProducerSpecificationAVAILABLEUPONREQUEST UsmcaCertificationOfOriginDetailProducerSpecification = "AVAILABLE_UPON_REQUEST"
	UsmcaCertificationOfOriginDetailProducerSpecificationSAMEASEXPORTER       UsmcaCertificationOfOriginDetailProducerSpecification = "SAME_AS_EXPORTER"
	UsmcaCertificationOfOriginDetailProducerSpecificationVARIOUS              UsmcaCertificationOfOriginDetailProducerSpecification = "VARIOUS"
)

// Defines values for UsmcaCommercialInvoiceCertificationOfOriginDetailCertifierSpecification.
const (
	UsmcaCommercialInvoiceCertificationOfOriginDetailCertifierSpecificationEXPORTER UsmcaCommercialInvoiceCertificationOfOriginDetailCertifierSpecification = "EXPORTER"
	UsmcaCommercialInvoiceCertificationOfOriginDetailCertifierSpecificationIMPORTER UsmcaCommercialInvoiceCertificationOfOriginDetailCertifierSpecification = "IMPORTER"
	UsmcaCommercialInvoiceCertificationOfOriginDetailCertifierSpecificationPRODUCER UsmcaCommercialInvoiceCertificationOfOriginDetailCertifierSpecification = "PRODUCER"
)

// Defines values for UsmcaCommercialInvoiceCertificationOfOriginDetailImporterSpecification.
const (
	UsmcaCommercialInvoiceCertificationOfOriginDetailImporterSpecificationUNKNOWN UsmcaCommercialInvoiceCertificationOfOriginDetailImporterSpecification = "UNKNOWN"
	UsmcaCommercialInvoiceCertificationOfOriginDetailImporterSpecificationVARIOUS UsmcaCommercialInvoiceCertificationOfOriginDetailImporterSpecification = "VARIOUS"
)

// Defines values for UsmcaCommercialInvoiceCertificationOfOriginDetailProducerSpecification.
const (
	UsmcaCommercialInvoiceCertificationOfOriginDetailProducerSpecificationAVAILABLEUPONREQUEST UsmcaCommercialInvoiceCertificationOfOriginDetailProducerSpecification = "AVAILABLE_UPON_REQUEST"
	UsmcaCommercialInvoiceCertificationOfOriginDetailProducerSpecificationSAMEASEXPORTER       UsmcaCommercialInvoiceCertificationOfOriginDetailProducerSpecification = "SAME_AS_EXPORTER"
	UsmcaCommercialInvoiceCertificationOfOriginDetailProducerSpecificationVARIOUS              UsmcaCommercialInvoiceCertificationOfOriginDetailProducerSpecification = "VARIOUS"
)

// Defines values for UsmcaDetailOriginCriterion.
const (
	A UsmcaDetailOriginCriterion = "A"
	B UsmcaDetailOriginCriterion = "B"
	C UsmcaDetailOriginCriterion = "C"
	D UsmcaDetailOriginCriterion = "D"
	E UsmcaDetailOriginCriterion = "E"
)

// Defines values for UsmcaLowValueStatementDetailCustomsRole.
const (
	EXPORTER UsmcaLowValueStatementDetailCustomsRole = "EXPORTER"
	IMPORTER UsmcaLowValueStatementDetailCustomsRole = "IMPORTER"
)

// Defines values for VariableHandlingChargeDetailRateElementBasis.
const (
	VariableHandlingChargeDetailRateElementBasisBASECHARGE              VariableHandlingChargeDetailRateElementBasis = "BASE_CHARGE"
	VariableHandlingChargeDetailRateElementBasisNETCHARGE               VariableHandlingChargeDetailRateElementBasis = "NET_CHARGE"
	VariableHandlingChargeDetailRateElementBasisNETCHARGEEXCLUDINGTAXES VariableHandlingChargeDetailRateElementBasis = "NET_CHARGE_EXCLUDING_TAXES"
	VariableHandlingChargeDetailRateElementBasisNETFREIGHT              VariableHandlingChargeDetailRateElementBasis = "NET_FREIGHT"
)

// Defines values for VariableHandlingChargeDetailRateLevelType.
const (
	VariableHandlingChargeDetailRateLevelTypeBUNDLEDRATE           VariableHandlingChargeDetailRateLevelType = "BUNDLED_RATE"
	VariableHandlingChargeDetailRateLevelTypeINDIVIDUALPACKAGERATE VariableHandlingChargeDetailRateLevelType = "INDIVIDUAL_PACKAGE_RATE"
)

// Defines values for VariableHandlingChargeDetailRateType.
const (
	ACCOUNT            VariableHandlingChargeDetailRateType = "ACCOUNT"
	ACTUAL             VariableHandlingChargeDetailRateType = "ACTUAL"
	CURRENT            VariableHandlingChargeDetailRateType = "CURRENT"
	CUSTOM             VariableHandlingChargeDetailRateType = "CUSTOM"
	INCENTIVE          VariableHandlingChargeDetailRateType = "INCENTIVE"
	LIST               VariableHandlingChargeDetailRateType = "LIST"
	PREFERRED          VariableHandlingChargeDetailRateType = "PREFERRED"
	PREFERREDCURRENCY  VariableHandlingChargeDetailRateType = "PREFERRED_CURRENCY"
	PREFERREDINCENTIVE VariableHandlingChargeDetailRateType = "PREFERRED_INCENTIVE"
)

// Defines values for WeightUnits.
const (
	WeightUnitsKG WeightUnits = "KG"
)

// Defines values for Weight1Units.
const (
	Weight1UnitsKG Weight1Units = "KG"
	Weight1UnitsLB Weight1Units = "LB"
)

// Defines values for Weight3Units.
const (
	Weight3UnitsKG Weight3Units = "KG"
)

// Defines values for Weight4Units.
const (
	Weight4UnitsKG Weight4Units = "KG"
)

// AccountNumber This is FedEx Account number details.
type AccountNumber = PartyAccountNumber

// AdditionalLabelsDetail defines model for AdditionalLabelsDetail.
type AdditionalLabelsDetail struct {
	// Count Specifies the count of label to return.
	Count *int `json:"count,omitempty"`

	// Type Specify the type of additional  details to be added on the label.
	Type *AdditionalLabelsDetailType `json:"type,omitempty"`
}

// AdditionalLabelsDetailType Specify the type of additional  details to be added on the label.
type AdditionalLabelsDetailType string

// AdditionalMeasures defines model for AdditionalMeasures.
type AdditionalMeasures struct {
	// Quantity Specify commodity quantity.
	Quantity *float64 `json:"quantity,omitempty"`

	// Units Unit of measure used to express the quantity of this commodity line item.
	Units *string `json:"units,omitempty"`
}

// Address Descriptive data for a physical location. May be used as an actual physical address (place to which one could go), or as a container of "address parts" which should be handled as a unit (such as a city-state-ZIP combination within the US).
type Address struct {
	// City This is a placeholder for City Name.<br>Note: This is conditional and not required in all the requests.<br>Note: It is recommended for Express shipments for the most accurate ODA and OPA surcharges.<br>Example: Beverly Hills
	City *string `json:"city,omitempty"`

	// CountryCode This is the two-letter country code.<br>Maximum length is 2.<br>Example: US<br><a onclick='loadDocReference("countrycodes")'>click here to see Country codes</a>
	CountryCode string `json:"countryCode"`

	// PostalCode Indicate the Postal code. This is Optional for non postal-aware countries. Maximum length is 10.<br> Example: 65247<br><a onclick='loadDocReference("postalawarecountries")'>click here to see Postal aware countries</a>
	PostalCode *string `json:"postalCode,omitempty"`

	// Residential Indicate whether this address is residential (as opposed to commercial).
	Residential *bool `json:"residential,omitempty"`

	// StateOrProvinceCode This is a placeholder for State or Province code.Only 2 characters are accepted for US and Canada.<br>Example: CA<br><a onclick='loadDocReference("canadaprovincecodes")'>click here to see State or Province Code</a>
	StateOrProvinceCode *string `json:"stateOrProvinceCode,omitempty"`

	// StreetLines This is the combination of number, street name, etc. <br>Note: At least one line is required and streetlines more than 3 will be ignored. Empty lines should not be included. Maximum length per line is 35.<br>Example: [10 FedEx Parkway, Suite 302, .etc.]
	StreetLines []string `json:"streetLines"`
}

// Address1 This is detailed information on physical location. May be used as an actual physical address (place to which one could go), or as a container of address parts which should be handled as a unit (such as a city-state-ZIP combination within the U.S.).
type Address1 struct {
	// City This is a placeholder for City Name.<br>Note: This is conditional and not required in all the requests.<br>Note: It is recommended for Express shipments for the most accurate ODA and OPA surcharges.<br>Example: Beverly Hills
	City *string `json:"city,omitempty"`

	// CountryCode This is the two-letter country code.<br>Maximum length is 2.<br>Example: US<br><a onclick='loadDocReference("countrycodes")'>click here to see Country codes</a>
	CountryCode *string `json:"countryCode,omitempty"`

	// PostalCode Indicate the Postal code. This is Optional for non postal-aware countries. Maximum length is 10.<br> Example: 65247<br><a onclick='loadDocReference("postalawarecountries")'>click here to see Postal aware countries</a>
	PostalCode *string `json:"postalCode,omitempty"`

	// Residential Indicate whether this address is residential (as opposed to commercial).
	Residential *bool `json:"residential,omitempty"`

	// StateOrProvinceCode This is a placeholder for State or Province code.Only 2 characters are accepted for US and Canada.<br>Example: CA<br><a onclick='loadDocReference("canadaprovincecodes")'>click here to see State or Province Code</a>
	StateOrProvinceCode *string `json:"stateOrProvinceCode,omitempty"`

	// StreetLines This is the combination of number, street name, etc. <br>Note: At least one line is required and streetlines more than 3 will be ignored. Empty lines should not be included. Maximum length per line is 35.<br>Example: [10 FedEx Parkway, Suite 302, .etc.]
	StreetLines *[]string `json:"streetLines,omitempty"`
}

// AdrLicenseDetail Specifies the details around the ADR license required for shipping.
type AdrLicenseDetail struct {
	// LicenseOrPermitDetail This contains the ADR license information, which identifies the license number, the effective date and the expiration date under which the customer is allowed to ship.
	LicenseOrPermitDetail *LicenseOrPermitDetail `json:"licenseOrPermitDetail,omitempty"`
}

// AlcoholDetail These are detcontentails for the package containing alcohol. This is required for alcohol special service. The alcoholRecipientType is required.
type AlcoholDetail struct {
	// AlcoholRecipientType Specify the Alcohol Recipient Type of the shipment. <br> Example: LICENSEE
	AlcoholRecipientType *AlcoholDetailAlcoholRecipientType `json:"alcoholRecipientType,omitempty"`

	// ShipperAgreementType Specify the type of entity, the shipper for alcohol shipment is registered such as fulfillment house, retailer or a winery.
	ShipperAgreementType *string `json:"shipperAgreementType,omitempty"`
}

// AlcoholDetailAlcoholRecipientType Specify the Alcohol Recipient Type of the shipment. <br> Example: LICENSEE
type AlcoholDetailAlcoholRecipientType string

// Alert These are alert details received in the response.
type Alert struct {
	// AlertType Specifies the API alert type.
	AlertType *AlertAlertType `json:"alertType,omitempty"`

	// Code Specifies the API alert code.<br>Example: SHIP.RECIPIENT.POSTALCITY.MISMATCH
	Code *string `json:"code,omitempty"`

	// Message Specifies the API alert message.<br>Example: Recipient Postal-City Mismatch.
	Message *string `json:"message,omitempty"`
}

// AlertAlertType Specifies the API alert type.
type AlertAlertType string

// AsynchronousProcessingOptionType1 Indicate the processing option for submitting a Single shot MPS shipment. The value indicates if the MPS to be processed synchronously or asynchronously.<br>Note: <ul><li>Default value is SYNCHRONOUS_ONLY.</li><li>Value or element is not needed when groupPackageCount is less than or equal to 40.</li><li>Must provide element with value ALLOW_ASYNCHRONOUS when groupPackageCount is greater than 40.</li></ul>
type AsynchronousProcessingOptionType1 string

// BaseProcessOutputVO The output details when a tag is cancelled.
type BaseProcessOutputVO = CancelTagOuputVO

// BaseProcessOutputVOCancelShipment The response elements received when a shipment is cancelled.
type BaseProcessOutputVOCancelShipment = CancelShipmentOutputVO

// BaseProcessOutputVOCreateTag Specifies the output details when a tag is created.
type BaseProcessOutputVOCreateTag = CreateTagOutputVO

// BaseProcessOutputVOGetOpenShipmentResults defines model for BaseProcessOutputVO_GetOpenShipmentResults.
type BaseProcessOutputVOGetOpenShipmentResults = GetOpenShipmentResultsOutputVO

// BaseProcessOutputVOShipShipment This is the response received when a shipment is requested.
type BaseProcessOutputVOShipShipment = ShipShipmentOutputVO

// BaseProcessOutputVOValidate The response elements received when a shipment is created.
type BaseProcessOutputVOValidate = VerifyShipmentOutputVO

// BatteryDetail defines model for BatteryDetail.
type BatteryDetail struct {
	// BatteryMaterialType Indicate the material composition of the battery or cell.
	BatteryMaterialType *BatteryDetailBatteryMaterialType `json:"batteryMaterialType,omitempty"`

	// BatteryPackingType Describe the packing arrangement of the battery or cell with respect to other items within the same package.
	BatteryPackingType *BatteryDetailBatteryPackingType `json:"batteryPackingType,omitempty"`

	// BatteryRegulatoryType This is a regulation specific classification for the battery or the cell.
	BatteryRegulatoryType *BatteryDetailBatteryRegulatoryType `json:"batteryRegulatoryType,omitempty"`
}

// BatteryDetailBatteryMaterialType Indicate the material composition of the battery or cell.
type BatteryDetailBatteryMaterialType string

// BatteryDetailBatteryPackingType Describe the packing arrangement of the battery or cell with respect to other items within the same package.
type BatteryDetailBatteryPackingType string

// BatteryDetailBatteryRegulatoryType This is a regulation specific classification for the battery or the cell.
type BatteryDetailBatteryRegulatoryType string

// BillingDetails These are billing details.
type BillingDetails struct {
	// AccountNickname This is account nick name.
	AccountNickname *string `json:"accountNickname,omitempty"`

	// AccountNumber This is bill to account number.
	AccountNumber *string `json:"accountNumber,omitempty"`

	// AccountNumberCountryCode This is the country code of the account number.<br>Example: CA
	AccountNumberCountryCode *string `json:"accountNumberCountryCode,omitempty"`

	// AliasId This is bill to alias identifier.
	AliasId *string `json:"aliasId,omitempty"`

	// BillingCode Indicates a billing code.
	BillingCode *string `json:"billingCode,omitempty"`

	// BillingType These are duties and taxes billing type.
	BillingType *string `json:"billingType,omitempty"`
}

// BinaryBarcode Each instance of this data type represents a barcode whose content must be represented as binary data (i.e. not ASCII text).
type BinaryBarcode struct {
	// Type This is the type of barcode data available in this instance.<br> Example: COMMON-2D
	Type *string `json:"type,omitempty"`

	// Value This is the value.
	Value *[]byte `json:"value,omitempty"`
}

// BrokerDetail These are broker details for the shipment.
type BrokerDetail struct {
	// Broker These are broker details for the shipment with physical address, contact and account number information.
	Broker *struct {
		// AccountNumber This is FedEx Account number details.
		AccountNumber *PartyAccountNumber `json:"accountNumber,omitempty"`

		// Address Specifies broker address details.
		Address interface{} `json:"address"`

		// Contact Specifies broker contact details.
		Contact interface{} `json:"contact"`

		// Tins This is the tax identification number details.
		Tins *[]TaxpayerIdentification `json:"tins,omitempty"`
	} `json:"broker,omitempty"`

	// Type Identifies the type of broker.
	Type *BrokerDetailType `json:"type,omitempty"`
}

// BrokerDetailType Identifies the type of broker.
type BrokerDetailType string

// CODTransportationChargesDetail Use this object to specify C.O.D. transportation charges.
type CODTransportationChargesDetail struct {
	// ChargeLevelType Specify which level the charges to be applied.
	ChargeLevelType *CODTransportationChargesDetailChargeLevelType `json:"chargeLevelType,omitempty"`

	// ChargeType Specify Charge type.
	ChargeType *CODTransportationChargesDetailChargeType `json:"chargeType,omitempty"`

	// RateLevelType Specify which level the rate to be applied.
	RateLevelType *CODTransportationChargesDetailRateLevelType `json:"rateLevelType,omitempty"`

	// RateType Specify the Rate Type used.
	RateType *CODTransportationChargesDetailRateType `json:"rateType,omitempty"`
}

// CODTransportationChargesDetailChargeLevelType Specify which level the charges to be applied.
type CODTransportationChargesDetailChargeLevelType string

// CODTransportationChargesDetailChargeType Specify Charge type.
type CODTransportationChargesDetailChargeType string

// CODTransportationChargesDetailRateLevelType Specify which level the rate to be applied.
type CODTransportationChargesDetailRateLevelType string

// CODTransportationChargesDetailRateType Specify the Rate Type used.
type CODTransportationChargesDetailRateType string

// CXSError Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter
type CXSError struct {
	// Code Indicates the error code.<br>Example: SHIPMENT.USER.UNAUTHORIZED
	Code *string `json:"code,omitempty"`

	// Message Indicates the description of API error alert message.<br>Example: Requested user is not authorized to perform the operation.
	Message       *string      `json:"message,omitempty"`
	ParameterList *[]Parameter `json:"parameterList,omitempty"`
}

// CXSError401 Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter
type CXSError401 struct {
	// Code Indicates the error code.<br>Example: NOT.AUTHORIZED.ERROR
	Code *string `json:"code,omitempty"`

	// Message Indicates the description of API error alert message.<br>Example: Access token expired. Please modify your request and try again.
	Message *interface{} `json:"message,omitempty"`

	// ParameterList Specifies list of parameters.
	ParameterList *[]Parameter `json:"parameterList,omitempty"`
}

// CXSError403 Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter
type CXSError403 struct {
	// Code Indicates the error code.<br>Example: FORBIDDEN.ERROR
	Code *string `json:"code,omitempty"`

	// Message Indicates the description of API error alert message.<br>Example: We could not authorize your credentials. Please check your permissions and try again
	Message *interface{} `json:"message,omitempty"`

	// ParameterList Specifies list of parameters.
	ParameterList *[]Parameter `json:"parameterList,omitempty"`
}

// CXSError404 Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter
type CXSError404 struct {
	// Code Indicates the error code.<br>Example: NOT.FOUND.ERROR
	Code *string `json:"code,omitempty"`

	// Message Indicates the description of API error alert message.<br>Example: The resource you requested is no longer available. Please modify your request and try again.
	Message *interface{} `json:"message,omitempty"`

	// ParameterList Specifies list of parameters.
	ParameterList *[]Parameter `json:"parameterList,omitempty"`
}

// CXSError500 Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter
type CXSError500 struct {
	// Code Indicates the error code.<br>Example: INTERNAL.SERVER.ERROR
	Code *string `json:"code,omitempty"`

	// Message Indicates the description of API error alert message.<br>Example: We encountered an unexpected error and are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time.
	Message *interface{} `json:"message,omitempty"`

	// ParameterList Specifies list of parameters.
	ParameterList *[]Parameter `json:"parameterList,omitempty"`
}

// CXSError503 Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter
type CXSError503 struct {
	// Code Indicates the error code.<br>Example: SERVICE.UNAVAILABLE.ERROR
	Code *string `json:"code,omitempty"`

	// Message Indicates the description of API error alert message.<br>Example: The service is currently unavailable and we are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time.
	Message *interface{} `json:"message,omitempty"`

	// ParameterList Specifies list of parameters.
	ParameterList *[]Parameter `json:"parameterList,omitempty"`
}

// CXSError2 Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter
type CXSError2 struct {
	// Code Indicates the error code.<br>Example: SHIPMENT.USER.UNAUTHORIZED
	Code *string `json:"code,omitempty"`

	// Message Indicates the description of API error alert message.<br>Example: Requested user is not authorized to perform the operation.
	Message       *string      `json:"message,omitempty"`
	ParameterList *[]Parameter `json:"parameterList,omitempty"`
}

// CancelShipmentOutputVO The response elements received when a shipment is cancelled.
type CancelShipmentOutputVO struct {
	// Alerts This is a cancellation request alert. This alert includes information such as alert code, alert type, and alert message.
	Alerts *[]Alert `json:"alerts,omitempty"`

	// CancelledHistory Indicates whether the shipment has been deleted from history or not. If the value is True, then it indicates that the shipment has been deleted.<br>Example: true
	CancelledHistory *bool `json:"cancelledHistory,omitempty"`

	// CancelledShipment Indicates whether the shipment has been cancelled or not. If the value is True, then it indicates that the shipment has been cancelled.<br>Example: true
	CancelledShipment *bool `json:"cancelledShipment,omitempty"`

	// SuccessMessage The success message generated during cancellation request for Shipment.<br>Example: Success
	SuccessMessage *string `json:"successMessage,omitempty"`
}

// CancelTagOuputVO The output details when a tag is cancelled.
type CancelTagOuputVO struct {
	// CancelledTag Indicates whether the tag has been cancelled or not. If true, then the tag has been successfully cancelled.<br>Example: true
	CancelledTag *bool `json:"cancelledTag,omitempty"`

	// SuccessMessage Message received when a tag is successfully cancelled.<br>Example: success
	SuccessMessage *string `json:"successMessage,omitempty"`
}

// CertificateOfOriginDetail The instructions indicating how to print the Certificate of Origin ( e.g. whether or not to include the instructions, image type, etc ...)
type CertificateOfOriginDetail struct {
	// CustomerImageUsages Specifies the usage and identification of customer supplied images to be used on this document.
	CustomerImageUsages *[]CustomerImageUsage `json:"customerImageUsages,omitempty"`

	// DocumentFormat Specify the shipping document format.
	DocumentFormat *ShippingDocumentFormat `json:"documentFormat,omitempty"`
}

// CommercialInvoice Use this object to provide Commercial Invoice details. This element is required for electronic upload of CI data. It will serve to create/transmit an electronic Commercial Invoice through the FedEx system.<br>Customers are responsible for printing their own Commercial Invoice.<br>If you would like FedEx to generate a Commercial Invoice and transmit it to Customs for clearance purposes, you need to specify that in the ETDDetail/RequestedDocumentCopies element.<br>Supports maximum of 99 commodity line items.
type CommercialInvoice struct {
	// Comments The comments that will populate the Commercial Invoice (or Pro Forma). Only the comments specified in the first two indexes of the array will be printed on the invoice and other comments would be ignored as the limitation is set for only two indexes. It considers the comment which is in the first index as a Special Instructions, Hence the comment at first index will be printed under special instructions and the other will be printed at comments section in the Commercial Invoice Document. <br>Example: comments
	Comments *[]string `json:"comments,omitempty"`

	// CustomerReferences These are additional customer reference data for commercial invoice.
	CustomerReferences *[]CustomerReference `json:"customerReferences,omitempty"`

	// DeclarationStatement This is the declaration statement which will populate the Commercial Invoice (or Pro Forma).<br>Maximum length is 554.<br>Example: declarationStatement
	DeclarationStatement *string `json:"declarationStatement,omitempty"`

	// EmailNotificationDetail These are email disposition details. Provides the type and email addresses of e-mail recipients. If returnedDispositionDetail in labelSpecification is set as true then email will be send with label and documents copy.
	EmailNotificationDetail *ShipEmailDispositionDetail `json:"emailNotificationDetail,omitempty"`

	// FreightCharge Indicate the freight charge.
	FreightCharge *Money `json:"freightCharge,omitempty"`

	// HandlingCosts Indicate the handling cost.
	HandlingCosts *Money `json:"handlingCosts,omitempty"`

	// OriginatorName The originator name that will populate the Commercial Invoice (or Pro Forma).
	OriginatorName *string `json:"originatorName,omitempty"`

	// PackingCosts Indicate the packing cost.
	PackingCosts *Money `json:"packingCosts,omitempty"`

	// ShipmentPurpose This is the reason for the shipment. <br>Note: SOLD is not a valid purpose for a Proforma Invoice.
	ShipmentPurpose *CommercialInvoiceShipmentPurpose `json:"shipmentPurpose,omitempty"`

	// SpecialInstructions These are special instructions that will be populated on the Commercial Invoice (or Pro Forma).<br>Example: specialInstructions
	SpecialInstructions *string `json:"specialInstructions,omitempty"`

	// TaxesOrMiscellaneousCharge Indicate the taxes or miscellaneous charges(other than freight charges or insurance charges) that are associated with the shipment.
	TaxesOrMiscellaneousCharge *Money `json:"taxesOrMiscellaneousCharge,omitempty"`

	// TaxesOrMiscellaneousChargeType Indicate the type of taxes Or miscellaneous charge.
	TaxesOrMiscellaneousChargeType *CommercialInvoiceTaxesOrMiscellaneousChargeType `json:"taxesOrMiscellaneousChargeType,omitempty"`

	// TermsOfSale Specify terms Of Sale that will be populated on the Commercial Invoice (or Pro Forma). Maximum length is 3<br>Valid values are:<ul><li>FCA/FOB (Free Carrier/Free On Board): Seller is responsible for all costs of delivering goods to destination. (Default)</li><li>CIP (Costs, Insurance Paid): Seller is responsible for miscellaneous charges to destination.</li><li>CPT (Carriage Paid To): Buyer is responsible for insurance.</li><li>EXW (Ex Works): Seller makes goods available to buyer. Buyer is responsible for delivering goods to destination.</li><li>DDU (Delivered Duty Unpaid): Seller is responsible for delivering goods to destination. Buyer is responsible for clearing goods through Bureau of Customs and Border Protection.</li><li>DDP (Delivered Duty Paid): Seller is responsible for delivering goods to destination, including duties, taxes, and miscellaneous fees.</li><li>DAP (Delivered at Place): Seller pays for carriage to the named place, except for costs related to import clearance, and assumes all risks prior to the point that the goods are ready for unloading by the buyer.</li><li>DPU(Deliver at Place of Unloading)</li></ul>
	TermsOfSale *string `json:"termsOfSale,omitempty"`
}

// CommercialInvoiceShipmentPurpose This is the reason for the shipment. <br>Note: SOLD is not a valid purpose for a Proforma Invoice.
type CommercialInvoiceShipmentPurpose string

// CommercialInvoiceTaxesOrMiscellaneousChargeType Indicate the type of taxes Or miscellaneous charge.
type CommercialInvoiceTaxesOrMiscellaneousChargeType string

// CommercialInvoiceDetail The instructions indicating how to print the Commercial Invoice( e.g. image type) Specifies characteristics of a shipping document to be produced.
type CommercialInvoiceDetail struct {
	// CustomerImageUsages Specifies the usage and identification of customer supplied images to be used on this document.
	CustomerImageUsages *[]CustomerImageUsage `json:"customerImageUsages,omitempty"`

	// DocumentFormat Specify the shipping document format.
	DocumentFormat *ShippingDocumentFormat `json:"documentFormat,omitempty"`
}

// Commodity defines model for Commodity.
type Commodity struct {
	// AdditionalMeasures This object contains additional quantitative information other than weight and quantity to calculate duties and taxes.
	AdditionalMeasures *[]AdditionalMeasures `json:"additionalMeasures,omitempty"`

	// CIMarksAndNumbers This is an identifying mark or number used on the packaging of a shipment to help customers identify a particular shipment<br>Example: 87123
	CIMarksAndNumbers *string `json:"cIMarksAndNumbers,omitempty"`

	// CountryOfManufacture This is commodity country of manufacture. This is required for International shipments. Maximum allowed length is 4.<br>Example: US<br><a onclick='loadDocReference("countrycodes")'>click here to see Country codes</a>
	CountryOfManufacture *string `json:"countryOfManufacture,omitempty"`

	// CustomsValue This customs value is applicable for all items(or units) under the specified commodity.
	CustomsValue *CustomsMoney `json:"customsValue,omitempty"`

	// Description This is the commodity description. Maximum allowed 450 characters.<br><a onclick='loadDocReference("vaguecommoditydescriptions")'>click here to see Vague commodity descriptions</a>
	Description string `json:"description"`

	// ExportLicenseExpirationDate Specify the export license expiration date for the shipment.<br>Format YYYY-MM-DD<br>Example : 2009-04-12
	ExportLicenseExpirationDate *time.Time `json:"exportLicenseExpirationDate,omitempty"`

	// ExportLicenseNumber This is the export license number for the shipment.<br>Example: 26456
	ExportLicenseNumber *string `json:"exportLicenseNumber,omitempty"`

	// HarmonizedCode This is to specify the Harmonized Tariff System (HTS) code to meet U.S. and foreign governments' customs requirements. These are mainly used to estimate the duties and taxes.<br>Example: 0613<br>To research the classification for your commodity, use the FedEx Global Trade Manager online at <a href='http://www.fedex.com/gtm' target='_blank'>fedex.com/gtm</a>. You will find country-specific information to determine whether your commodity is considered to be a document or non-document for your destination.
	HarmonizedCode *string `json:"harmonizedCode,omitempty"`

	// Name This is Commodity name.<br>Example: Non-Threaded Rivets
	Name *string `json:"name,omitempty"`

	// NumberOfPieces Indicate the number of pieces associated with the commodity. The value can neither be negative nor exceed 9,999.<br>Example: 12
	NumberOfPieces *int32 `json:"numberOfPieces,omitempty"`

	// PartNumber This is a part number.<br>Example: 167
	PartNumber *string `json:"partNumber,omitempty"`

	// Purpose This is the purpose of this shipment. This is used for calculation of duties and taxes.
	Purpose *CommodityPurpose `json:"purpose,omitempty"`

	// Quantity This is the units quantity (using quantityUnits as the unit of measure) per commodity. This is used to estimate duties and taxes.<br> Example: 125
	Quantity *int32 `json:"quantity,omitempty"`

	// QuantityUnits This is the unit of measure for the units quantity. This is used to estimate duties and taxes.<br>Example: EA<br><a onclick='loadDocReference("harmonizedsystemcodeunitofmeasure-table1")'>click here to see Commodity Unit Measures</a>
	QuantityUnits *string `json:"quantityUnits,omitempty"`

	// UnitPrice This is the unit price.
	UnitPrice *Money `json:"unitPrice,omitempty"`

	// UsmcaDetail Indicates the USMCA detail
	UsmcaDetail *UsmcaDetail `json:"usmcaDetail,omitempty"`

	// Weight It is the unit weight of the commodity.<br>Note: Weight is not required for One rate shipments
	Weight *Weight4 `json:"weight,omitempty"`
}

// CommodityPurpose This is the purpose of this shipment. This is used for calculation of duties and taxes.
type CommodityPurpose string

// CompletedEtdDetail These are completed ETD details when ELECTRONIC_TRADE_DOCUMENTS Special service type is requested
type CompletedEtdDetail struct {
	// FolderId Returns the folder id where the documents is uploaded <br> Example: "0b0493e580dc1a1b"
	FolderId *string `json:"folderId,omitempty"`

	// Type Returns the type of the document that is being uploaded <br> Example: "COMMERCIAL_INVOICE"
	Type *string `json:"type,omitempty"`

	// UploadDocumentReferenceDetails Specify the document upload reference details.
	UploadDocumentReferenceDetails *[]UploadDocumentReferenceDetail `json:"uploadDocumentReferenceDetails,omitempty"`
}

// CompletedHazardousPackageDetail Complete package-level hazardous commodity information for a single package.
type CompletedHazardousPackageDetail struct {
	// Accessibility Specifies the hazardous package accessibility.<br>Example: ACCESSIBLE
	Accessibility *string `json:"accessibility,omitempty"`

	// CargoAircraftOnly A Boolean value that, when True, specifies the mode of shipment transportation should be Cargo Aircraft for Dangerous Goods. Its default value is set as False.<br>Note: An identifier DGD-CAO is added in AWB for cargo aircraft shipments.
	CargoAircraftOnly *bool `json:"cargoAircraftOnly,omitempty"`

	// Containers Indicates one or more approved containers used to pack dangerous goods commodities. This does not describe any individual inner receptacles that may be within this container.
	Containers *[]ValidatedHazardousContainer `json:"containers,omitempty"`

	// LabelType Specifies the label type of hazardous package.<br>Example: II_YELLOW
	LabelType *string `json:"labelType,omitempty"`

	// RadioactiveTransportIndex Specifies the maximum radiation level from the package (measured in microSieverts per hour at a distance of one meter from the external surface of the package, divided by 10).<br>Example: 2.45
	RadioactiveTransportIndex *float64 `json:"radioactiveTransportIndex,omitempty"`

	// ReferenceId A unique reference id that matches the package to a package configuration. This is populated if the client provided a package configuration for several packages that have the exact same dangerous goods content.<br>Example: 123456
	ReferenceId *string `json:"referenceId,omitempty"`

	// Regulation Specifies the hazardous package regulation type.<br>Example: IATA
	Regulation *string `json:"regulation,omitempty"`
}

// CompletedHazardousShipmentDetail Completed shipment level hazardous commodity information.
type CompletedHazardousShipmentDetail struct {
	// AdrLicense Specifies the details around the ADR license required for shipping.
	AdrLicense *AdrLicenseDetail `json:"adrLicense,omitempty"`

	// DryIceDetail Specifies the shipment level totals of dry ice data across all packages.
	DryIceDetail *ShipmentDryIceDetail `json:"dryIceDetail,omitempty"`

	// HazardousSummaryDetail Specifies Completed Hazardous Summary Detail.
	HazardousSummaryDetail *CompletedHazardousSummaryDetail `json:"hazardousSummaryDetail,omitempty"`
}

// CompletedHazardousSummaryDetail Specifies Completed Hazardous Summary Detail.
type CompletedHazardousSummaryDetail struct {
	// SmallQuantityExceptionPackageCount Specifies the total number of packages containing hazardous commodities in small exceptions.<br>Example: 10
	SmallQuantityExceptionPackageCount *int32 `json:"smallQuantityExceptionPackageCount,omitempty"`
}

// CompletedHoldAtLocationDetail This is default holding location information when HOLD_AT_LOCATION special service is requested and the client does not specify the hold location address.
type CompletedHoldAtLocationDetail struct {
	// HoldingLocation Indicate the physical address of the FedEx holding location.
	HoldingLocation *JustContactAndAddress `json:"holdingLocation,omitempty"`

	// HoldingLocationType Indicates the type of the FedEx holding location <br>Example: FEDEX_STAFFED
	HoldingLocationType *string `json:"holdingLocationType,omitempty"`
}

// CompletedPackageDetail defines model for CompletedPackageDetail.
type CompletedPackageDetail struct {
	// DryIceWeight Descriptive data required for a FedEx shipment containing dry ice. Includes weight and units. This element is required when SpecialServiceType DRY_ICE is present in the SpecialServiceTypes collection at the package level.
	DryIceWeight *Weight `json:"dryIceWeight,omitempty"`

	// GroupNumber This is group shipment number. Used with request containing PACKAGE_GROUPS, to identify which group of identical packages was used to produce a reply item.<br>Example: 10
	GroupNumber *int32 `json:"groupNumber,omitempty"`

	// HazardousPackageDetail Complete package-level hazardous commodity information for a single package.
	HazardousPackageDetail *CompletedHazardousPackageDetail `json:"hazardousPackageDetail,omitempty"`

	// OperationalDetail Package-level data required for labeling and/or movement.
	OperationalDetail *PackageOperationalDetail `json:"operationalDetail,omitempty"`

	// OversizeClass Indicates the oversize classification.<br>Example: OVERSIZE_1
	OversizeClass *string `json:"oversizeClass,omitempty"`

	// PackageRating This class groups together all package-level rate data for a single package (across all rate types) as part of the response to a shipping request, which groups shipment-level data together and groups package-level data by package.
	PackageRating *PackageRating `json:"packageRating,omitempty"`

	// SequenceNumber This is package sequence number. No negative value or decimals are allowed.<br>Example: 256
	SequenceNumber *int32 `json:"sequenceNumber,omitempty"`

	// SignatureOption It specifies the signature option applied, to allow cases in which the value requested conflicted with other service features in the shipment. <br>Example: DIRECT
	SignatureOption *string `json:"signatureOption,omitempty"`

	// TrackingIds Tracking details of the package.
	TrackingIds *[]TrackingId `json:"trackingIds,omitempty"`
}

// CompletedShipmentDetail Returns the result of processing the desired package as a single-package shipment.
type CompletedShipmentDetail struct {
	// AccessDetail This information describes how and when a online email return label shipment may be accessed for completion.
	AccessDetail *PendingShipmentAccessDetail `json:"accessDetail,omitempty"`

	// CarrierCode Specify the four letter code of a FedEx operating company that meets your requirements<br>Examples of FedEx Operating Companies are:<ul><li>FDXE - FedEx Express</li><li>FDXG - FedEx Ground</li><li>FXSP - FedEx SmartPost</li><li>FXCC - FedEx Custom Critical.</li></ul>
	CarrierCode *string `json:"carrierCode,omitempty"`

	// CompletedEtdDetail These are completed ETD details when ELECTRONIC_TRADE_DOCUMENTS Special service type is requested
	CompletedEtdDetail *CompletedEtdDetail `json:"completedEtdDetail,omitempty"`

	// CompletedHoldAtLocationDetail This is default holding location information when HOLD_AT_LOCATION special service is requested and the client does not specify the hold location address.
	CompletedHoldAtLocationDetail *CompletedHoldAtLocationDetail `json:"completedHoldAtLocationDetail,omitempty"`

	// CompletedPackageDetails Indicates the completed package details.
	CompletedPackageDetails *[]CompletedPackageDetail `json:"completedPackageDetails,omitempty"`

	// DocumentRequirements Indicates the document requirements detail.
	DocumentRequirements *DocumentRequirementsDetail `json:"documentRequirements,omitempty"`

	// ExportComplianceStatement For US export shipments requiring an EEI, enter the ITN number received from AES when you filed your shipment or the FTR (Foreign Trade Regulations) exemption number.The proper format for an ITN number is AES XYYYYMMDDNNNNNN where YYYYMMDD is date and NNNNNN are numbers generated by the AES.<br> Example: AESX20220714987654<br>Note: The ITN or FTR exemption number you submit in the ship request prints on the international shipping label.<br><br>For CA export shipments,it can be Proof of report number(15-32 alphanumeric) , Summary proof of report number(7-32 alphanumeric) or Exemption number(2 digit) based on the selected b13AFilingOption.<br>Example: 98765432107654321(POR number), 7654321(Summary POR number) and 02(Exemption number).<br>For FTR exemption number you need provide a predefined value as NO_EEI_30_37_A.
	ExportComplianceStatement *string `json:"exportComplianceStatement,omitempty"`

	// HazardousShipmentDetail Completed shipment level hazardous commodity information.
	HazardousShipmentDetail *CompletedHazardousShipmentDetail `json:"hazardousShipmentDetail,omitempty"`

	// MasterTrackingId Indicates the tracking details of the package.
	MasterTrackingId *TrackingId `json:"masterTrackingId,omitempty"`

	// OperationalDetail Indicates the shipment level operational information.
	OperationalDetail *ShipmentOperationalDetail `json:"operationalDetail,omitempty"`

	// PackagingDescription Specifies packaging description.
	PackagingDescription *string `json:"packagingDescription,omitempty"`

	// ServiceDescription Descriptions for a service.
	ServiceDescription *ServiceDescription `json:"serviceDescription,omitempty"`

	// ShipmentRating All shipment-level rating data for this shipment, which may include data for multiple rate types.
	ShipmentRating *ShipmentRating `json:"shipmentRating,omitempty"`

	// UsDomestic Indicates whether or not this is an intra-U.S. shipment.
	UsDomestic *bool `json:"usDomestic,omitempty"`
}

// CompletedTagDetail defines model for CompletedTagDetail.
type CompletedTagDetail = CompletedTagDetail2

// CompletedTagDetail2 defines model for CompletedTagDetail_2.
type CompletedTagDetail2 struct {
	// ConfirmationNumber Confirmation Number.<br>Example: 275
	ConfirmationNumber string `json:"confirmationNumber"`

	// DispatchDate The dispatch date for the FedEx Tag to be cancelled.<br>Example: 2019-08-03
	DispatchDate string `json:"dispatchDate"`

	// Location Applicable for FedEx Express services.<br>Example: NQAA
	Location string `json:"location"`
}

// Contact Specify the contact information.
type Contact struct {
	// CompanyName Specify company name.
	CompanyName *string `json:"companyName,omitempty"`

	// EmailAddress Specify email address.<br>Example: sample@company.com
	EmailAddress *string `json:"emailAddress,omitempty"`

	// FaxNumber Specify fax number.<br>Example: XXXX567890
	FaxNumber *string `json:"faxNumber,omitempty"`

	// PagerNumber Specify pager number.<br>Example: XXX7812
	PagerNumber *string `json:"pagerNumber,omitempty"`

	// PersonName Specify person name.<br>Example: John Taylor
	PersonName *string `json:"personName,omitempty"`

	// PhoneExtension The shipper's phone extension. Max length is 6.<br>Example: 91
	PhoneExtension *string `json:"phoneExtension,omitempty"`

	// PhoneNumber The shippers phone number. <br>Minimum length is 10 and supports maximum of 15 for certain countries using longer phone numbers.<br>Note: For US and CA, a phone number must have exactly 10 digits, plus an optional leading country code of 1 or +1.<br>Example: 918xxxxx890
	PhoneNumber *string `json:"phoneNumber,omitempty"`

	// Title Specify the title of the contact.
	Title *string `json:"title,omitempty"`

	// TollFreePhoneNumber Specify toll free phone number.<br>Example: XXXX7812
	TollFreePhoneNumber *string `json:"tollFreePhoneNumber,omitempty"`
}

// ContactAndAddress Specifies the contact and address details of a location.
type ContactAndAddress struct {
	// Address This is detailed information on physical location. May be used as an actual physical address (place to which one could go), or as a container of address parts which should be handled as a unit (such as a city-state-ZIP combination within the U.S.).
	Address *Address1 `json:"address,omitempty"`

	// Contact Indicate the contact details of the shipper.
	Contact *Contact1 `json:"contact,omitempty"`
}

// ContactAndAddress1 Specifies the contact and address details of a location.
type ContactAndAddress1 struct {
	// Address This is detailed information on physical location. May be used as an actual physical address (place to which one could go), or as a container of address parts which should be handled as a unit (such as a city-state-ZIP combination within the U.S.).
	Address *Address1 `json:"address,omitempty"`

	// Contact Indicate the contact details of the shipper.
	Contact *Contact2 `json:"contact,omitempty"`
}

// ContactAndAddressVerify Specifies the contact and address details of a location.
type ContactAndAddressVerify struct {
	// Address This is detailed information on physical location. May be used as an actual physical address (place to which one could go), or as a container of address parts which should be handled as a unit (such as a city-state-ZIP combination within the U.S.).
	Address *Address1 `json:"address,omitempty"`

	// Contact Indicate the contact details of the shipper.
	Contact *ContactVerify `json:"contact,omitempty"`
}

// Contact1 Indicate the contact details of the shipper.
type Contact1 struct {
	// CompanyName Specify contact company name.<br>Recommended length is 35.<br>Note: There's no specific validation for the company name.
	CompanyName *string `json:"companyName,omitempty"`

	// EmailAddress Specify contact email address. Maximum length is 80. <br> Example: sample@company.com
	EmailAddress *string `json:"emailAddress,omitempty"`

	// FaxNumber Specify contact fax number.<br>Note: Recommended length is 15. There's no specific validation for the fax number.<br> Example: 1234567890
	FaxNumber *string `json:"faxNumber,omitempty"`

	// PersonName Specify contact person name.<br>Recommended length is 70. <br>Note: There's no specific validation for the person name.<br> Example: John Taylor
	PersonName *string `json:"personName,omitempty"`

	// PhoneExtension Specify contact phone extension. <br>Note: Recommended length is 6. There's no specific validation for the phone extension. <br> Example: 1234
	PhoneExtension *string `json:"phoneExtension,omitempty"`

	// PhoneNumber Contact person's phone number. <br>Minimum length is 10 and supports maximum of 15 for certain countries using longer phone numbers.<br>Note: For US and CA, a phone number must have exactly 10 digits, plus an optional leading country code of '1' or '+1'.<br>Example: 918xxxxx890
	PhoneNumber *string `json:"phoneNumber,omitempty"`
}

// Contact2 Indicate the contact details of the shipper.
type Contact2 struct {
	// CompanyName Specify contact company name.<br>Recommended length is 35.<br>Note: There's no specific validation for the company name.
	CompanyName *string `json:"companyName,omitempty"`

	// EmailAddress Specify contact email address. Maximum length is 80. <br> Example: sample@company.com
	EmailAddress *string `json:"emailAddress,omitempty"`

	// FaxNumber Specify contact fax number.<br>Note: Recommended length is 15. There's no specific validation for the fax number.<br> Example: 1234567890
	FaxNumber *string `json:"faxNumber,omitempty"`

	// PersonName Specify contact person name.<br>Recommended length is 70. <br>Note: There's no specific validation for the person name.<br> Example: John Taylor
	PersonName *string `json:"personName,omitempty"`

	// PhoneExtension Specify contact phone extension. <br>Note: Recommended length is 6. There's no specific validation for the phone extension. <br> Example: 1234
	PhoneExtension *string `json:"phoneExtension,omitempty"`

	// PhoneNumber Specify contact phone number. <br>Minimum length is 10 and supports maximum of 15 for certain countries using longer phone numbers. <br>Note: Recommended Maximum length is 15 and there's no specific validation will be done for the phone number. <br> Example: 918xxxxx890
	PhoneNumber *string `json:"phoneNumber,omitempty"`
}

// ContactVerify Indicate the contact details of the shipper.
type ContactVerify struct {
	// CompanyName Specify contact company name.<br>Recommended length is 35.<br>Note: There's no specific validation for the company name.
	CompanyName *string `json:"companyName,omitempty"`

	// EmailAddress Specify contact email address. Maximum length is 80. <br> Example: sample@company.com
	EmailAddress *string `json:"emailAddress,omitempty"`

	// FaxNumber Specify contact fax number.<br>Note: Recommended length is 15. There's no specific validation for the fax number.<br> Example: 1234567890
	FaxNumber *string `json:"faxNumber,omitempty"`

	// PersonName Specify contact person name.<br>Recommended length is 70.<br>Note: There's no specific validation for the person name.<br> Example: John Taylor
	PersonName *string `json:"personName,omitempty"`

	// PhoneExtension Specify contact phone extension. <br>Note: Recommended length is 6. There's no specific validation for the phone extension. <br> Example: 1234
	PhoneExtension *string `json:"phoneExtension,omitempty"`

	// PhoneNumber Specify contact phone number. <br>Minimum length is 10 and supports maximum of 15 for certain countries using longer phone numbers. <br>Note: Recommended Maximum length is 15 and there's no specific validation will be done for the phone number. <br> Example: 918xxxxx890
	PhoneNumber *string `json:"phoneNumber,omitempty"`
}

// ContentRecord Use this object to specify package content details.
type ContentRecord struct {
	// Description This is the description of the package item.
	Description *string `json:"description,omitempty"`

	// ItemNumber This is a package item number.
	ItemNumber *string `json:"itemNumber,omitempty"`

	// PartNumber This is the part number.
	PartNumber *string `json:"partNumber,omitempty"`

	// ReceivedQuantity This is the package item quantity.
	ReceivedQuantity *int32 `json:"receivedQuantity,omitempty"`
}

// CreateTagOutputVO Specifies the output details when a tag is created.
type CreateTagOutputVO struct {
	// Alerts Specifies the alerts received when a tag is created. This includes the alert code, alert type, and alert message.
	Alerts *[]Alert `json:"alerts,omitempty"`

	// CompletedTagDetail Specifies the pickup confirmation and location details for the return tag shipment.
	CompletedTagDetail *CompletedTagDetail `json:"completedTagDetail,omitempty"`

	// MasterTrackingNumber Specifies the Master Tracking Number for the requested shipment.<br>Example: 997338100007320
	MasterTrackingNumber *string `json:"masterTrackingNumber,omitempty"`

	// ServiceType Specifies the service type for this shipment.<br>Example: GROUND_HOME_DELIVERY<br><a onclick='loadDocReference("servicetypes")'>Click here to see Service Types</a>
	ServiceType *string `json:"serviceType,omitempty"`

	// ShipTimestamp Specifies the shipment date and time. The default timestamp is the current date-time. Format is MMM-dd-yyyy.<br>Example: 2019-10-04
	ShipTimestamp *string `json:"shipTimestamp,omitempty"`
}

// CreateTagRequestedShipment defines model for CreateTagRequestedShipment.
type CreateTagRequestedShipment struct {
	// BlockInsightVisibility Indicate if the shipment be available to be visible/tracked using FedEx InSight<sup>®</sup> tool. If value indicated as true, only the shipper/payer will have visibility of this shipment in the FedEx InSight<sup>®</sup> tool.
	BlockInsightVisibility *bool `json:"blockInsightVisibility,omitempty"`

	// CustomsClearanceDetail These are customs clearance details. Required for International and intra-country Shipments.
	CustomsClearanceDetail *CustomsClearanceDetail `json:"customsClearanceDetail,omitempty"`

	// EmailNotificationDetail This is used to provide eMail notification information..
	EmailNotificationDetail *ShipShipmentEMailNotificationDetail `json:"emailNotificationDetail,omitempty"`

	// ExpressFreightDetail Indicates the advance booking number, shipper load /count and packing list details. This details must be provided by the user during freight shipment.
	ExpressFreightDetail *ExpressFreightDetail `json:"expressFreightDetail,omitempty"`

	// LabelSpecification These are label specification details includes the image type, printer format, and label stock for label. Can also specify specific details such as doc-tab content, regulatory labels, and masking data on the label.
	LabelSpecification LabelSpecification `json:"labelSpecification"`

	// MasterTrackingId Indicates the tracking details of the package.Required for child shipments of an oneLabelAtATime shipments
	MasterTrackingId *MasterTrackingId `json:"masterTrackingId,omitempty"`

	// Origin Indicate shipment origin address information, if it is different from the shipper address.
	Origin *ContactAndAddress1 `json:"origin,omitempty"`

	// PackagingType Specify the packaging used.<br>Note: For Express Freight shipments, the packaging will default to YOUR_PACKAGING irrespective of the user provided package type in the request.<br>Example: FEDEX_PAK<br><a onclick='loadDocReference("packagetypes")'>click here to see Package Types</a>
	PackagingType string `json:"packagingType"`

	// PickupDetail Specifies the pickup details for the Tag shipment.<br>ReadyDateTime and LatestPickupDateTime are required.
	PickupDetail *struct {
		// LatestPickupDateTime Specify the last possible pickup date and time.
		LatestPickupDateTime string `json:"latestPickupDateTime"`

		// ReadyPickupDateTime Specify the time and date the package will be ready for pickup.
		ReadyPickupDateTime string `json:"readyPickupDateTime"`
	} `json:"pickupDetail,omitempty"`

	// PickupType Indicate the pickup type method by which the shipment to be tendered to FedEx.<br><a onclick='loadDocReference("pickuptypes")'>Click here for more information on Pickup Types.</a>
	PickupType CreateTagRequestedShipmentPickupType `json:"pickupType"`

	// PreferredCurrency Indicate the currency the caller requests to have used in all returned monetary values. Should be Used in conjunction with the element RateRequestType.<br>Example: USD<br><a onclick='loadDocReference("currencycodes")'>click here to see available Currency codes</a><br>Note: Incorrect currency codes should not be supplied. The system ignores the incorrect currency code.
	PreferredCurrency *string `json:"preferredCurrency,omitempty"`

	// RateRequestType Indicate the type of rates to be returned. The account specific rates are returned by default if the account number is specified in the request.<br>Following are values:<ul><li>LIST - Returns FedEx published list rates in addition to account-specific rates (if applicable).</li><li>INCENTIVE - This is one-time discount for incentivising the customer. For more information, contact your FedEx representative.</li><li>ACCOUNT - Returns account specific rates (Default).</li><li>PREFERRED - Returns rates in the preferred currency specified in the element preferredCurrency.</li><li>RETAIL - Returns customer rate from one of retail FedEx service centers.</li></ul>Examples: ["ACCOUNT", "PREFERRED"]
	RateRequestType *[]CreateTagRequestedShipmentRateRequestType `json:"rateRequestType,omitempty"`

	// RecipientLocationNumber A unique identifier for a recipient location.
	RecipientLocationNumber *string `json:"recipientLocationNumber,omitempty"`

	// Recipients Indicate the descriptive data for the recipient location to which the shipment is to be received.
	Recipients []RecipientsParty `json:"recipients"`

	// RequestedPackageLineItems These are one or more package-attribute descriptions, each of which describes an individual package, a group of identical packages, or (for the total-piece-total-weight case) common characteristics of all packages in the shipment.<ul><li>At least one instance containing the weight for at least one package is required for EXPRESS and GROUND shipments.</li><li>Single piece requests will have one RequestedPackageLineItem.</li><li>Multiple piece requests will have multiple RequestedPackageLineItems.</li><li>Maximum occurrences is 30.</li></ul>
	RequestedPackageLineItems []RequestedPackageLineItem `json:"requestedPackageLineItems"`

	// ServiceType Indicate the FedEx service type used for this shipment.<br>Example: STANDARD_OVERNIGHT<br><a onclick='loadDocReference("servicetypes")'>click here to see Service Types</a>
	ServiceType string `json:"serviceType"`

	// ShipDatestamp This is the shipment date. Default value is current date in case the date is not provided or a past date is provided.<br>Format [YYYY-MM-DD].<br>Example: 2019-10-14
	ShipDatestamp *string `json:"shipDatestamp,omitempty"`

	// ShipmentSpecialServices Specify the special services requested at the shipment level.<br>If the shipper is requesting a special service which requires additional data (such as the COD amount), the shipment special service type must be present in the specialServiceTypes collection, and the supporting detail must be provided in the appropriate sub-object below.<br>RETURN_SHIPMENT is required for creating return shipments.
	ShipmentSpecialServices *ShipmentSpecialServicesRequested `json:"shipmentSpecialServices,omitempty"`

	// Shipper Indicate the Shipper contact details for this shipment.
	Shipper ShipperParty `json:"shipper"`

	// ShippingChargesPayment Specifies the payment details specifying the method and means of payment to FedEx for providing shipping services.
	ShippingChargesPayment Payment `json:"shippingChargesPayment"`

	// ShippingDocumentSpecification Use this object to provide all data required for additional (non-label) shipping documents to be produced.
	ShippingDocumentSpecification *ShippingDocumentSpecification `json:"shippingDocumentSpecification,omitempty"`

	// SmartPostInfoDetail Use this object to specify the smartpost shipment details. <br>Required for SMARTPOST service. If SmartPostInfoDetail is indicated, the elements below it are also required.
	SmartPostInfoDetail *SmartPostInfoDetail `json:"smartPostInfoDetail,omitempty"`

	// SoldTo Will indicate the party responsible for purchasing the goods shipped from the shipper to the recipient. The sold to party is not necessarily the recipient or the importer of record. The sold to party is relevant when the purchaser, rather than the recipient determines when certain customs regulations apply.
	SoldTo *SoldToParty `json:"soldTo,omitempty"`

	// TotalDeclaredValue It is the sum of all declared values of all packages in a shipment. The amount of totalDeclaredValue must be equal to the sum of all the individual declaredValues in the shipment. The declaredValue and totalDeclaredValue must match in all currencies in one shipment. This value represents FedEx maximum liability associated with a shipment. This is including, but not limited to any loss, damage, delay, misdelivery, any failure to provide information, or misdelivery of information related to the Shipment.<br><i>Note: The totalDeclaredValue should not exceed customsValue.</i>
	TotalDeclaredValue *Money `json:"totalDeclaredValue,omitempty"`

	// TotalPackageCount For an MPS, this is the total number of packages in the shipment.Applicable for parent shipment for one label at a time shipments. <br>Example: 25
	TotalPackageCount *int32 `json:"totalPackageCount,omitempty"`

	// TotalWeight Indicate the shipment total weight in pounds.<br>Example: 10.6<br>Note: <ul><li>This only applies to International shipments and should be used on the first package of a multiple piece shipment.</li><li>This value contains 1 explicit decimal position.</li><li>For one Label at a time shipments, the unit of totalWeight is considered same as the unit of weight provided in requestedPackageLineItem field.</li></ul>
	TotalWeight *float64 `json:"totalWeight,omitempty"`

	// VariableHandlingChargeDetail Indicate the details about how to calculate variable handling charges at the shipment level. They can be based on a percentage of the shipping charges or a fixed amount. If indicated, element rateLevelType is required.
	VariableHandlingChargeDetail *VariableHandlingChargeDetail `json:"variableHandlingChargeDetail,omitempty"`
}

// CreateTagRequestedShipmentPickupType Indicate the pickup type method by which the shipment to be tendered to FedEx.<br><a onclick='loadDocReference("pickuptypes")'>Click here for more information on Pickup Types.</a>
type CreateTagRequestedShipmentPickupType string

// CreateTagRequestedShipmentRateRequestType defines model for CreateTagRequestedShipment.RateRequestType.
type CreateTagRequestedShipmentRateRequestType string

// CurrencyExchangeRate Specifies the currency exchange performed on financial amounts on this rate.
type CurrencyExchangeRate struct {
	// FromCurrency The currency code for the original (converted FROM) currency.<br>Example: Rupee<br><a onclick='loadDocReference("currencycodes")'>click here to see Currency codes</a>
	FromCurrency *string `json:"fromCurrency,omitempty"`

	// IntoCurrency The currency code for the final(converted INTO) currency.<br>Example: USD<br><a onclick='loadDocReference("currencycodes")'>click here to see currencycodes</a>
	IntoCurrency *string `json:"intoCurrency,omitempty"`

	// Rate Multiplier used to convert from Currency units to into Currency units.<br>Example: 25.6
	Rate *float64 `json:"rate,omitempty"`
}

// CustomerImageUsage Specify the usse and identification of supplied images to be used on this document.
type CustomerImageUsage struct {
	// Id Specify the Image ID.
	Id *CustomerImageUsageId `json:"id,omitempty"`

	// ProvidedImageType Specify the provided document image type.
	ProvidedImageType *CustomerImageUsageProvidedImageType `json:"providedImageType,omitempty"`

	// Type Specify document image type.
	Type *CustomerImageUsageType `json:"type,omitempty"`
}

// CustomerImageUsageId Specify the Image ID.
type CustomerImageUsageId string

// CustomerImageUsageProvidedImageType Specify the provided document image type.
type CustomerImageUsageProvidedImageType string

// CustomerImageUsageType Specify document image type.
type CustomerImageUsageType string

// CustomerReference defines model for CustomerReference.
type CustomerReference struct {
	// CustomerReferenceType This is a customer reference type. The value specified here for the element is printed on the Commercial Invoice only for tracking and label information.<p>Note: <ul><li>The P_O_NUMBER value must be specified in customerReferences under requestedPackageLineItems</li><li>The INVOICE_NUMBER value that is printed on the FedEx-supplied invoice must be specified in customerReferences under commercialInvoice. Value defined in this section will print on the label that is attached to the package</li></ul> <br>Note: INTRACOUNTRY_REGULATORY_REFERENCE is applicable only in Intra-Brazil.<br><a onclick='loadDocReference("customerreferencetypes")'>For more information, click here for Cutsomer References ENUMs</a>
	CustomerReferenceType *CustomerReferenceCustomerReferenceType `json:"customerReferenceType,omitempty"`

	// Value This is a customer reference type value.<br>Example: 3686 <ul><li>The P_O_NUMBER value must be specified in customerReferences under requestedPackageLineItems</li><li>The INVOICE_NUMBER value that is printed on the FedEx-supplied invoice must be specified in customerReferences under commercialInvoice. Value defined in this section will print on the label that is attached to the package</li><li>The RMA value sent by the customer is returned on the label in human readable form but also as a barcode. RMA_ASSOCIATION only prints on the label as a barcode for a Return shipment.</ul>NOTE:<ul><li> INTRACOUNTRY_REGULATORY_REFERENCE is applicable only in Intra-Brazil.</li><li>  Maximum length varies for value field depending on customerReferenceType.</li></ul> Maximum length for value is as follows: <ul><li>CUSTOMER_REFERENCE - 40(Express), 30(Ground)</li><li>DEPARTMENT_NUMBER - 30</li><li>INVOICE_NUMBER - 30</li><li>P_O_NUMBER - 30</li><li>INTRACOUNTRY_REGULATORY_REFERENCE - 30</li><li>RMA_ASSOCIATION - 20</li>
	Value *string `json:"value,omitempty"`
}

// CustomerReferenceCustomerReferenceType This is a customer reference type. The value specified here for the element is printed on the Commercial Invoice only for tracking and label information.<p>Note: <ul><li>The P_O_NUMBER value must be specified in customerReferences under requestedPackageLineItems</li><li>The INVOICE_NUMBER value that is printed on the FedEx-supplied invoice must be specified in customerReferences under commercialInvoice. Value defined in this section will print on the label that is attached to the package</li></ul> <br>Note: INTRACOUNTRY_REGULATORY_REFERENCE is applicable only in Intra-Brazil.<br><a onclick='loadDocReference("customerreferencetypes")'>For more information, click here for Cutsomer References ENUMs</a>
type CustomerReferenceCustomerReferenceType string

// CustomerReference1 defines model for CustomerReference_1.
type CustomerReference1 struct {
	// CustomerReferenceType This is a customer reference type. The value specified here for the element is printed on the Commercial Invoice only for tracking and label information.<p>Note: <ul><li>The P_O_NUMBER value must be specified in customerReferences under requestedPackageLineItems</li><li>The INVOICE_NUMBER value that is printed on the FedEx-supplied invoice must be specified in customerReferences under commercialInvoice. Value defined in this section will print on the label that is attached to the package</li><li>The RMA_ASSOCIATION value sent by the customer is returned on the label in human readable form but also as a barcode.</li></ul>Note: INTRACOUNTRY_REGULATORY_REFERENCE is applicable only in Intra-Brazil.<br><a onclick='loadDocReference("customerreferencetypes")'>For more information, click here for Customer References</a>
	CustomerReferenceType *CustomerReference1CustomerReferenceType `json:"customerReferenceType,omitempty"`

	// Value This is a customer reference type value.<br>Example: 3686 <ul><li>The P_O_NUMBER value must be specified in customerReferences under requestedPackageLineItems</li><li>The INVOICE_NUMBER value that is printed on the FedEx-supplied invoice must be specified in customerReferences under commercialInvoice. Value defined in this section will print on the label that is attached to the package</li><li>The RMA value sent by the customer is returned on the label in human readable form but also as a barcode. RMA_ASSOCIATION only prints on the label as a barcode for a Return shipment.</ul>NOTE:<ul><li> INTRACOUNTRY_REGULATORY_REFERENCE is applicable only in Intra-Brazil.</li><li>  Maximum length varies for value field depending on customerReferenceType.</li></ul> Maximum length for value is as follows: <ul><li>CUSTOMER_REFERENCE - 40(Express), 30(Ground)</li><li>DEPARTMENT_NUMBER - 30</li><li>INVOICE_NUMBER - 30</li><li>P_O_NUMBER - 30</li><li>INTRACOUNTRY_REGULATORY_REFERENCE - 30</li><li>RMA_ASSOCIATION - 20</li>
	Value *string `json:"value,omitempty"`
}

// CustomerReference1CustomerReferenceType This is a customer reference type. The value specified here for the element is printed on the Commercial Invoice only for tracking and label information.<p>Note: <ul><li>The P_O_NUMBER value must be specified in customerReferences under requestedPackageLineItems</li><li>The INVOICE_NUMBER value that is printed on the FedEx-supplied invoice must be specified in customerReferences under commercialInvoice. Value defined in this section will print on the label that is attached to the package</li><li>The RMA_ASSOCIATION value sent by the customer is returned on the label in human readable form but also as a barcode.</li></ul>Note: INTRACOUNTRY_REGULATORY_REFERENCE is applicable only in Intra-Brazil.<br><a onclick='loadDocReference("customerreferencetypes")'>For more information, click here for Customer References</a>
type CustomerReference1CustomerReferenceType string

// CustomerSpecifiedLabelDetail This object allows the control of label content for customization.
type CustomerSpecifiedLabelDetail struct {
	// AdditionalLabels Specify how the additional details to be provided on the labels.
	AdditionalLabels *[]AdditionalLabelsDetail `json:"additionalLabels,omitempty"`

	// DocTabContent Specifies details of doc tab content.It is only applicable only with imageType as ZPLII.
	DocTabContent *DocTabContent `json:"docTabContent,omitempty"`

	// MaskedData Specify which data/sections on the label to be masked.<br>Note: <ul><li>SECONDARY_BARCODE &ndash; This is used for Smartpost shipment labels.</li><li>SHIPPER_INFORMATION &ndash; This is used for Third Party Consignee, Intra-UK shipments.</li><li>TOTAL_WEIGHT &ndash; This replaces the Total weight with Actual Weight in Master label and AWB copies.</li></ul>
	MaskedData *[]CustomerSpecifiedLabelDetailMaskedData `json:"maskedData,omitempty"`

	// RegulatoryLabels Specify how the regulatory details to be provided on the labels.
	RegulatoryLabels *[]RegulatoryLabelContentDetail `json:"regulatoryLabels,omitempty"`
}

// CustomerSpecifiedLabelDetailMaskedData defines model for CustomerSpecifiedLabelDetail.MaskedData.
type CustomerSpecifiedLabelDetailMaskedData string

// CustomsClearanceDetail These are customs clearance details. Required for International and intra-country Shipments.
type CustomsClearanceDetail struct {
	// Brokers Specify broker information. Use this option only if you are using Broker Select Option for your shipment. A country code must be specified in addition to one of the following address items: postal code, city, or location id.
	Brokers *[]BrokerDetail `json:"brokers,omitempty"`

	// CommercialInvoice Use this object to provide Commercial Invoice details. This element is required for electronic upload of CI data. It will serve to create/transmit an electronic Commercial Invoice through the FedEx system.<br>Customers are responsible for printing their own Commercial Invoice.<br>If you would like FedEx to generate a Commercial Invoice and transmit it to Customs for clearance purposes, you need to specify that in the ETDDetail/RequestedDocumentCopies element.<br>Supports maximum of 99 commodity line items.
	CommercialInvoice CommercialInvoice `json:"commercialInvoice"`

	// Commodities Indicates the details about the dutiable packages. Maximum upto 999 commodities per shipment.
	Commodities []Commodity `json:"commodities"`

	// CustomsOption These are customs Option Detail, type must be indicated for each occurrence.
	CustomsOption *CustomsOptionDetail `json:"customsOption,omitempty"`

	// DeclarationStatementDetail Specifies about the statements to be declared for Customs.
	DeclarationStatementDetail *CustomsDeclarationStatementDetail `json:"declarationStatementDetail,omitempty"`

	// DutiesPayment This is a payment type, basically indicates who is the payor for the shipment.Conditional required for International Shipments
	DutiesPayment *Payment1 `json:"dutiesPayment,omitempty"`

	// ExportDetail These are export Detail used for US or CA exports.
	ExportDetail *ExportDetail `json:"exportDetail,omitempty"`

	// FreightOnValue Specify the risk owner for the Freight shipment.This element is only mandatory or valid for Intra India shipments.
	FreightOnValue *CustomsClearanceDetailFreightOnValue `json:"freightOnValue,omitempty"`

	// GeneratedDocumentLocale This is the locale for generated document.<br>Example: en_US<br><a onclick='loadDocReference("locales")'>click here to see Locales</a><br>Note: If the locale is left blank or an invalid locale is entered, an error message is returned in response.
	GeneratedDocumentLocale *string `json:"generatedDocumentLocale,omitempty"`

	// ImporterOfRecord The descriptive data for the importer of Record for the shipment and their physical address, contact and account number information.
	ImporterOfRecord *Party1 `json:"importerOfRecord,omitempty"`

	// InsuranceCharge Specify insurance charges if applicable. <br><i>Note: FedEx does not provide insurance of any kind.</i>
	InsuranceCharge *Money `json:"insuranceCharge,omitempty"`

	// IsDocumentOnly Used to specify if a shipment is document shipment or not. Used only for International Express document shipments. Default value is false.
	IsDocumentOnly *bool `json:"isDocumentOnly,omitempty"`

	// PartiesToTransactionAreRelated Specify if the transacting parties are related.
	PartiesToTransactionAreRelated *bool `json:"partiesToTransactionAreRelated,omitempty"`

	// RecipientCustomsId Use this element to provide valid identification details. Used for populating brazil tax id.
	RecipientCustomsId *RecipientCustomsId `json:"recipientCustomsId,omitempty"`

	// RegulatoryControls These are the regulatory controls applicable to the shipment.
	RegulatoryControls *[]CustomsClearanceDetailRegulatoryControls `json:"regulatoryControls,omitempty"`

	// TotalCustomsValue This is the total customs value.
	TotalCustomsValue *Money `json:"totalCustomsValue,omitempty"`
}

// CustomsClearanceDetailFreightOnValue Specify the risk owner for the Freight shipment.This element is only mandatory or valid for Intra India shipments.
type CustomsClearanceDetailFreightOnValue string

// CustomsClearanceDetailRegulatoryControls defines model for CustomsClearanceDetail.RegulatoryControls.
type CustomsClearanceDetailRegulatoryControls string

// CustomsDeclarationStatementDetail Specifies about the statements to be declared for Customs.
type CustomsDeclarationStatementDetail struct {
	// UsmcaLowValueStatementDetail Specify the low Value statement necessary for printing the USMCA for Customs documentation.
	UsmcaLowValueStatementDetail UsmcaLowValueStatementDetail `json:"usmcaLowValueStatementDetail"`
}

// CustomsOptionDetail These are customs Option Detail, type must be indicated for each occurrence.
type CustomsOptionDetail struct {
	// Description Specify additional description about customs options. This is a required field when the Type is OTHER.
	Description *string `json:"description,omitempty"`

	// Type Specify the reason for a global return, as recognized by Customs. Valid values:<ul><li>COURTESY_RETURN_LABEL: Applicable for Outbound shipments.</li><li>EXHIBITION_TRADE_SHOW: For exhibition or trade-show, outbound and inbound.</li><li>FAULTY_ITEM: For faulty item being returned, inbound only.</li><li>FOLLOWING_REPAIR: For repaired or processed item being sent, outbound only.</li><li>FOR_REPAIR: For repair or processing, outbound and inbound.</li><li>ITEM_FOR_LOAN: For loan item, outbound and inbound.</li><li>OTHER: Other reason, outbound and inbound. This type requires a description.</li><li>REJECTED: For rejected merchandise being returned, inbound.</li><li>REPLACEMENT: For replacement being sent, outbound only.</li><li>TRIAL: For use in a trial, outbound and inbound.</li></ul>
	Type *CustomsOptionDetailType `json:"type,omitempty"`
}

// CustomsOptionDetailType Specify the reason for a global return, as recognized by Customs. Valid values:<ul><li>COURTESY_RETURN_LABEL: Applicable for Outbound shipments.</li><li>EXHIBITION_TRADE_SHOW: For exhibition or trade-show, outbound and inbound.</li><li>FAULTY_ITEM: For faulty item being returned, inbound only.</li><li>FOLLOWING_REPAIR: For repaired or processed item being sent, outbound only.</li><li>FOR_REPAIR: For repair or processing, outbound and inbound.</li><li>ITEM_FOR_LOAN: For loan item, outbound and inbound.</li><li>OTHER: Other reason, outbound and inbound. This type requires a description.</li><li>REJECTED: For rejected merchandise being returned, inbound.</li><li>REPLACEMENT: For replacement being sent, outbound only.</li><li>TRIAL: For use in a trial, outbound and inbound.</li></ul>
type CustomsOptionDetailType string

// CustomsMoney This customs value is applicable for all items(or units) under the specified commodity.
type CustomsMoney struct {
	// Amount This is the amount. Maximum limit is 5 digits before decimal.<br>Example:  1556.25
	Amount *float64 `json:"amount,omitempty"`

	// Currency This is the currency code for the amount.<br>Example: USD<br><a onclick='loadDocReference("currencycodes")'>Click here to see Currency codes</a>
	Currency *string `json:"currency,omitempty"`
}

// DangerousGoodsDetail Provide dangerous goods shipment details.
type DangerousGoodsDetail struct {
	// Accessibility Specify Dangerous Goods Accessibility Type. <ul><li>Inaccessible &ndash; it does not have to be accessable on the aircraft.</li><li>Accessible &ndash; it must be fully accessible on the aircraft, and is more strictly controlled.</li></ul>
	Accessibility DangerousGoodsDetailAccessibility `json:"accessibility"`

	// CargoAircraftOnly A Boolean value that, when True, specifies the mode of shipment transportation should be Cargo Aircraft for Dangerous Goods. Its default value is set as False.<br>Note: An identifier DGD-CAO is added in AWB for cargo aircraft shipments.
	CargoAircraftOnly *bool `json:"cargoAircraftOnly,omitempty"`

	// Options Indicate type of DG being reported.<br> - SMALL_QUANTITY_EXCEPTION : It is applicable for only One Piece shipment.
	Options *[]DangerousGoodsDetailOptions `json:"options,omitempty"`
}

// DangerousGoodsDetailAccessibility Specify Dangerous Goods Accessibility Type. <ul><li>Inaccessible &ndash; it does not have to be accessable on the aircraft.</li><li>Accessible &ndash; it must be fully accessible on the aircraft, and is more strictly controlled.</li></ul>
type DangerousGoodsDetailAccessibility string

// DangerousGoodsDetailOptions defines model for DangerousGoodsDetail.Options.
type DangerousGoodsDetailOptions string

// DeliveryOnInvoiceAcceptanceDetail Indicate the Delivery On Invoice Acceptance detail. Recipient is required for Delivery On Invoice Special service.
type DeliveryOnInvoiceAcceptanceDetail struct {
	// Recipient The descriptive data for the recipient of the shipment and the physical location for the shipment destination.
	Recipient *struct {
		Address struct {
			// CountryCode The two-letter code used to identify a country. Maximum length is 2.<br>Example: US<br><a onclick='loadDocReference("countrycodes")'>click here to see Country codes</a>
			CountryCode string `json:"countryCode"`

			// StreetLines This is the combination of number, street name, etc. <br>Note: At least one line is required and streetlines more than 3 will be ignored. Empty lines should not be included. Maximum length per line is 35.<br>Example: [10 FedEx Parkway, Suite 302, .etc.]
			StreetLines []string `json:"streetLines"`
		} `json:"address"`
		Contact struct {
			// CompanyName Identifies the company this contact is associated with. Maximum length is 35.
			CompanyName string `json:"companyName"`

			// PersonName Identifies the contact person's name. Maximum length is 70.
			PersonName string `json:"personName"`

			// PhoneNumber Identifies the phone number associated with this contact. Maximum length is 10.
			PhoneNumber string `json:"phoneNumber"`
		} `json:"contact"`

		// DeliveryInstructions Specify the delivery instructions to be added with the shipment. Use with Ground Home Delivery.<br>Example: Delivery Instructions
		DeliveryInstructions *string `json:"deliveryInstructions,omitempty"`

		// Tins This is the tax identification number details.
		Tins *[]TaxpayerIdentification `json:"tins,omitempty"`
	} `json:"recipient,omitempty"`
}

// DestinationControlDetail Use this object to specify the appropriate destination control statement type(s). Also make sure to specify destination country and end user.
type DestinationControlDetail struct {
	// DestinationCountries Specify DCS shipment destination country. You may enter up to four country codes in this element. Up to 11 alphanumeric characters are allowed.<br>Example: US<br><a onclick='loadDocReference("countrycodes")'>click here to see Country codes</a>
	DestinationCountries *[]string `json:"destinationCountries,omitempty"`

	// EndUser Specify End User name. Its is required if StatementTypes is entered as DEPARTMENT_OF_STATE. <br>Example: John Wick
	EndUser *string `json:"endUser,omitempty"`

	// StatementTypes Specify appropriate destination control statement type(s), Also make sure to specify destination country and end user.
	StatementTypes DestinationControlDetailStatementTypes `json:"statementTypes"`
}

// DestinationControlDetailStatementTypes Specify appropriate destination control statement type(s), Also make sure to specify destination country and end user.
type DestinationControlDetailStatementTypes string

// Dimensions Indicate the dimensions of the package.<br> Following conditions will apply: <ul><li>Dimensions are optional but when added, then all three dimensions must be indicated.</li><li>Dimensions are required with YOUR_PACKAGING package type.</li></ul>Note: The maximum/minimum dimension values varies based on the services and the packaging types. Refer <a href="https://www.fedex.com/en-us/service-guide.html" target="_blank">FedEx Service Guide</a> for service details related to DIM Weighting for FedEx Express and oversize conditions for FedEx Express and FedEx Ground.
type Dimensions struct {
	// Height Indicate the height of the package. No implied decimal places. Maximum value: 999 <br> Example: 10
	Height *int32 `json:"height,omitempty"`

	// Length Indicate the length of the package. No implied decimal places. Maximum value: 999 <br> Example: 20
	Length *int32 `json:"length,omitempty"`

	// Units Indicate the Unit of measure for the provided dimensions.<br>Valid Values are:<li>IN - inches</li><li>CM - centimeters</li>Note: Any value other than CM including blank/null will default to IN.
	Units *DimensionsUnits `json:"units,omitempty"`

	// Width Indicate the width of the package. No implied decimal places. Maximum value: 999 <br> Example: 10
	Width *int32 `json:"width,omitempty"`
}

// DimensionsUnits Indicate the Unit of measure for the provided dimensions.<br>Valid Values are:<li>IN - inches</li><li>CM - centimeters</li>Note: Any value other than CM including blank/null will default to IN.
type DimensionsUnits string

// DocTabContent Specifies details of doc tab content.It is only applicable only with imageType as ZPLII.
type DocTabContent struct {
	// Barcoded It is a doc tab content type which is in barcoded format.
	Barcoded *DocTabContentBarcoded `json:"barcoded,omitempty"`

	// DocTabContentType Indicates the content type of the doc tab.
	DocTabContentType *DocTabContentDocTabContentType `json:"docTabContentType,omitempty"`

	// Zone001 Indicate the doc tab specification for different zones on the label. The specification includes zone number, header and data field to be displayed on the label.
	Zone001 *DocTabContentZone001 `json:"zone001,omitempty"`
}

// DocTabContentDocTabContentType Indicates the content type of the doc tab.
type DocTabContentDocTabContentType string

// DocTabContentBarcoded It is a doc tab content type which is in barcoded format.
type DocTabContentBarcoded struct {
	// Specification Indicates the doc tab zone specification.
	Specification *DocTabZoneSpecification `json:"specification,omitempty"`

	// Symbology Indicates the type of barcode symbology used on FedEx documents and labels.
	Symbology *DocTabContentBarcodedSymbology `json:"symbology,omitempty"`
}

// DocTabContentBarcodedSymbology Indicates the type of barcode symbology used on FedEx documents and labels.
type DocTabContentBarcodedSymbology string

// DocTabContentZone001 Indicate the doc tab specification for different zones on the label. The specification includes zone number, header and data field to be displayed on the label.
type DocTabContentZone001 struct {
	// DocTabZoneSpecifications Indicate the doc tab specifications for the individual doc tab zone on the label.
	DocTabZoneSpecifications *[]DocTabZoneSpecification `json:"docTabZoneSpecifications,omitempty"`
}

// DocTabZoneSpecification Indicates the doc tab zone specification.
type DocTabZoneSpecification struct {
	// DataField Indicate the path request/reply element to be printed on doc tab.<br>Example:<ul><li>REQUEST/SHIPMENT/ShipTimestamp</li><li>REQUEST/PACKAGE/weight/Value</li><li>REQUEST/PACKAGE/InsuredValue/Amount</li><li>REQUEST/SHIPMENT/SpecialServicesRequested/CodDetail/CodCollectionAmount/Amount</li><li>REQUEST/SHIPMENT/Shipper/Address/StreetLines[1]</li><li>CLIENT/MeterNumber</li><li>TRANSACTION/CustomerTransactionId</li><li>REQUEST/SHIPMENT/TotalWeight/Value</li><li>REQUEST/SHIPMENT/ShipTimestamp</li><li>REQUEST/SHIPMENT/Recipient/Contact/PersonName</li><li>REPLY/SHIPMENT/OperationalDetail/DeliveryDate</li><li>REPLY/PACKAGE/RATE/ACTUAL/BaseCharge/Amount</li><li>REPLY/PACKAGE/RATE/ACTUAL/TotalFreightDiscounts/Amount</li><li>REPLY/PACKAGE/RATE/ACTUAL/TotalSurcharges/Amount</li><li>REPLY/PACKAGE/RATE/ACTUAL/NetCharge/AmountREPLY</li><li>/SHIPMENT/RATES/PAYOR_ACCOUNT/TotalSurcharges/Amount</li></ul>
	DataField *string `json:"dataField,omitempty"`

	// Header Indicates the parameter name in the header for the doc tab zone. The maximum charater limit is 7.<br>Example:  WHT
	Header *string `json:"header,omitempty"`

	// Justification Indicates the justification format for the string.
	Justification *DocTabZoneSpecificationJustification `json:"justification,omitempty"`

	// LiteralValue Indicates the actual data to be printed in the label<br>
	LiteralValue *string `json:"literalValue,omitempty"`

	// ZoneNumber It is a non-negative integer that represents the portion of doc-tab in a label.<br>Example: 1
	ZoneNumber *int32 `json:"zoneNumber,omitempty"`
}

// DocTabZoneSpecificationJustification Indicates the justification format for the string.
type DocTabZoneSpecificationJustification string

// DocumentFormatOptionsRequested Indicate the requested options for document format.
type DocumentFormatOptionsRequested struct {
	// Options Indicates the format options. SUPPRESS_ADDITIONAL_LANGUAGES value will suppress English language if another language is specified in the language code field.
	Options *[]DocumentFormatOptionsRequestedOptions `json:"options,omitempty"`
}

// DocumentFormatOptionsRequestedOptions defines model for DocumentFormatOptionsRequested.Options.
type DocumentFormatOptionsRequestedOptions string

// DocumentGenerationDetail Indicates the document generation detail information.
type DocumentGenerationDetail struct {
	// ElectronicSignature Indicates electronic signature requirement type.<br>Example:  OPTIONAL
	ElectronicSignature *string `json:"electronicSignature,omitempty"`

	// Letterhead Indicates the letterhead requirement type.<br>Example: OPTIONAL
	Letterhead *string `json:"letterhead,omitempty"`

	// MinimumCopiesRequired It is a non-Negative Integer.<br>Example: 3
	MinimumCopiesRequired *int32 `json:"minimumCopiesRequired,omitempty"`

	// Type It is an Enterprise Document Type.<br>Example: COMMERCIAL_INVOICE
	Type *string `json:"type,omitempty"`
}

// DocumentRequirementsDetail Indicates the document requirements detail.
type DocumentRequirementsDetail struct {
	// GenerationDetails Specifies the generation details.
	GenerationDetails *[]DocumentGenerationDetail `json:"generationDetails,omitempty"`

	// ProhibitedDocuments Indicates the prohibited Documents info.<br>Example: ["CERTIFICATE_OF_ORIGIN "]
	ProhibitedDocuments *[]string `json:"prohibitedDocuments,omitempty"`

	// RequiredDocuments Indicates the required documents information.<br>Example: ["COMMERCIAL_OR_PRO_FORMA_INVOICE","AIR_WAYBILL"]
	RequiredDocuments *[]string `json:"requiredDocuments,omitempty"`
}

// EMailNotificationDetail These are email disposition details. Provides the type and email addresses of e-mail recipients. If returnedDispositionDetail in labelSpecification is set as true then email will be send with label and documents copy.
type EMailNotificationDetail struct {
	// AggregationType Indicate the shipment notification aggregation type.
	AggregationType *EMailNotificationDetailAggregationType `json:"aggregationType,omitempty"`

	// EmailNotificationRecipients These are email notification recipient details.
	EmailNotificationRecipients *[]EmailNotificationRecipient `json:"emailNotificationRecipients,omitempty"`

	// PersonalMessage This is your personal message for the email.<br>Note: The maximum personal message character limit depends on the element emailNotificationDetail\emailNotificationRecipients\notificationFormatType values:<ul><li>If notificationFormatType is TEXT, then only 120 characters printed on the email</li><li>If notificationFormatType is HTML, then 500 characters printed on the email</li></ul><br>Example: This is concerning the order 123456 of 26 July 2021 - art no 34324-23 Teddy Bear, brown
	PersonalMessage *string `json:"personalMessage,omitempty"`
}

// EMailNotificationDetailAggregationType Indicate the shipment notification aggregation type.
type EMailNotificationDetailAggregationType string

// ETDDetail Use this object to specify all information on how the electronic Trade document references used with the shipment.
type ETDDetail struct {
	// AttachedDocuments Use this object to specify the details regarding already uploded document(s). This object is required if the documents are uploaded Pre-Shipment uploaded documents. It is recommended to provide values for all elements under this object.
	AttachedDocuments *[]UploadDocumentReferenceDetail `json:"attachedDocuments,omitempty"`

	// Attributes Use this attribute to specify if the Trade documents will be uploaded post the shipment.
	Attributes *[]ETDDetailAttributes `json:"attributes,omitempty"`

	// RequestedDocumentTypes Indicate the types of shipping documents produced for the shipper by FedEx. The types of shipping documents are copied back to the shipper in the shipment result data.<br>Note: For more information document types, refer business overview topic - <a href='#shippingandcustoms'><b>Shipping and Customs Documents.</b></a>
	RequestedDocumentTypes *[]ETDDetailRequestedDocumentTypes `json:"requestedDocumentTypes,omitempty"`
}

// ETDDetailAttributes defines model for ETDDetail.Attributes.
type ETDDetailAttributes string

// ETDDetailRequestedDocumentTypes defines model for ETDDetail.RequestedDocumentTypes.
type ETDDetailRequestedDocumentTypes string

// EmailLabelDetail These are specific information about the pending email label.<br>Required when PendingShipmentType is EMAIL.<br>Not applicable for CreateTag.
type EmailLabelDetail struct {
	// Message This is an optional personalized message to be included in the email to the recipient.
	Message *string `json:"message,omitempty"`

	// Recipients This is Email label recipient email address, shipment role, & language locale details. Atleast one entry must be specified.
	Recipients *[]EmailRecipient `json:"recipients,omitempty"`
}

// EmailNotificationRecipient These are recipient details for receiving email notification.
type EmailNotificationRecipient struct {
	// EmailAddress Specify the recipient email address.<br>Example: xyz@aol.com
	EmailAddress *string `json:"emailAddress,omitempty"`

	// EmailNotificationRecipientType Specify the recipient type for email notification.
	EmailNotificationRecipientType EmailNotificationRecipientEmailNotificationRecipientType `json:"emailNotificationRecipientType"`

	// Locale These are the locale details for email.<br><a onclick='loadDocReference("locales")'>click here to see Locales</a><br>Note: If the locale is left blank or an invalid locale is entered, an error message is returned in response.
	Locale *string `json:"locale,omitempty"`

	// Name Specify the recipient name.<br>Example: Joe Smith
	Name *string `json:"name,omitempty"`

	// NotificationEventType Specify notification event types.<br><a onclick='loadDocReference("notificationeventtypes")'>Click here for more information on Notification Event Types.</a>
	NotificationEventType *[]EmailNotificationRecipientNotificationEventType `json:"notificationEventType,omitempty"`

	// NotificationFormatType This is the format for the email notification. Either HTML or plain text can be provided.
	NotificationFormatType *EmailNotificationRecipientNotificationFormatType `json:"notificationFormatType,omitempty"`

	// NotificationType Indicate the type of notification that will be sent as an email.
	NotificationType *EmailNotificationRecipientNotificationType `json:"notificationType,omitempty"`
}

// EmailNotificationRecipientEmailNotificationRecipientType Specify the recipient type for email notification.
type EmailNotificationRecipientEmailNotificationRecipientType string

// EmailNotificationRecipientNotificationEventType defines model for EmailNotificationRecipient.NotificationEventType.
type EmailNotificationRecipientNotificationEventType string

// EmailNotificationRecipientNotificationFormatType This is the format for the email notification. Either HTML or plain text can be provided.
type EmailNotificationRecipientNotificationFormatType string

// EmailNotificationRecipientNotificationType Indicate the type of notification that will be sent as an email.
type EmailNotificationRecipientNotificationType string

// EmailOptionsRequested These are to indicate how the email notifications for the pending shipment to be processed.
type EmailOptionsRequested struct {
	// Options These are the processing options.
	Options *[]EmailOptionsRequestedOptions `json:"options,omitempty"`
}

// EmailOptionsRequestedOptions defines model for EmailOptionsRequested.Options.
type EmailOptionsRequestedOptions string

// EmailRecipient These are the recipient details for the online email return label.
type EmailRecipient struct {
	// EmailAddress This is recipient email address for notifying the return label. Maximum length 200 characters.<br> Example: neena@abc.com
	EmailAddress string `json:"emailAddress"`

	// Locale These are locale details.<br>Example: 'en_US'<br><a onclick='loadDocReference("locales")'>click here to see locales</a><br>Note: If the locale is left blank or an invalid locale is entered, an error message is returned in response.
	Locale *string `json:"locale,omitempty"`

	// OptionsRequested These are to indicate how the email notifications for the pending shipment to be processed.
	OptionsRequested *EmailOptionsRequested `json:"optionsRequested,omitempty"`

	// Role This is to specify Recipient role in the shipment.Shipment completor role is needed when we pass shipment initiator. We cannot use shipment initiator alone.
	Role EmailRecipientRole `json:"role"`
}

// EmailRecipientRole This is to specify Recipient role in the shipment.Shipment completor role is needed when we pass shipment initiator. We cannot use shipment initiator alone.
type EmailRecipientRole string

// ErrorResponseVO defines model for ErrorResponseVO.
type ErrorResponseVO struct {
	// CustomerTransactionId This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
	CustomerTransactionId *string     `json:"customerTransactionId,omitempty"`
	Errors                *[]CXSError `json:"errors,omitempty"`

	// TransactionId The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
	TransactionId *string `json:"transactionId,omitempty"`
}

// ErrorResponseVO401 defines model for ErrorResponseVO401.
type ErrorResponseVO401 struct {
	Errors *[]CXSError401 `json:"errors,omitempty"`

	// TransactionId The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
	TransactionId *string `json:"transactionId,omitempty"`
}

// ErrorResponseVO4012 defines model for ErrorResponseVO401_2.
type ErrorResponseVO4012 struct {
	Errors *[]CXSError401 `json:"errors,omitempty"`

	// TransactionId The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
	TransactionId *string `json:"transactionId,omitempty"`
}

// ErrorResponseVO403 defines model for ErrorResponseVO403.
type ErrorResponseVO403 struct {
	Errors *[]CXSError403 `json:"errors,omitempty"`

	// TransactionId The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
	TransactionId *string `json:"transactionId,omitempty"`
}

// ErrorResponseVO4032 defines model for ErrorResponseVO403_2.
type ErrorResponseVO4032 struct {
	Errors *[]CXSError403 `json:"errors,omitempty"`

	// TransactionId The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
	TransactionId *string `json:"transactionId,omitempty"`
}

// ErrorResponseVO404 defines model for ErrorResponseVO404.
type ErrorResponseVO404 struct {
	Errors *[]CXSError404 `json:"errors,omitempty"`

	// TransactionId The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
	TransactionId *string `json:"transactionId,omitempty"`
}

// ErrorResponseVO4042 defines model for ErrorResponseVO404_2.
type ErrorResponseVO4042 struct {
	Errors *[]CXSError404 `json:"errors,omitempty"`

	// TransactionId The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
	TransactionId *string `json:"transactionId,omitempty"`
}

// ErrorResponseVO500 defines model for ErrorResponseVO500.
type ErrorResponseVO500 struct {
	// CustomerTransactionId This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
	CustomerTransactionId *string        `json:"customerTransactionId,omitempty"`
	Errors                *[]CXSError500 `json:"errors,omitempty"`

	// TransactionId The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
	TransactionId *string `json:"transactionId,omitempty"`
}

// ErrorResponseVO5002 defines model for ErrorResponseVO500_2.
type ErrorResponseVO5002 struct {
	// CustomerTransactionId This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
	CustomerTransactionId *string        `json:"customerTransactionId,omitempty"`
	Errors                *[]CXSError500 `json:"errors,omitempty"`

	// TransactionId The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
	TransactionId *string `json:"transactionId,omitempty"`
}

// ErrorResponseVO503 defines model for ErrorResponseVO503.
type ErrorResponseVO503 struct {
	Errors *[]CXSError503 `json:"errors,omitempty"`

	// TransactionId The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
	TransactionId *string `json:"transactionId,omitempty"`
}

// ErrorResponseVO5032 defines model for ErrorResponseVO503_2.
type ErrorResponseVO5032 struct {
	Errors *[]CXSError503 `json:"errors,omitempty"`

	// TransactionId The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
	TransactionId *string `json:"transactionId,omitempty"`
}

// ErrorResponseVO2 defines model for ErrorResponseVO_2.
type ErrorResponseVO2 struct {
	// CustomerTransactionId This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
	CustomerTransactionId *string      `json:"customerTransactionId,omitempty"`
	Errors                *[]CXSError2 `json:"errors,omitempty"`

	// TransactionId The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
	TransactionId *string `json:"transactionId,omitempty"`
}

// ExportDetail These are export Detail used for US or CA exports.
type ExportDetail struct {
	// B13AFilingOption Specify the filing option being exercised. Required for  non-document shipments originating in Canada destinated for any country other than Canada, the United States, Puerto Rico, or the U.S. Virgin Islands.
	B13AFilingOption *ExportDetailB13AFilingOption `json:"b13AFilingOption,omitempty"`

	// DestinationControlDetail Use this object to specify the appropriate destination control statement type(s). Also make sure to specify destination country and end user.
	DestinationControlDetail *DestinationControlDetail `json:"destinationControlDetail,omitempty"`

	// ExportComplianceStatement For US export shipments requiring an EEI, enter the ITN number received from AES when you filed your shipment or the FTR (Foreign Trade Regulations) exemption number.The proper format for an ITN number is AES XYYYYMMDDNNNNNN where YYYYMMDD is date and NNNNNN are numbers generated by the AES.<br> Example: AESX20220714987654<br>Note: The ITN or FTR exemption number you submit in the ship request prints on the international shipping label.<br><br>For CA export shipments,it can be Proof of report number(15-32 alphanumeric) , Summary proof of report number(7-32 alphanumeric) or Exemption number(2 digit) based on the selected b13AFilingOption.<br>Example: 98765432107654321(POR number), 7654321(Summary POR number) and 02(Exemption number). <br>For FTR exemption number you need provide a predefined value as NO_EEI_30_37_A.
	ExportComplianceStatement *string `json:"exportComplianceStatement,omitempty"`

	// PermitNumber This is a Permit Number. This field is applicable only to Canada export non-document shipments of any value to any destination. No special characters are allowed.<br> Example: 12345
	PermitNumber *string `json:"permitNumber,omitempty"`
}

// ExportDetailB13AFilingOption Specify the filing option being exercised. Required for  non-document shipments originating in Canada destinated for any country other than Canada, the United States, Puerto Rico, or the U.S. Virgin Islands.
type ExportDetailB13AFilingOption string

// ExpressFreightDetail Indicates the advance booking number, shipper load /count and packing list details. This details must be provided by the user during freight shipment.
type ExpressFreightDetail struct {
	// BookingConfirmationNumber This is an advanced booking number that must be acquired through the appropriate channel in the shipment origin country. Without the booking number pickup and space allocation for the Express Freight shipment are not guaranteed. <br>Minimum length: 5 digits <br> Maximum length: 12 digits  <br>Example: XXXX56789812
	BookingConfirmationNumber *string `json:"bookingConfirmationNumber,omitempty"`

	// PackingListEnclosed This indicates whether or not the Packing List is enclosed with the shipment. A packing list is a document that includes details about the contents of a package. <br> Example: true
	PackingListEnclosed *bool `json:"packingListEnclosed,omitempty"`

	// ShippersLoadAndCount Indicates the content of a container were loaded and counted by the shipper.<br>Minimum length: 1 digits <br> Maximum length: 5 digits <br>Example:  If a skid has 32 small boxes on it that are shrinkwrapped, the shippersLoadAndCount should be “32”
	ShippersLoadAndCount *int32 `json:"shippersLoadAndCount,omitempty"`
}

// FullSchemaCancelTag The input details required to cancel a tag.
type FullSchemaCancelTag struct {
	// AccountNumber The specific FedEx customer account number (account value and account key) associated with the shipment.
	AccountNumber ShipmentAccountNumber `json:"accountNumber"`

	// CompletedTagDetail The details of the package for which shipping has been completed. The details include dispatch confirmation number, dispatch date, location, and the cxs alerts associated with the process.
	CompletedTagDetail CompletedTagDetail2 `json:"completedTagDetail"`

	// ServiceType This is the FedEx service type associated with the shipment.<br>Example: PRIORITY_OVERNIGHT<br><a onclick='loadDocReference("servicetypes")'>Click here to see Service Types</a>
	ServiceType string `json:"serviceType"`

	// TrackingNumber The tracking number for the Express or Ground Tag to the cancelled.<br>Example: 301025281523<br><a onclick='loadDocReference("mocktrackingnumbersforfedexexpressandfedexground")'>Click here to see mock tracking numbers for FedEx Express and FedEx Ground.</a>
	TrackingNumber *string `json:"trackingNumber,omitempty"`
}

// FullSchemaVerifyShipment The request elements required to create a shipment.
type FullSchemaVerifyShipment struct {
	// AccountNumber The account number associated with the shipment.
	AccountNumber *ShipperAccountNumber `json:"accountNumber,omitempty"`

	// RequestedShipment This is the detailed shipment request data to be validated before being submitted to FedEx.
	RequestedShipment RequestedShipmentVerify `json:"requestedShipment"`
}

// FullSchemaGetConfirmedShipmentAsyncResults defines model for FullSchema-getConfirmedShipmentAsyncResults.
type FullSchemaGetConfirmedShipmentAsyncResults struct {
	// AccountNumber This is FedEx Account number details.
	AccountNumber AccountNumber `json:"accountNumber"`

	// JobId Indicates the job under which the deferred shipment artifacts must be identified in the subsequent retrieval request. <br> Example: 89sxxxxx233ae24ff31xxxxx
	JobId string `json:"jobId"`
}

// FullSchemaCancelShipment The request elements required to cancel a shipment.
type FullSchemaCancelShipment struct {
	// AccountNumber The account number (account value) associated with the shipment.
	AccountNumber ShipperAccountNumber `json:"accountNumber"`

	// DeletionControl Specifies which packages in a shipment to be canceled<b>DELETE_ALL_PACKAGES</b> which will cancel all tracking numbers associated to the shipment.
	DeletionControl *FullSchemaCancelShipmentDeletionControl `json:"deletionControl,omitempty"`

	// EmailShipment A boolean flag passed by Clients to indicate that whether a shipment is a EMAIL shipment(Pending Shipment) or not. Once a shipment is confirmed, it can no longer be cancelled by having this flag as True.
	EmailShipment *bool `json:"emailShipment,omitempty"`

	// SenderCountryCode The two-letter sender Country code(Ex: US, CA, GB..etc).<br>Example: US<br><a onclick='loadDocReference("countrycodes")'>Click here to see Country Codes</a>
	SenderCountryCode *string `json:"senderCountryCode,omitempty"`

	// TrackingNumber This is an unique number assigned by FedEx to the packages for tracking.<br>Example: "794953555571"
	TrackingNumber string `json:"trackingNumber"`
}

// FullSchemaCancelShipmentDeletionControl Specifies which packages in a shipment to be canceled<b>DELETE_ALL_PACKAGES</b> which will cancel all tracking numbers associated to the shipment.
type FullSchemaCancelShipmentDeletionControl string

// FullSchemaCreateTag defines model for Full_Schema_Create_Tag.
type FullSchemaCreateTag struct {
	// AccountNumber The specific FedEx customer account number (account value) associated with the shipment.
	AccountNumber AccountNumber `json:"accountNumber"`

	// RequestedShipment The shipment data describing the shipment being tendered to FedEx.
	RequestedShipment CreateTagRequestedShipment `json:"requestedShipment"`
}

// FullSchemaShip The request elements required to create a shipment.
type FullSchemaShip struct {
	// AccountNumber The account number associated with the shipment.
	AccountNumber ShipperAccountNumber `json:"accountNumber"`

	// LabelResponseOptions This is to specify whether the encoded bytecode or  the Label URL to be returned in the response.<p>Valid values:<ul><li>LABEL &ndash; Indicates request is for encoded bytecode.</li><li>URL_ONLY &ndash; Indicates label URL request.</li></ul>Note: For asynchronous shipment (More than 40 packages) request only the value LABEL is suported.</p><br><i>Note: With URL_ONLY option, the URL once created will be active for 12 hours.</i>
	LabelResponseOptions LABELRESPONSEOPTIONS `json:"labelResponseOptions"`

	// MergeLabelDocOption It specifies the content of the merged pdf URL in the response. The merged pdf URL is generated only if the labelResponseOption is indicated as URL_ONLY.<ul><li>If the value is 'LABELS_AND_DOCS', then merged (all shipping labels and shipping documents) pdf URL will be returned.</li><li>If the value is 'LABELS_ONLY', merged (all shipping labels only) pdf URL will be returned.</li><li>If the value is 'NONE', then no merged pdf URL will be returned.</li></ul><br>This is optional field and will default to LABELS_AND_DOCS.<br>Note: If the value is 'LABELS_ONLY', then the returned merged pdf label will not be in the Base64 encoded format.
	MergeLabelDocOption *FullSchemaShipMergeLabelDocOption `json:"mergeLabelDocOption,omitempty"`

	// OneLabelAtATime This flag is used to specify if the shipment is singleshot mps or one Label at a time, piece by piece shipment. Default is false. If true, one label at a time is processed.
	OneLabelAtATime *bool `json:"oneLabelAtATime,omitempty"`

	// ProcessingOptionType Indicate the processing option for submitting a Single shot MPS shipment. The value indicates if the MPS to be processed synchronously or asynchronously.<br>Note: <ul><li>Default value is SYNCHRONOUS_ONLY.</li><li>Value or element is not needed when groupPackageCount is less than or equal to 40.</li><li>Must provide element with value ALLOW_ASYNCHRONOUS when groupPackageCount is greater than 40.</li></ul>
	ProcessingOptionType *AsynchronousProcessingOptionType1 `json:"processingOptionType,omitempty"`

	// RequestedShipment The descriptive data of the requested shipment.
	RequestedShipment RequestedShipment `json:"requestedShipment"`

	// ShipAction Indicate shipment action for the Shipment. <ul><li>CONFIRM &ndash; used in case of shipment submission</li><li>TRANSFER &ndash; used in case of Email Label Shipment or Pending Shipment submission.
	ShipAction *OpenShipmentAction `json:"shipAction,omitempty"`
}

// FullSchemaShipMergeLabelDocOption It specifies the content of the merged pdf URL in the response. The merged pdf URL is generated only if the labelResponseOption is indicated as URL_ONLY.<ul><li>If the value is 'LABELS_AND_DOCS', then merged (all shipping labels and shipping documents) pdf URL will be returned.</li><li>If the value is 'LABELS_ONLY', merged (all shipping labels only) pdf URL will be returned.</li><li>If the value is 'NONE', then no merged pdf URL will be returned.</li></ul><br>This is optional field and will default to LABELS_AND_DOCS.<br>Note: If the value is 'LABELS_ONLY', then the returned merged pdf label will not be in the Base64 encoded format.
type FullSchemaShipMergeLabelDocOption string

// GeneralAgencyAgreementDetail Use this object to specify details to generate general agency agreement detail.
type GeneralAgencyAgreementDetail struct {
	// DocumentFormat Specify the shipping document format.
	DocumentFormat *ShippingDocumentFormat `json:"documentFormat,omitempty"`
}

// GetOpenShipmentResultsOutputVO defines model for GetOpenShipmentResultsOutputVO.
type GetOpenShipmentResultsOutputVO struct {
	// Alerts object indicate the alert details received in the output.
	Alerts *[]Alert `json:"alerts,omitempty"`

	// TransactionShipments These are shipping transaction details, such as master tracking number, service type, and ship date and time.
	TransactionShipments *[]TransactionShipmentOutputVO `json:"transactionShipments,omitempty"`
}

// HazardousCommodityContent001 Customer-provided specifications for handling individual commodities.
type HazardousCommodityContent001 struct {
	// Description Required<br>Details of hazardous commodity description.
	Description *HazardousCommodityDescription01 `json:"description,omitempty"`

	// InnerReceptacles Specifies the inner receptacles within the container.
	InnerReceptacles *[]HazardousCommodityInnerReceptacleDetail01 `json:"innerReceptacles,omitempty"`

	// Options Indicates details of hazardous commodity option detail.
	Options *HazardousCommodityOptionDetail01 `json:"options,omitempty"`

	// Quantity Specify the Hazardous commodity quantity details.
	Quantity *HazardousCommodityQuantityDetail `json:"quantity,omitempty"`
}

// HazardousCommodityDescription01 Required<br>Details of hazardous commodity description.
type HazardousCommodityDescription01 struct {
	// Authorization Information related to quantity limitations and operator or state variations as may be applicable to the dangerous goods commodity.
	Authorization *string `json:"authorization,omitempty"`

	// HazardClass Specifies the hazard class for the commodity<br>Example: hazard Class
	HazardClass *string `json:"hazardClass,omitempty"`

	// Id ID<br>Example: 123
	Id *string `json:"id,omitempty"`

	// LabelText Specifies the text for the label.
	LabelText *string `json:"labelText,omitempty"`

	// PackingDetails Specifies documentation and limits for validation of an individual packing group/category. DG Data Upload Mode: Required (IATA), Optional (Other), DG Full Validation Mode: Required (IATA), Optional (Other),
	PackingDetails *HazardousCommodityPackingDetail01 `json:"packingDetails,omitempty"`

	// PackingGroup Identifies DOT packing group for a hazardous commodity
	PackingGroup HazardousCommodityDescription01PackingGroup `json:"packingGroup"`

	// Percentage Percentage<br>Example: 12.45
	Percentage *float64 `json:"percentage,omitempty"`

	// ProcessingOptions Indicates any special processing options to be applied to the description of the dangerous goods commodity <br> Example: ["INCLUDE_SPECIAL_PROVISIONS"]
	ProcessingOptions *[]HazardousCommodityDescription01ProcessingOptions `json:"processingOptions,omitempty"`

	// ProperShippingName The proper shipping name as defined by the regulation. The name can also include qualifying words<br>Example: properShippingName
	ProperShippingName *string `json:"properShippingName,omitempty"`

	// ReportableQuantity Reportable Quantity
	ReportableQuantity bool `json:"reportableQuantity"`

	// SequenceNumber Required<br>Specify the sequence number.<br>Example: 9812
	SequenceNumber *int32 `json:"sequenceNumber,omitempty"`

	// SubsidiaryClasses Required
	//
	// Indicates list of subsidiary classes<br>Example: ["Subsidiary Classes"]
	SubsidiaryClasses *[]string `json:"subsidiaryClasses,omitempty"`

	// TechnicalName Specifies the technical name for the hazardous material.
	TechnicalName *string `json:"technicalName,omitempty"`
}

// HazardousCommodityDescription01PackingGroup Identifies DOT packing group for a hazardous commodity
type HazardousCommodityDescription01PackingGroup string

// HazardousCommodityDescription01ProcessingOptions defines model for HazardousCommodityDescription01.ProcessingOptions.
type HazardousCommodityDescription01ProcessingOptions string

// HazardousCommodityInnerReceptacleDetail01 defines model for HazardousCommodityInnerReceptacleDetail01.
type HazardousCommodityInnerReceptacleDetail01 struct {
	// Quantity Indicates the Hazardous Commodity Quantity Detail.
	Quantity *HazardousCommodityQuantityDetail002 `json:"quantity,omitempty"`
}

// HazardousCommodityOptionDetail01 Indicates details of hazardous commodity option detail.
type HazardousCommodityOptionDetail01 struct {
	// CustomerSuppliedLabelText 'DG Data Upload Mode:- Optional.,DG Full Validation Mode:- Optional,Text used in labeling the commodity under control of the LabelTextOption field<br>Example:Customer Supplied Label Text'
	//
	CustomerSuppliedLabelText *string `json:"customerSuppliedLabelText,omitempty"`

	// LabelTextOption Indicates the label text option.
	LabelTextOption *HazardousCommodityOptionDetail01LabelTextOption `json:"labelTextOption,omitempty"`
}

// HazardousCommodityOptionDetail01LabelTextOption Indicates the label text option.
type HazardousCommodityOptionDetail01LabelTextOption string

// HazardousCommodityPackingDetail01 Specifies documentation and limits for validation of an individual packing group/category. DG Data Upload Mode: Required (IATA), Optional (Other), DG Full Validation Mode: Required (IATA), Optional (Other),
type HazardousCommodityPackingDetail01 struct {
	// CargoAircraftOnly A Boolean value that, when True, specifies the mode of shipment transportation should be Cargo Aircraft for Dangerous Goods. <br>Note: An identifier DGD-CAO is added in AWB for cargo aircraft shipments.
	CargoAircraftOnly bool `json:"cargoAircraftOnly"`

	// PackingInstructions Coded specification for how commodity is to be packed.<br>Example: packing Instructions
	PackingInstructions *string `json:"packingInstructions,omitempty"`
}

// HazardousCommodityQuantityDetail Specify the Hazardous commodity quantity details.
type HazardousCommodityQuantityDetail struct {
	// Amount Indicate the amount of the commodity in alternate units.<br>Example: 24.56
	Amount float64 `json:"amount"`

	// QuantityType Indicate the measure of units quantity to be validated.
	QuantityType HazardousCommodityQuantityDetailQuantityType `json:"quantityType"`

	// Units Indicate the unit of measure.<br>Example: KG
	Units *string `json:"units,omitempty"`
}

// HazardousCommodityQuantityDetailQuantityType Indicate the measure of units quantity to be validated.
type HazardousCommodityQuantityDetailQuantityType string

// HazardousCommodityQuantityDetail002 Indicates the Hazardous Commodity Quantity Detail.
type HazardousCommodityQuantityDetail002 struct {
	// Amount Number of units of the type below.<br>Example: 34.56
	Amount float64 `json:"amount"`

	// QuantityType Specifies which measure of quantity is to be validated.
	QuantityType HazardousCommodityQuantityDetail002QuantityType `json:"quantityType"`

	// Units Specifies the units.<br>Example: KG
	Units *string `json:"units,omitempty"`
}

// HazardousCommodityQuantityDetail002QuantityType Specifies which measure of quantity is to be validated.
type HazardousCommodityQuantityDetail002QuantityType string

// HoldAtLocationDetail Use this object to specify required information for a shipment to be held at destination FedEx location.<br><i>Note: This object HoldAtLocationDetail is Required, when HOLD_AT_LOCATION is chosen in the specialServiceTypes.</i>
type HoldAtLocationDetail struct {
	// LocationContactAndAddress Specifies the contact and address details of a location.
	LocationContactAndAddress *ContactAndAddress `json:"locationContactAndAddress,omitempty"`

	// LocationId This is an alphanumeric identifier used for Location/Facility Identification.<br>Example: YBZA<br>Note: <ul><li>For HAL Shipment, Location ID is <b>REQUIRED</b> to ensure packages are delivered to the right location.</li><li>Use endpoint [<b>Find Location</b>] in [<b>Location Search API</b>], to find the correct location ID for your shipment.</li></ul>
	LocationId string `json:"locationId"`

	// LocationType Specifies the type of facility at which package/shipment is to be held.
	LocationType *HoldAtLocationDetailLocationType `json:"locationType,omitempty"`
}

// HoldAtLocationDetailLocationType Specifies the type of facility at which package/shipment is to be held.
type HoldAtLocationDetailLocationType string

// HomeDeliveryPremiumDetail These are Special service elements for FedEx Ground Home Delivery shipments. If selected, element homedeliveryPremiumType is mandatory.
type HomeDeliveryPremiumDetail struct {
	// DeliveryDate This is delivery date. Required for FedEx Date Certain Home Delivery. Valid dates are Monday to Sunday. <br>There may be a delay in delivery on Sundays to locations that are geographically difficult to access.<br>Example: 2019-06-26
	DeliveryDate *string `json:"deliveryDate,omitempty"`

	// HomedeliveryPremiumType This is Home Delivery Premium Type. It allows to specify additional premimum service options for the home delivery shipment. Can specify Evening delivery or a Date certain, or can specify appointment for the delivery.
	HomedeliveryPremiumType *HomeDeliveryPremiumDetailHomedeliveryPremiumType `json:"homedeliveryPremiumType,omitempty"`

	// PhoneNumber Indicate the phone number. Only numeric values allowed.<br> Note that phoneNumber is mandatory when homedeliveryPremiumType is DATE_CERTAIN or EVENING.
	PhoneNumber *PhoneNumber1 `json:"phoneNumber,omitempty"`
}

// HomeDeliveryPremiumDetailHomedeliveryPremiumType This is Home Delivery Premium Type. It allows to specify additional premimum service options for the home delivery shipment. Can specify Evening delivery or a Date certain, or can specify appointment for the delivery.
type HomeDeliveryPremiumDetailHomedeliveryPremiumType string

// InternationalControlledExportDetail Use this object to specify International Controlled Export shipment Details.<br>Note: licenseOrPermitExpirationDate and licenseOrPermitNumber are not required when type is WAREHOUSE_WITHDRAWAL.
type InternationalControlledExportDetail struct {
	// EntryNumber Indicate Entry Number for the export.<br>Example: 125
	EntryNumber *string `json:"entryNumber,omitempty"`

	// ForeignTradeZoneCode Indicate the Foreign Trade Zone Code.<br>Example: US
	ForeignTradeZoneCode *string `json:"foreignTradeZoneCode,omitempty"`

	// LicenseOrPermitExpirationDate Indicate the expiration date for the license or permit. The format is YYYY-MM-DD.<br>Example: "2019-12-03"
	LicenseOrPermitExpirationDate *string `json:"licenseOrPermitExpirationDate,omitempty"`

	// LicenseOrPermitNumber Indicate License Or Permit Number for the commodity being exported.<br>Example: 11
	LicenseOrPermitNumber *string `json:"licenseOrPermitNumber,omitempty"`

	// Type Indicate International Controlled Export Type.
	Type InternationalControlledExportDetailType `json:"type"`
}

// InternationalControlledExportDetailType Indicate International Controlled Export Type.
type InternationalControlledExportDetailType string

// InternationalTrafficInArmsRegulationsDetail These are International Traffic In Arms Regulations shipment service details.
type InternationalTrafficInArmsRegulationsDetail struct {
	// LicenseOrExemptionNumber The export or license number for the ITAR shipment.<br>Minimum length is 5 characters.<br>Maximum length is 21 characters.<br>Example: 9871234
	LicenseOrExemptionNumber string `json:"licenseOrExemptionNumber"`
}

// JustContactAndAddress defines model for JustContactAndAddress.
type JustContactAndAddress struct {
	// Address Descriptive data for a physical location. May be used as an actual physical address (place to which one could go), or as a container of "address parts" which should be handled as a unit (such as a city-state-ZIP combination within the US).
	Address *Address `json:"address,omitempty"`

	// Contact Specify the contact information.
	Contact *Contact `json:"contact,omitempty"`
}

// LABELRESPONSEOPTIONS This is to specify whether the encoded bytecode or  the Label URL to be returned in the response.<p>Valid values:<ul><li>LABEL &ndash; Indicates request is for encoded bytecode.</li><li>URL_ONLY &ndash; Indicates label URL request.</li></ul>Note: For asynchronous shipment (More than 40 packages) request only the value LABEL is suported.</p><br><i>Note: With URL_ONLY option, the URL once created will be active for 12 hours.</i>
type LABELRESPONSEOPTIONS string

// LabelResponseVO These are shipping document/label specific information.
type LabelResponseVO struct {
	// Alerts These are alerts received in the label response.
	Alerts *[]Alert `json:"alerts,omitempty"`

	// ContentKey This is the content key of the document/label.<br>Example: content key
	ContentKey *string `json:"contentKey,omitempty"`

	// ContentType Indicates the type of document/label.
	ContentType *LabelResponseVOContentType `json:"contentType,omitempty"`

	// CopiesToPrint These are the number of copies to print for the specific document type.<br>Example: 10
	CopiesToPrint *int32 `json:"copiesToPrint,omitempty"`

	// DocType This is the document type.<br>Example: PDF
	DocType *string `json:"docType,omitempty"`

	// EncodedLabel Specifies if the document is encoded.<br>Example: encoded label
	EncodedLabel *string `json:"encodedLabel,omitempty"`

	// TrackingNumber This is the tracking number of the package. <br>Example: 49XXX0000XXX20032835<br>
	TrackingNumber *string `json:"trackingNumber,omitempty"`

	// Url The URL of the shipping document/label<br>Example: https://.../document/v2/document/retrieve/SH,794816968200_Merge/isLabel=true&autoPrint=false<br><i>Note: The URL once created will be active for 24 hours.</i>
	Url *string `json:"url,omitempty"`
}

// LabelResponseVOContentType Indicates the type of document/label.
type LabelResponseVOContentType string

// LabelSpecification These are label specification details includes the image type, printer format, and label stock for label. Can also specify specific details such as doc-tab content, regulatory labels, and masking data on the label.
type LabelSpecification struct {
	// CustomerSpecifiedDetail This object allows the control of label content for customization.
	CustomerSpecifiedDetail *CustomerSpecifiedLabelDetail `json:"customerSpecifiedDetail,omitempty"`

	// ImageType Specify the image format used for a shipping document.<br><a onclick='loadDocReference("labelstocktypes")'>click here to see label format types</a>
	ImageType LabelSpecificationImageType `json:"imageType"`

	// LabelFormatType Specify the label Format Type.<br><a onclick='loadDocReference("labelstocktypes")'>click here to see label format types</a>
	LabelFormatType *LabelSpecificationLabelFormatType `json:"labelFormatType,omitempty"`

	// LabelOrder This is the order of the Shipping label/documents to be generated.
	LabelOrder *LabelSpecificationLabelOrder `json:"labelOrder,omitempty"`

	// LabelPrintingOrientation This is applicable only to documents produced on thermal printers with roll stock.
	LabelPrintingOrientation *LabelSpecificationLabelPrintingOrientation `json:"labelPrintingOrientation,omitempty"`

	// LabelRotation This is applicable only to documents produced on thermal printers with roll stock.
	LabelRotation *LabelSpecificationLabelRotation `json:"labelRotation,omitempty"`

	// LabelStockType Indicate the label stock type used. <br><a onclick='loadDocReference("labelstocktypes")'>click here to see label format types</a>
	LabelStockType LabelSpecificationLabelStockType `json:"labelStockType"`

	// PrintedLabelOrigin Specifies the contact and address details of a location.
	PrintedLabelOrigin *ContactAndAddress `json:"printedLabelOrigin,omitempty"`

	// ReturnedDispositionDetail Specify whether or not the return deposition is needed.
	ReturnedDispositionDetail *bool `json:"returnedDispositionDetail,omitempty"`
}

// LabelSpecificationImageType Specify the image format used for a shipping document.<br><a onclick='loadDocReference("labelstocktypes")'>click here to see label format types</a>
type LabelSpecificationImageType string

// LabelSpecificationLabelFormatType Specify the label Format Type.<br><a onclick='loadDocReference("labelstocktypes")'>click here to see label format types</a>
type LabelSpecificationLabelFormatType string

// LabelSpecificationLabelOrder This is the order of the Shipping label/documents to be generated.
type LabelSpecificationLabelOrder string

// LabelSpecificationLabelPrintingOrientation This is applicable only to documents produced on thermal printers with roll stock.
type LabelSpecificationLabelPrintingOrientation string

// LabelSpecificationLabelRotation This is applicable only to documents produced on thermal printers with roll stock.
type LabelSpecificationLabelRotation string

// LabelSpecificationLabelStockType Indicate the label stock type used. <br><a onclick='loadDocReference("labelstocktypes")'>click here to see label format types</a>
type LabelSpecificationLabelStockType string

// LicenseOrPermitDetail This contains the ADR license information, which identifies the license number, the effective date and the expiration date under which the customer is allowed to ship.
type LicenseOrPermitDetail struct {
	// EffectiveDate Specifies the effective date of the license.<br>The format is [YYYY-MM-DD].<br>Example: 2019-08-09
	EffectiveDate *string `json:"effectiveDate,omitempty"`

	// ExpirationDate Specifies the expiration date of the license.<br>The format is [YYYY-MM-DD].<br>Example: 2019-04-09
	ExpirationDate *string `json:"expirationDate,omitempty"`

	// Number Specifies license or permit detail number.<br>Example: 12345
	Number *string `json:"number,omitempty"`
}

// MasterTrackingId Indicates the tracking details of the package.Required for child shipments of an oneLabelAtATime shipments
type MasterTrackingId struct {
	// FormId This is FedEx tracking Identifier associated with the package.<br>Example: 8600
	FormId *string `json:"formId,omitempty"`

	// TrackingIdType Specify the FedEx transportation type. <br>Example: EXPRESS
	TrackingIdType *string `json:"trackingIdType,omitempty"`

	// TrackingNumber This is the number associated with the package that is used to track it.For child shipment of an oneLabelAtATime shipments,this should be same as the masterTrackingNumber of the parent shipment. <br>Example: 49XXX0000XXX20032835
	TrackingNumber *string `json:"trackingNumber,omitempty"`

	// UspsApplicationId Specify the USPS tracking Identifier associated with FedEx SmartPost shipment.<br>Example: 92
	UspsApplicationId *string `json:"uspsApplicationId,omitempty"`
}

// Message Specifies the advisory details.
type Message struct {
	// Code Specifies the message code for the tag created.<br>Example: code
	Code *string `json:"code,omitempty"`

	// LocalizedText Specifies the message ID and value.<br>Example: localizedText
	LocalizedText *string `json:"localizedText,omitempty"`

	// Parameters Specifies the message parameters list.
	Parameters *[]MessageParameter `json:"parameters,omitempty"`

	// Text Specifies the text message for the tag created.<br>Example: Text
	Text *string `json:"text,omitempty"`
}

// MessageParameter defines model for MessageParameter.
type MessageParameter struct {
	// Id Specifies the message parameter code.<br>Example: message ID
	Id *string `json:"id,omitempty"`

	// Value Specifies the message parameter value of the code.<br>Example: value
	Value *string `json:"value,omitempty"`
}

// Money This customs value is applicable for all items(or units) under the specified commodity
type Money struct {
	// Amount This is the amount. Maximum limit is 5 digits before decimal.<br>Example: 12.45
	Amount *float64 `json:"amount,omitempty"`

	// Currency This is the currency code for the amount.<br>Example: USD<br><a onclick='loadDocReference("currencycodes")'>Click here to see Currency codes</a>
	Currency *string `json:"currency,omitempty"`
}

// NetExplosiveDetail Specifies the total mass of the contained explosive substances, without the mass of any casings, bullets, shells, etc.
type NetExplosiveDetail struct {
	// Amount Specifies amount.<br>Example: 10.0
	Amount *float64 `json:"amount,omitempty"`

	// Type Specifies net explosive  classification type.<br>Example: NET_EXPLOSIVE_WEIGHT
	Type *string `json:"type,omitempty"`

	// Units Specifies net explosive units.<br>Example: units
	Units *string `json:"units,omitempty"`
}

// Op900Detail Use this object to specify details to generate the OP-900 document for hazardous material packages.
type Op900Detail struct {
	// CustomerImageUsages Specify the use and identification of supplied images to be used on document.
	CustomerImageUsages *[]CustomerImageUsage `json:"customerImageUsages,omitempty"`

	// DocumentFormat Specify the shipping document format.
	DocumentFormat *ShippingDocumentFormat `json:"documentFormat,omitempty"`

	// SignatureName Indicates the name to be printed as signature on the document instead of (or in addition to) a signature image.<br>Example: John Hill
	SignatureName *string `json:"signatureName,omitempty"`
}

// OpenShipmentAction Indicate shipment action for the Shipment. <ul><li>CONFIRM &ndash; used in case of shipment submission</li><li>TRANSFER &ndash; used in case of Email Label Shipment or Pending Shipment submission.
type OpenShipmentAction string

// OperationalInstructions defines model for OperationalInstructions.
type OperationalInstructions struct {
	// Content This is an operational instruction printed or available on the shipping document.<br>Example: SECURED
	Content *string `json:"content,omitempty"`

	// Number Specifies the number of operational instructions returned for this shipment.<br>Example: 17
	Number *int32 `json:"number,omitempty"`
}

// PackageBarcodes These are package barcode details. Each instance of this data type represents the set of barcodes (of all types) which are associated with a specific package.
type PackageBarcodes struct {
	// BinaryBarcodes This is binary-style barcodes used for the package identification.
	BinaryBarcodes *[]BinaryBarcode `json:"binaryBarcodes,omitempty"`

	// StringBarcodes This is string-style barcodes  used for package identification.
	StringBarcodes *[]StringBarcode `json:"stringBarcodes,omitempty"`
}

// PackageCODDetail These are COD package details. For use with FedEx Ground services only; COD must be present in shipments special services.
type PackageCODDetail struct {
	// CodCollectionAmount Indicate the COD collection amount.
	CodCollectionAmount *Money `json:"codCollectionAmount,omitempty"`
}

// PackageOperationalDetail Package-level data required for labeling and/or movement.
type PackageOperationalDetail struct {
	// AstraHandlingText This is human-readable astra handling text.
	AstraHandlingText *string `json:"astraHandlingText,omitempty"`

	// Barcodes These are package barcode details. Each instance of this data type represents the set of barcodes (of all types) which are associated with a specific package.
	Barcodes *PackageBarcodes `json:"barcodes,omitempty"`

	// OperationalInstructions These are operational instruction such as Ground Information printed on a given area of the label, one-dimensional barcode with only x-axis that contains the details of the shipment in encrypted form, COD Return operational instructions data such as COD amount, SECURED or UNSECURED.
	OperationalInstructions *[]OperationalInstructions `json:"operationalInstructions,omitempty"`
}

// PackageRateDetail These are package rate details, as calculated per a specific rate type.
type PackageRateDetail struct {
	// BaseCharge The package transportation charge(prior to any discounts applied).<br>Example: 45.67
	BaseCharge *float64 `json:"baseCharge,omitempty"`

	// BillingWeight These are the package weight details.<br>Note: Weight is not required for One rate shipments
	BillingWeight *Weight `json:"billingWeight,omitempty"`

	// Currency This is the currency code. <br>Example: USD<br><a onclick='loadDocReference("currencycodes")'>click here to see Currency codes</a>
	Currency *string `json:"currency,omitempty"`

	// MinimumChargeType Indicates the minumum charge type. INTERNAL FEDEX USE ONLY.
	MinimumChargeType *string `json:"minimumChargeType,omitempty"`

	// NetCharge This is the sum of net freight, total surcharges and total taxes for a package.<br>Example: 121.56
	NetCharge *float64 `json:"netCharge,omitempty"`

	// NetFedExCharge This is sum of net freight and total surcharges (not including totalTaxes) for this package.<br>Example: 12.56
	NetFedExCharge *float64 `json:"netFedExCharge,omitempty"`

	// NetFreight This is the net freight charges. i.e. base charge minus total freight discounts for a package.<br>Example: 4.89
	NetFreight *float64 `json:"netFreight,omitempty"`

	// RateType This is the rate type used.<br>Example: PAYOR_RETAIL_PACKAGE
	RateType *string `json:"rateType,omitempty"`

	// RatedWeightMethod Indicates the weight types used in calculating this rate, such as actual weight or dimensional weight.<br> Example: DIM
	RatedWeightMethod *string `json:"ratedWeightMethod,omitempty"`

	// Surcharges These are all surcharges on this package.<br><a onclick='loadDocReference("surcharges")'>click here to see Surcharges</a>
	Surcharges *[]Surcharge `json:"surcharges,omitempty"`

	// TotalFreightDiscounts The sum of all freight discounts for this package.<br>Example: 44.55
	TotalFreightDiscounts *float64 `json:"totalFreightDiscounts,omitempty"`

	// TotalRebates Specifies total rebates on this package.<br>Example: 4.56
	TotalRebates *float64 `json:"totalRebates,omitempty"`

	// TotalSurcharges The sum of all surcharges on this package.<br>Example: 22.56
	TotalSurcharges *float64 `json:"totalSurcharges,omitempty"`

	// TotalTaxes The sum of all taxes on this package.<br>Example: 3.45
	TotalTaxes *float64 `json:"totalTaxes,omitempty"`
}

// PackageRating This class groups together all package-level rate data for a single package (across all rate types) as part of the response to a shipping request, which groups shipment-level data together and groups package-level data by package.
type PackageRating struct {
	// ActualRateType This is the actual rate type. It identifies which entry in the following array is considered as presenting the actual rates for the package.<br>Example: PAYOR_ACCOUNT_PACKAGE
	ActualRateType *string `json:"actualRateType,omitempty"`

	// EffectiveNetDiscount This is the difference between the list and account net charge.<br>Example: 0.0
	EffectiveNetDiscount *float64 `json:"effectiveNetDiscount,omitempty"`

	// PackageRateDetails Data for a package's rates, as calculated per a specific rate type.
	PackageRateDetails *[]PackageRateDetail `json:"packageRateDetails,omitempty"`
}

// PackageSpecialServicesRequested These are special services that are available at the package level for some or all service types.
type PackageSpecialServicesRequested struct {
	// AlcoholDetail These are detcontentails for the package containing alcohol. This is required for alcohol special service. The alcoholRecipientType is required.
	AlcoholDetail *AlcoholDetail `json:"alcoholDetail,omitempty"`

	// BatteryDetails Provide details about the batteries or cells that are contained within this specific package.
	BatteryDetails *[]BatteryDetail `json:"batteryDetails,omitempty"`

	// DangerousGoodsDetail Provide dangerous goods shipment details.
	DangerousGoodsDetail *DangerousGoodsDetail `json:"dangerousGoodsDetail,omitempty"`

	// DryIceWeight These are the package weight details.<br>Note: Weight is not required for One rate shipments
	DryIceWeight *Weight3 `json:"dryIceWeight,omitempty"`

	// PackageCODDetail These are COD package details. For use with FedEx Ground services only; COD must be present in shipments special services.
	PackageCODDetail *PackageCODDetail `json:"packageCODDetail,omitempty"`

	// PieceCountVerificationBoxCount Provide the pieceCount or VerificationBoxCount for batteries or cells that are contained within this specific package.
	PieceCountVerificationBoxCount *int32 `json:"pieceCountVerificationBoxCount,omitempty"`

	// PriorityAlertDetail Specifies the Priority Alert Detail.
	PriorityAlertDetail *PriorityAlertDetail `json:"priorityAlertDetail,omitempty"`

	// SignatureOptionDetail This element specifies Signature option details.
	SignatureOptionDetail *SignatureOptionDetail `json:"signatureOptionDetail,omitempty"`

	// SignatureOptionType Indicate the Signature Type. <br>Valid Values: <ul><li>ADULT - Adult signature required, at recipient address.</li><li>DIRECT - Signature required, at recipient address.</li><li>INDIRECT - Signature required, alternate address is accepted.This option is available for residential deliveries only</li><li>NO_SIGNATURE_REQUIRED - Signature is not required.</li><li>SERVICE_DEFAULT - Signature handled as per current Service Guide.</li></ul>
	SignatureOptionType *PackageSpecialServicesRequestedSignatureOptionType `json:"signatureOptionType,omitempty"`

	// SpecialServiceTypes Indicate the types of special services requested for the shipment.<br><a onclick='loadDocReference("packagelevelspecialservicetypes")'>click here to see Package Special Service Types</a>
	SpecialServiceTypes *[]string `json:"specialServiceTypes,omitempty"`
}

// PackageSpecialServicesRequestedSignatureOptionType Indicate the Signature Type. <br>Valid Values: <ul><li>ADULT - Adult signature required, at recipient address.</li><li>DIRECT - Signature required, at recipient address.</li><li>INDIRECT - Signature required, alternate address is accepted.This option is available for residential deliveries only</li><li>NO_SIGNATURE_REQUIRED - Signature is not required.</li><li>SERVICE_DEFAULT - Signature handled as per current Service Guide.</li></ul>
type PackageSpecialServicesRequestedSignatureOptionType string

// Parameter List of parameters which indicates the properties of the alert message.
type Parameter struct {
	// Key Indicates the value associated with the key.
	Key *string `json:"key,omitempty"`

	// Value Identifies the error option to be applied.
	Value *string `json:"value,omitempty"`
}

// PartyAccountNumber This is FedEx Account number details.
type PartyAccountNumber struct {
	// Value The account number value.Value is required if the paymentType is RECIPIENT, THIRD_PARTY or COLLECT.
	Value *string `json:"value,omitempty"`
}

// PartyAccountNumber2 The account number of the recipient.
type PartyAccountNumber2 struct {
	// Value Conditional.<br> The account number value. Max Length is 9.<br>Example: 123456789
	Value *string `json:"value,omitempty"`
}

// PartyAddress This is detailed information on physical location. May be used as an actual physical address (place to which one could go), or as a container of address parts which should be handled as a unit (such as a city-state-ZIP combination within the US).
type PartyAddress struct {
	// City The name of city, town of the recipient.Max length is 35.<br>Example: Beverly Hills
	City string `json:"city"`

	// CountryCode This is the two-letter country code.<br>Maximum length is 2.<br>Example: US<br><a onclick='loadDocReference("countrycodes")'>click here to see Country codes</a>
	CountryCode string `json:"countryCode"`

	// PostalCode This is the postal code.<br>Note: This is Optional for non postal-aware countries. Maximum length is 10.<br>Example: 65247<br><a onclick='loadDocReference("postalawarecountries")'>click here to see Postal aware countries</a>
	PostalCode *string `json:"postalCode,omitempty"`

	// Residential Indicate whether this address is residential (as opposed to commercial).
	Residential *bool `json:"residential,omitempty"`

	// StateOrProvinceCode The US States,Canada and Puerto Rico Province codes of the recipient. The Format and presence of this field may vary depending on the country.Only 2 characters are accepted for US and Canada.<br>Example: CA
	StateOrProvinceCode *string `json:"stateOrProvinceCode,omitempty"`

	// StreetLines Combination of number, street name, etc. At least one line is required for a valid physical address. Empty lines should not be included. Max Length is 35.<br>Example: [1550 Union Blvd,Suite 302]
	StreetLines []string `json:"streetLines"`
}

// PartyAddress1 This is detailed information on physical location. May be used as an actual physical address (place to which one could go), or as a container of address parts which should be handled as a unit (such as a city-state-ZIP combination within the US).
type PartyAddress1 struct {
	// City This is a placeholder for City Name. <br>Example: Beverly Hills
	City *string `json:"city,omitempty"`

	// CountryCode This is the two-letter country code.<br>Maximum length is 2.<br>Example: US<br><a onclick='loadDocReference("countrycodes")'>click here to see Country codes</a>
	CountryCode *string `json:"countryCode,omitempty"`

	// GeographicCoordinates Indicates the geographic coordinates. <br> example: geographicCoordinates
	GeographicCoordinates *string `json:"geographicCoordinates,omitempty"`

	// PostalCode This is the Postal code.<br>This is Optional for non postal-aware countries.<br>Maximum length is 10.<br>Example: 65247<br><a onclick='loadDocReference("postalawarecountries")'>click here to see Postal aware countries</a>
	PostalCode *string `json:"postalCode,omitempty"`

	// Residential Indicate whether this address is residential (as opposed to commercial).
	Residential *bool `json:"residential,omitempty"`

	// StateOrProvinceCode This is a placeholder for State or Province code.Only 2 characters are accepted for US and Canada.<br>Example: CA.<br><a onclick='loadDocReference("canadaprovincecodes")'>click here to see State or Province Code</a>
	StateOrProvinceCode *string `json:"stateOrProvinceCode,omitempty"`

	// StreetLines This is the combination of number, street name, etc. Maximum length per line is 35.<br>Example: 10 FedEx Parkway, Suite 302.<p><i>Note:<ul><li>At least one line is required.</li><li>Streetlines more than 3 will be ignored.</li><li>Empty lines should not be included</li><li>For SmartPost Shipments, only 30 characters from the individual street lines will be printed on the labels.</li></ul></i></p>
	StreetLines *[]string `json:"streetLines,omitempty"`
}

// PartyContact Indicate the contact details for this shipment.
type PartyContact struct {
	// CompanyName Specify contact company name. Maximum length is 35. <br>Note: Either the companyName or personName is mandatory.
	CompanyName *string `json:"companyName,omitempty"`

	// EmailAddress Specify contact email address. Maximum length is 80. <br> Example: sample@company.com
	EmailAddress *string `json:"emailAddress,omitempty"`

	// PersonName Specify contact name. Maximum length is 70. <br>Note: Either the companyName or personName is mandatory.<br> Example: John Taylor
	PersonName *string `json:"personName,omitempty"`

	// PhoneExtension Specify contact phone extension. Maximum length is 6. <br> Example: 1234
	PhoneExtension *string `json:"phoneExtension,omitempty"`

	// PhoneNumber The shipper's phone number. <br>Minimum length is 10 and supports maximum of 15 for certain countries using longer phone numbers.<br>Note: For US and CA, a phone number must have exactly 10 digits, plus an optional leading country code of '1' or '+1'.<br>Example: 918xxxxx890
	PhoneNumber string `json:"phoneNumber"`
}

// PartyContact1 Indicate the contact details for this shipment.
type PartyContact1 struct {
	// CompanyName Specify contact company name.<br>Recommended length is 35.<br>Note: There's no specific validation of the company name.
	CompanyName *string `json:"companyName,omitempty"`

	// EmailAddress Specify contact email address. Maximum length is 80. <br> Example: sample@company.com
	EmailAddress *string `json:"emailAddress,omitempty"`

	// FaxNumber Specify contact person's fax number. Maximum length is 15.
	FaxNumber *string `json:"faxNumber,omitempty"`

	// PersonName Specify contact name. Maximum length is 70. <br> Example: John Taylor
	PersonName *string `json:"personName,omitempty"`

	// PhoneExtension Specify contact phone extension. Maximum length is 6. <br> Example: 1234
	PhoneExtension *string `json:"phoneExtension,omitempty"`

	// PhoneNumber Specify contact phone number. <br>Minimum length is 10 and supports Maximum as 15 for certain countries using longer phone numbers. <br>Note: Recommended Maximum length is 15 and there's no specific validation will be done for the phone number. <br> Example: 918xxxxx890
	PhoneNumber *string `json:"phoneNumber,omitempty"`
}

// Party1 defines model for Party_1.
type Party1 struct {
	// AccountNumber This is FedEx Account number details.
	AccountNumber *PartyAccountNumber `json:"accountNumber,omitempty"`

	// Address This is detailed information on physical location. May be used as an actual physical address (place to which one could go), or as a container of address parts which should be handled as a unit (such as a city-state-ZIP combination within the US).
	Address *PartyAddress `json:"address,omitempty"`

	// Contact Indicate the contact details for this shipment.
	Contact *PartyContact `json:"contact,omitempty"`

	// Tins This is the tax identification number details.
	Tins *[]TaxpayerIdentification `json:"tins,omitempty"`
}

// Party2 Use this object to provide the attributes such as physical address, contact information and account number information.
type Party2 struct {
	// AccountNumber This is FedEx Account number details.
	AccountNumber *PartyAccountNumber `json:"accountNumber,omitempty"`

	// Address This is detailed information on physical location. May be used as an actual physical address (place to which one could go), or as a container of address parts which should be handled as a unit (such as a city-state-ZIP combination within the U.S.).
	Address *Address1 `json:"address,omitempty"`

	// Contact Indicate the contact details of the shipper.
	Contact *Contact1 `json:"contact,omitempty"`

	// Tins This is the tax identification number details.
	Tins *[]TaxpayerIdentification `json:"tins,omitempty"`
}

// Party3 defines model for Party_3.
type Party3 struct {
	// Address This is detailed information on physical location. May be used as an actual physical address (place to which one could go), or as a container of address parts which should be handled as a unit (such as a city-state-ZIP combination within the US).
	Address *PartyAddress1 `json:"address,omitempty"`

	// Contact Indicate the contact details for this shipment.
	Contact *PartyContact1 `json:"contact,omitempty"`

	// Tins This is the tax identification number details.
	Tins *[]TaxpayerIdentification `json:"tins,omitempty"`
}

// Payment Specifies the payment details specifying the method and means of payment to FedEx for providing shipping services.
type Payment struct {
	// PaymentType Specifies the payment Type. <br>Note: This is required for Express, Ground and SmartPost shipments.<br> The payment type COLLECT is applicable only for Ground shipments.
	PaymentType PaymentPaymentType `json:"paymentType"`

	// Payor Payor is mandatory when the paymentType is RECIPIENT, THIRD_PARTY or COLLECT.
	Payor *Payor `json:"payor,omitempty"`
}

// PaymentPaymentType Specifies the payment Type. <br>Note: This is required for Express, Ground and SmartPost shipments.<br> The payment type COLLECT is applicable only for Ground shipments.
type PaymentPaymentType string

// Payment1 This is a payment type, basically indicates who is the payor for the shipment.Conditional required for International Shipments
type Payment1 struct {
	// BillingDetails These are billing details.
	BillingDetails *BillingDetails `json:"billingDetails,omitempty"`

	// PaymentType This is a payment type, basically indicates who is the payor for the shipment.<br>Required for Express and Ground.<br>The payment type COLLECT is applicable only for Ground shipments.
	PaymentType *Payment1PaymentType `json:"paymentType,omitempty"`

	// Payor Information about the person who is paying for the shipment. Not applicable for credit card payment.
	Payor *Payor1 `json:"payor,omitempty"`
}

// Payment1PaymentType This is a payment type, basically indicates who is the payor for the shipment.<br>Required for Express and Ground.<br>The payment type COLLECT is applicable only for Ground shipments.
type Payment1PaymentType string

// Payor Payor is mandatory when the paymentType is RECIPIENT, THIRD_PARTY or COLLECT.
type Payor struct {
	// ResponsibleParty Indicate the payer Information responsible for paying for the shipment. <br>Note: ResponsibleParty accountNumber is required for ACCOUNT based services.
	ResponsibleParty ResponsiblePartyParty `json:"responsibleParty"`
}

// Payor1 Information about the person who is paying for the shipment. Not applicable for credit card payment.
type Payor1 struct {
	// ResponsibleParty Use this object to provide the attributes such as physical address, contact information and account number information.
	ResponsibleParty *Party2 `json:"responsibleParty,omitempty"`
}

// PendingShipmentAccessDetail This information describes how and when a online email return label shipment may be accessed for completion.
type PendingShipmentAccessDetail struct {
	// AccessorDetails Indicates the details about the users who can access the shipment.
	AccessorDetails *[]PendingShipmentAccessorDetail `json:"accessorDetails,omitempty"`
}

// PendingShipmentAccessorDetail Specifies details for how to access the pending email return label.
type PendingShipmentAccessorDetail struct {
	// EmailLabelUrl Specifies the URL for the email label.<br>Example: emailLabelUrl
	EmailLabelUrl *string `json:"emailLabelUrl,omitempty"`

	// Password Specifies the accessor password.<br>Example: password
	Password *string `json:"password,omitempty"`

	// Role Specifies the accessor role.<br>Example: role
	Role *string `json:"role,omitempty"`

	// UserId Specifies the accessor User ID.<br>Example: userId
	UserId *string `json:"userId,omitempty"`
}

// PendingShipmentDetail This object is used to specify the Pending Shipment Type for Email label.
type PendingShipmentDetail struct {
	// AttachedDocuments These are the reference document details with the shipment.
	AttachedDocuments *[]UploadDocumentReferenceDetail1 `json:"attachedDocuments,omitempty"`

	// EmailLabelDetail These are specific information about the pending email label.<br>Required when PendingShipmentType is EMAIL.<br>Not applicable for CreateTag.
	EmailLabelDetail EmailLabelDetail `json:"emailLabelDetail"`

	// ExpirationTimeStamp This is the Email Label expiration date. The maximum expiration date for an Email Return Label must be greater of equal to the day of the label request and not greater than 2 years in the future.<br>Example: 2020-01-01
	ExpirationTimeStamp *string `json:"expirationTimeStamp,omitempty"`

	// PendingShipmentType This is Pending Shipment Type. Must include the value 'EMAIL' for email return shipments.<br>Not applicable for other types of shipments.
	PendingShipmentType PendingShipmentDetailPendingShipmentType `json:"pendingShipmentType"`

	// ProcessingOptions Use this object to allow the Email Label shipment originator,  specify if the Email label shipment completer can make modifications to editable shipment data.
	ProcessingOptions *PendingShipmentProcessingOptionsRequested `json:"processingOptions,omitempty"`

	// RecommendedDocumentSpecification These are documents that are recommended to be included with the shipment.
	RecommendedDocumentSpecification *RecommendedDocumentSpecification `json:"recommendedDocumentSpecification,omitempty"`
}

// PendingShipmentDetailPendingShipmentType This is Pending Shipment Type. Must include the value 'EMAIL' for email return shipments.<br>Not applicable for other types of shipments.
type PendingShipmentDetailPendingShipmentType string

// PendingShipmentProcessingOptionsRequested Use this object to allow the Email Label shipment originator,  specify if the Email label shipment completer can make modifications to editable shipment data.
type PendingShipmentProcessingOptionsRequested struct {
	// Options These are processing options.
	Options *[]PendingShipmentProcessingOptionsRequestedOptions `json:"options,omitempty"`
}

// PendingShipmentProcessingOptionsRequestedOptions defines model for PendingShipmentProcessingOptionsRequested.Options.
type PendingShipmentProcessingOptionsRequestedOptions string

// PhoneNumber1 Indicate the phone number. Only numeric values allowed.<br> Note that phoneNumber is mandatory when homedeliveryPremiumType is DATE_CERTAIN or EVENING.
type PhoneNumber1 struct {
	// AreaCode Indicate the area code for the phone number.
	AreaCode *string `json:"areaCode,omitempty"`

	// Extension Indicate the extension for the phone number.
	Extension *string `json:"extension,omitempty"`

	// LocalNumber Indicate the local phone number for contacting in the event of an emergency. Maximum length  is 10.
	LocalNumber *string `json:"localNumber,omitempty"`

	// PersonalIdentificationNumber Indicate the Personal Identification Number associated with the phone number.
	PersonalIdentificationNumber *string `json:"personalIdentificationNumber,omitempty"`
}

// PieceResponse Piece Response information.
type PieceResponse struct {
	// AcceptanceTrackingNumber Indicates the acceptance tracking number.<br>Example: 7949XXXXX5000
	AcceptanceTrackingNumber *string `json:"acceptanceTrackingNumber,omitempty"`

	// AcceptanceType Indicates acceptance type.
	AcceptanceType *string `json:"acceptanceType,omitempty"`

	// AdditionalChargesDiscount These are additional charges or discounts.<br>Example: 621.45
	AdditionalChargesDiscount *float64 `json:"additionalChargesDiscount,omitempty"`

	// BaseRateAmount Specifies the base rate amount.<br>Example: 321.45
	BaseRateAmount *float64 `json:"baseRateAmount,omitempty"`

	// CodcollectionAmount Specifies the Collect on Delivery collection amount.<br>Example: 231.45
	CodcollectionAmount *float64 `json:"codcollectionAmount,omitempty"`

	// CustomerReferences These are additional customer reference data.<br>Note: The groupPackageCount must be specified to retrieve customer references.
	CustomerReferences *[]CustomerReference `json:"customerReferences,omitempty"`

	// DeliveryTimestamp Indicates delivery date with timestamp.<br>Example: 2012-09-23
	DeliveryTimestamp *string `json:"deliveryTimestamp,omitempty"`

	// ListCustomerTotalCharge Indicates total charges applicable to the customer.<br>Example: listCustomerTotalCharge
	ListCustomerTotalCharge *string `json:"listCustomerTotalCharge,omitempty"`

	// MasterTrackingNumber This is a master tracking number of the shipment (must be unique for stand-alone open shipments, or unique within consolidation if consolidation key is provided).<br>Example: 794XXXXX5000
	MasterTrackingNumber *string `json:"masterTrackingNumber,omitempty"`

	// NetChargeAmount Indicates the net charges amount.<br>Example: 21.45
	NetChargeAmount *float64 `json:"netChargeAmount,omitempty"`

	// NetDiscountAmount Specifies the net discount amount.<br>Example: 121.45
	NetDiscountAmount *float64 `json:"netDiscountAmount,omitempty"`

	// NetListRateAmount Indicates the net List rate amount.<br>Example: 1.45
	NetListRateAmount *float64 `json:"netListRateAmount,omitempty"`

	// PackageDocuments These are package documents returned in the response.
	PackageDocuments *[]LabelResponseVO `json:"packageDocuments,omitempty"`

	// PackageSequenceNumber Indicates package sequence number.<br>Example: 215
	PackageSequenceNumber *int32 `json:"packageSequenceNumber,omitempty"`

	// ServiceCategory Indicates the service category.
	ServiceCategory *PieceResponseServiceCategory `json:"serviceCategory,omitempty"`

	// Successful Returns true if the responses are successful otherwise false.
	Successful *bool `json:"successful,omitempty"`

	// TrackingIdType Indicates the type of the tracking identifier.
	TrackingIdType *string `json:"trackingIdType,omitempty"`

	// TrackingNumber This is the tracking number associated with this package. <br>Example: 49XXX0000XXX20032835
	TrackingNumber *string `json:"trackingNumber,omitempty"`

	// TransactionDetails Indicates data received that governs data payload language/translations. The TransactionDetail from the request is echoed back to the caller in the corresponding reply.
	TransactionDetails *[]TransactionDetailVO `json:"transactionDetails,omitempty"`
}

// PieceResponseServiceCategory Indicates the service category.
type PieceResponseServiceCategory string

// PriorityAlertDetail Specifies the Priority Alert Detail.
type PriorityAlertDetail struct {
	// Content Specifies Content for the Priority Alert Detail.
	Content *[]string `json:"content,omitempty"`

	// EnhancementTypes The types of all enhancement for the Priority Alert.<br>Example: PRIORITY_ALERT_PLUS
	EnhancementTypes *[]string `json:"enhancementTypes,omitempty"`
}

// ProductName Product Name information.
type ProductName struct {
	// Encoding The character encoding used to represent this product name. <br>Example: UTF-8
	Encoding *string `json:"encoding,omitempty"`

	// Type The type of name (long, medium, short, etc.) to which this value refers.<br>Example: long
	Type *string `json:"type,omitempty"`

	// Value Specifies the value of the Product.<br>Example: F-2
	Value *string `json:"value,omitempty"`
}

// RateDiscount Specifies discount Rate for Shipment.
type RateDiscount struct {
	// Amount Specifies the amount.<br>Example: 8.9
	Amount *float64 `json:"amount,omitempty"`

	// Description Specifies the description of the discounted rate.<br>Example: description
	Description *string `json:"description,omitempty"`

	// Percent Specifies the percentage of Rate discount.<br>Example: 28.9
	Percent *float64 `json:"percent,omitempty"`

	// RateDiscountType The type of rate discount. <br/> Valid Values are BONUS, COUPON,EARNED,OTHER,VOLUME.<br>Example: COUPON
	RateDiscountType *string `json:"rateDiscountType,omitempty"`
}

// RecipientCustomsId Use this element to provide valid identification details. Used for populating brazil tax id.
type RecipientCustomsId struct {
	// Type This is ID Type.
	Type *RecipientCustomsIdType `json:"type,omitempty"`

	// Value This is the ID number.
	Value *string `json:"value,omitempty"`
}

// RecipientCustomsIdType This is ID Type.
type RecipientCustomsIdType string

// RecipientsParty The descriptive information of the recipient for the shipment and the physical location for the package destination.
type RecipientsParty struct {
	// Address This is detailed information on physical location. May be used as an actual physical address (place to which one could go), or as a container of address parts which should be handled as a unit (such as a city-state-ZIP combination within the US).
	Address PartyAddress `json:"address"`

	// Contact Indicate the contact details for this shipment.
	Contact PartyContact `json:"contact"`

	// DeliveryInstructions Specify the delivery instructions to be added with the shipment. Use with Ground Home Delivery.<br>Example: Delivery Instructions
	DeliveryInstructions *string `json:"deliveryInstructions,omitempty"`

	// Tins This is the tax identification number details.
	Tins *[]TaxpayerIdentification `json:"tins,omitempty"`
}

// RecommendedDocumentSpecification These are documents that are recommended to be included with the shipment.
type RecommendedDocumentSpecification struct {
	// Types This is the recommended document Type.<br><a onclick='loadDocReference("shipmentdocumenttype")'>click here to see shipment document type</a>
	Types []RecommendedDocumentSpecificationTypes `json:"types"`
}

// RecommendedDocumentSpecificationTypes defines model for RecommendedDocumentSpecification.Types.
type RecommendedDocumentSpecificationTypes string

// RegulatoryAdvisoryDetail Indicates the regulatory advisory details.
type RegulatoryAdvisoryDetail struct {
	// Prohibitions It is a regulatory probitions.
	Prohibitions *[]RegulatoryProhibition `json:"prohibitions,omitempty"`
}

// RegulatoryLabelContentDetail defines model for RegulatoryLabelContentDetail.
type RegulatoryLabelContentDetail struct {
	// GenerationOptions Specify the regulatory content preference to be displayed on the label.
	GenerationOptions *RegulatoryLabelContentDetailGenerationOptions `json:"generationOptions,omitempty"`

	// Type Specify the type of regulatory content to be added on the label.
	Type *RegulatoryLabelContentDetailType `json:"type,omitempty"`
}

// RegulatoryLabelContentDetailGenerationOptions Specify the regulatory content preference to be displayed on the label.
type RegulatoryLabelContentDetailGenerationOptions string

// RegulatoryLabelContentDetailType Specify the type of regulatory content to be added on the label.
type RegulatoryLabelContentDetailType string

// RegulatoryProhibition defines model for RegulatoryProhibition.
type RegulatoryProhibition struct {
	// Advisory Specifies the advisory details.
	Advisory *Message `json:"advisory,omitempty"`

	// Categories Indicate the shipment rule type.<br>Example: ["categories"]
	Categories *[]string `json:"categories,omitempty"`

	// CommodityIndex Indicates one based index identifying the associated commodity.<br>Example: 12
	CommodityIndex *int32 `json:"commodityIndex,omitempty"`

	// DerivedHarmonizedCode Indicates the derived harmonized code value<br>Example: 01
	DerivedHarmonizedCode *string `json:"derivedHarmonizedCode,omitempty"`

	// Source Indicates the prohibition source type.<br>Example: source
	Source *string `json:"source,omitempty"`

	// Status Indicates the prohibitory status.<br>Example: status
	Status *string `json:"status,omitempty"`

	// Type Indicates the prohibition type.<br>Example: type
	Type *string `json:"type,omitempty"`

	// Waiver Indicates the regulatory waiver.
	Waiver *RegulatoryWaiver `json:"waiver,omitempty"`
}

// RegulatoryWaiver Indicates the regulatory waiver.
type RegulatoryWaiver struct {
	// Advisories Indicates the advisories list.
	Advisories *[]Message `json:"advisories,omitempty"`

	// Description Indicates the regulatory prohibitions description.<br>Example: description
	Description *string `json:"description,omitempty"`

	// Id Indicates the prohibitory ID.<br>Example: id
	Id *string `json:"id,omitempty"`
}

// RequestedPackageLineItem These are one or more package-attribute descriptions, each of which describes an individual package, a group of identical packages, or (for the total-piece-total-weight case) common characteristics of all packages in the shipment.<ul><li>At least one instance containing the weight for at least one package is required for EXPRESS and GROUND shipments.</li><li>Single piece requests will have one RequestedPackageLineItem.</li><li>Multiple piece requests will have multiple RequestedPackageLineItems.</li><li>Maximum occurrences is 30.</li></ul>
type RequestedPackageLineItem struct {
	// ContentRecord Use this object to specify package content details.
	ContentRecord *[]ContentRecord `json:"contentRecord,omitempty"`

	// CustomerReferences This object lists the customer references provided with the package.
	CustomerReferences *[]CustomerReference1 `json:"customerReferences,omitempty"`

	// DeclaredValue This is the Declared Value of any shipment which represents FedEx maximum liability associated with a shipment. This is including, but not limited to any loss, damage, delay, misdelivery, any failure to provide information, or misdelivery of information related to the Shipment.
	DeclaredValue *Money `json:"declaredValue,omitempty"`

	// Dimensions Indicate the dimensions of the package.<br> Following conditions will apply: <ul><li>Dimensions are optional but when added, then all three dimensions must be indicated.</li><li>Dimensions are required when using a Express freight service.</li></ul>Note: The maximum/minimum dimension values varies based on the services and the packaging types. Refer <a href='https://www.fedex.com/en-us/service-guide.html' target='_blank'>FedEx Service Guide</a> for service details related to DIM Weighting for FedEx Express and oversize conditions for FedEx Express and FedEx Ground.
	Dimensions *Dimensions `json:"dimensions,omitempty"`

	// GroupPackageCount Indicate the grouped package count. These are number of identical package(s) each with one or more commodities. <br> Example: 2
	GroupPackageCount *int32 `json:"groupPackageCount,omitempty"`

	// ItemDescription This the item description for the package.<br>Note: Item description is required for Email Label return shipments and ground Create tag.<br>Example: Item description<br> Maximum limit is 50 characters
	ItemDescription *string `json:"itemDescription,omitempty"`

	// ItemDescriptionForClearance Describe the content of the package for customs clearance purposes. This applies to intra-UAE, intra-Columbia and intra-Brazil shipments.
	ItemDescriptionForClearance *string `json:"itemDescriptionForClearance,omitempty"`

	// PackageSpecialServices These are special services that are available at the package level for some or all service types.
	PackageSpecialServices *PackageSpecialServicesRequested `json:"packageSpecialServices,omitempty"`

	// SequenceNumber Optional. <br>Used only with individual packages as a unique identifier of each requested package. Will be adjusted at the shipment level as pieces are added.
	SequenceNumber *int `json:"sequenceNumber,omitempty"`

	// SubPackagingType Indicate the subPackagingType, if you are using your own packaging for the shipment. Use it for all shipments inbound to Canada (CA) and inbound shipments to the U.S. and Puerto Rico (PR) from Canada and Mexico (MX).subPackagingType is mandatory for shipments to Canada.<br>Example: TUBE, CARTON, CONTAINER. etc.<br>Note: If the value is TUBE, a non-machinable surcharge will be applicable for SmartPost shipments.<br><a onclick='loadDocReference("subpackagetypes")'>click here to see Sub-Packaging Types</a><br>For more information on physical packaging or packaging regulatory requirements, contact your FedEx representative.
	SubPackagingType *string `json:"subPackagingType,omitempty"`

	// VariableHandlingChargeDetail Indicate the details about how to calculate variable handling charges at the shipment level. They can be based on a percentage of the shipping charges or a fixed amount. If indicated, element rateLevelType is required.
	VariableHandlingChargeDetail *VariableHandlingChargeDetail `json:"variableHandlingChargeDetail,omitempty"`

	// Weight These are the package weight details.<br>Note: Weight is not required for One rate shipments
	Weight Weight `json:"weight"`
}

// RequestedShipment The descriptive data of the requested shipment.
type RequestedShipment struct {
	// BlockInsightVisibility Indicate if the shipment be available to be visible/tracked using FedEx InSight<sup>®</sup> tool. If value indicated as true, only the shipper/payer will have visibility of this shipment in the FedEx InSight<sup>®</sup> tool.
	BlockInsightVisibility *bool `json:"blockInsightVisibility,omitempty"`

	// CustomsClearanceDetail These are customs clearance details. Required for International and intra-country Shipments.
	CustomsClearanceDetail *CustomsClearanceDetail `json:"customsClearanceDetail,omitempty"`

	// EmailNotificationDetail This is used to provide eMail notification information..
	EmailNotificationDetail *ShipShipmentEMailNotificationDetail `json:"emailNotificationDetail,omitempty"`

	// ExpressFreightDetail Indicates the advance booking number, shipper load /count and packing list details. This details must be provided by the user during freight shipment.
	ExpressFreightDetail *ExpressFreightDetail `json:"expressFreightDetail,omitempty"`

	// LabelSpecification These are label specification details includes the image type, printer format, and label stock for label. Can also specify specific details such as doc-tab content, regulatory labels, and masking data on the label.
	LabelSpecification LabelSpecification `json:"labelSpecification"`

	// MasterTrackingId Indicates the tracking details of the package.Required for child shipments of an oneLabelAtATime shipments
	MasterTrackingId *MasterTrackingId `json:"masterTrackingId,omitempty"`

	// Origin Indicate shipment origin address information, if it is different from the shipper address.
	Origin *ContactAndAddress1 `json:"origin,omitempty"`

	// PackagingType Specify the packaging used.<br>Note: For Express Freight shipments, the packaging will default to YOUR_PACKAGING irrespective of the user provided package type in the request.<br>Example: FEDEX_PAK<br><a onclick='loadDocReference("packagetypes")'>click here to see Package Types</a>
	PackagingType string `json:"packagingType"`

	// PickupType Indicate the pickup type method by which the shipment to be tendered to FedEx.<br><a onclick='loadDocReference("pickuptypes")'>Click here for more information on Pickup Types.</a>
	PickupType RequestedShipmentPickupType `json:"pickupType"`

	// PreferredCurrency Indicate the currency the caller requests to have used in all returned monetary values. Should be Used in conjunction with the element RateRequestType.<br>Example: USD<br><a onclick='loadDocReference("currencycodes")'>click here to see available Currency codes</a><br>Note: Incorrect currency codes should not be supplied. The system ignores the incorrect currency code.
	PreferredCurrency *string `json:"preferredCurrency,omitempty"`

	// RateRequestType Indicate the type of rates to be returned. The account specific rates are returned by default if the account number is specified in the request.<br>Following are values:<ul><li>LIST - Returns FedEx published list rates in addition to account-specific rates (if applicable).</li><li>INCENTIVE - This is one-time discount for incentivising the customer. For more information, contact your FedEx representative.</li><li>ACCOUNT - Returns account specific rates (Default).</li><li>PREFERRED - Returns rates in the preferred currency specified in the element preferredCurrency.</li><li>RETAIL - Returns customer rate from one of retail FedEx service centers.</li></ul>Examples: ["ACCOUNT", "PREFERRED"]
	RateRequestType *[]RequestedShipmentRateRequestType `json:"rateRequestType,omitempty"`

	// RecipientLocationNumber A unique identifier for a recipient location.
	RecipientLocationNumber *string `json:"recipientLocationNumber,omitempty"`

	// Recipients Indicate the descriptive data for the recipient location to which the shipment is to be received.
	Recipients []RecipientsParty `json:"recipients"`

	// RequestedPackageLineItems These are one or more package-attribute descriptions, each of which describes an individual package, a group of identical packages, or (for the total-piece-total-weight case) common characteristics of all packages in the shipment.<ul><li>At least one instance containing the weight for at least one package is required for EXPRESS and GROUND shipments.</li><li>Single piece requests will have one RequestedPackageLineItem.</li><li>Multiple piece requests will have multiple RequestedPackageLineItems.</li><li>Maximum occurrences is 30.</li></ul>
	RequestedPackageLineItems []RequestedPackageLineItem `json:"requestedPackageLineItems"`

	// ServiceType Indicate the FedEx service type used for this shipment.<br>Example: STANDARD_OVERNIGHT<br><a onclick='loadDocReference("servicetypes")'>click here to see Service Types</a>
	ServiceType string `json:"serviceType"`

	// ShipDatestamp This is the shipment date. Default value is current date in case the date is not provided or a past date is provided.<br>Format [YYYY-MM-DD].<br>Example: 2019-10-14
	ShipDatestamp *string `json:"shipDatestamp,omitempty"`

	// ShipmentSpecialServices Specify the special services requested at the shipment level.<br>If the shipper is requesting a special service which requires additional data (such as the COD amount), the shipment special service type must be present in the specialServiceTypes collection, and the supporting detail must be provided in the appropriate sub-object below.<br>RETURN_SHIPMENT is required for creating return shipments.
	ShipmentSpecialServices *ShipmentSpecialServicesRequested `json:"shipmentSpecialServices,omitempty"`

	// Shipper Indicate the Shipper contact details for this shipment.
	Shipper ShipperParty `json:"shipper"`

	// ShippingChargesPayment Specifies the payment details specifying the method and means of payment to FedEx for providing shipping services.
	ShippingChargesPayment Payment `json:"shippingChargesPayment"`

	// ShippingDocumentSpecification Use this object to provide all data required for additional (non-label) shipping documents to be produced.
	ShippingDocumentSpecification *ShippingDocumentSpecification `json:"shippingDocumentSpecification,omitempty"`

	// SmartPostInfoDetail Use this object to specify the smartpost shipment details. <br>Required for SMARTPOST service. If SmartPostInfoDetail is indicated, the elements below it are also required.
	SmartPostInfoDetail *SmartPostInfoDetail `json:"smartPostInfoDetail,omitempty"`

	// SoldTo Will indicate the party responsible for purchasing the goods shipped from the shipper to the recipient. The sold to party is not necessarily the recipient or the importer of record. The sold to party is relevant when the purchaser, rather than the recipient determines when certain customs regulations apply.
	SoldTo *SoldToParty `json:"soldTo,omitempty"`

	// TotalDeclaredValue It is the sum of all declared values of all packages in a shipment. The amount of totalDeclaredValue must be equal to the sum of all the individual declaredValues in the shipment. The declaredValue and totalDeclaredValue must match in all currencies in one shipment. This value represents FedEx maximum liability associated with a shipment. This is including, but not limited to any loss, damage, delay, misdelivery, any failure to provide information, or misdelivery of information related to the Shipment.<br><i>Note: The totalDeclaredValue should not exceed customsValue.</i>
	TotalDeclaredValue *Money `json:"totalDeclaredValue,omitempty"`

	// TotalPackageCount For an MPS, this is the total number of packages in the shipment.Applicable for parent shipment for one label at a time shipments. <br>Example: 25
	TotalPackageCount *int32 `json:"totalPackageCount,omitempty"`

	// TotalWeight Indicate the shipment total weight in pounds.<br>Example: 10.6<br>Note: <ul><li>This only applies to International shipments and should be used on the first package of a multiple piece shipment.</li><li>This value contains 1 explicit decimal position.</li><li>For one Label at a time shipments, the unit of totalWeight is considered same as the unit of weight provided in requestedPackageLineItem field.</li></ul>
	TotalWeight *float64 `json:"totalWeight,omitempty"`

	// VariableHandlingChargeDetail Indicate the details about how to calculate variable handling charges at the shipment level. They can be based on a percentage of the shipping charges or a fixed amount. If indicated, element rateLevelType is required.
	VariableHandlingChargeDetail *VariableHandlingChargeDetail `json:"variableHandlingChargeDetail,omitempty"`
}

// RequestedShipmentPickupType Indicate the pickup type method by which the shipment to be tendered to FedEx.<br><a onclick='loadDocReference("pickuptypes")'>Click here for more information on Pickup Types.</a>
type RequestedShipmentPickupType string

// RequestedShipmentRateRequestType defines model for RequestedShipment.RateRequestType.
type RequestedShipmentRateRequestType string

// RequestedShipmentVerify This is the detailed shipment request data to be validated before being submitted to FedEx.
type RequestedShipmentVerify struct {
	// BlockInsightVisibility Indicate if the shipment be available to be visible/tracked using FedEx InSight® tool. If value indicated as true, only the shipper/payer will have visibility of this shipment in the said tool.
	BlockInsightVisibility *bool `json:"blockInsightVisibility,omitempty"`

	// CustomsClearanceDetail These are customs clearance details. Required for International and intra-country Shipments.
	CustomsClearanceDetail *CustomsClearanceDetail `json:"customsClearanceDetail,omitempty"`

	// EmailNotificationDetail These are email disposition details. Provides the type and email addresses of e-mail recipients. If returnedDispositionDetail in labelSpecification is set as true then email will be send with label and documents copy.
	EmailNotificationDetail *EMailNotificationDetail `json:"emailNotificationDetail,omitempty"`

	// LabelSpecification These are label specification details includes the image type, printer format, and label stock for label. Can also specify specific details such as doc-tab content, regulatory labels, and masking data on the label.
	LabelSpecification LabelSpecification `json:"labelSpecification"`

	// Origin Indicate the shipment origin address information, if it is different from the shippers address.
	Origin *ContactAndAddressVerify `json:"origin,omitempty"`

	// PackagingType Indicate the type of packaging used for the package.<br>Note: For Express Freight shipments, the packaging will default to value  YOUR_PACKAGING irrespective type provided in the request.<br>Example: FEDEX_ENVELOPE<br><a onclick='loadDocReference("packagetypes")'>click here to see Package Types</a>
	PackagingType string `json:"packagingType"`

	// PickupType Select if the shipment is to be dropped off at Fedex location or to be picked up by FedEx or if it is a scheduled pickup for this shipment.<br><a onclick='loadDocReference("pickuptypes")'>Click here for more information on Pickup Types.</a>
	PickupType RequestedShipmentVerifyPickupType `json:"pickupType"`

	// PreferredCurrency Indicate the currency the caller requests to have used in all returned monetary values. Should be Used in conjunction with the element RateRequestType.<br>Example: USD<br><a onclick='loadDocReference("currencycodes")'>click here to see available Currency codes</a><br>Note: Incorrect currency codes should not be supplied. The system ignores the incorrect currency code.
	PreferredCurrency *string `json:"preferredCurrency,omitempty"`

	// RateRequestType Indicate the type of rates to be returned.<br>Following are values:<ul><li>LIST - Returns published list rates will be returned in addition to account-specific rate (if applicable).</li><li>PREFERRED - It returns rates in currency as specified in the PreferredCurrency element.</li><li>ACCOUNT - Returns account specific rates. Note: The account specific rates are returned by default if the shipper account number is specified in the shipment.</li><li>INCENTIVE - This is one-time discount for incentivizing the customer.</li></ul>Examples: ["ACCOUNT", "PREFERRED"]
	RateRequestType *[]RequestedShipmentVerifyRateRequestType `json:"rateRequestType,omitempty"`

	// Recipients Indicate the shipment recipient details or the physical location details for the package destination.
	Recipients []RecipientsParty `json:"recipients"`

	// RequestedPackageLineItems Use this object to provide the package details.<br>Note: <ul><li>At least one instance containing the weight is required for EXPRESS and GROUND package.</li><li>Only Single piece requests are supported henceonly one line item should be provided.</li><li>Multiple piece shipment validation is not supported.</li></ul>
	RequestedPackageLineItems []RequestedPackageLineItem `json:"requestedPackageLineItems"`

	// ServiceType Indicate the FedEx service Type used for this shipment.<br>Example: STANDARD_OVERNIGHT<br><a onclick='loadDocReference("servicetypes")'>click here to see available FedEx Service Types</a>
	ServiceType string `json:"serviceType"`

	// ShipDatestamp Indicate the shipment date.<br>Format: YYYY-MM-DD<br>Note: Default value is current date in case the date is not provided in the request.<br>Example: 2021-04-06
	ShipDatestamp *string `json:"shipDatestamp,omitempty"`

	// ShipmentSpecialServices Indicate the shipment special service or handling required for this shipment. <br>Note: <ul><li>If the shipper is requesting a special service, the special service type must be indicated in the object specialServiceTypes, and all supporting detail must be provided in the appropriate sub-object below.</li><li>For returns it is required to provide value RETURN_SHIPMENT in the specialServiceTypes.</li></ul>
	ShipmentSpecialServices *RequestedShipmentVerifyShipmentSpecialServices `json:"shipmentSpecialServices,omitempty"`

	// Shipper Indicate shippers details. <br>Note: Shipper address and Origin address should be the same address.
	Shipper ShipperParty `json:"shipper"`

	// ShippingChargesPayment Specifies the payment details specifying the method and means of payment to FedEx for providing shipping services.
	ShippingChargesPayment Payment `json:"shippingChargesPayment"`

	// ShippingDocumentSpecification Use this object to provide all data required for additional (non-label) shipping documents to be produced.
	ShippingDocumentSpecification *ShippingDocumentSpecification `json:"shippingDocumentSpecification,omitempty"`

	// SmartPostInfoDetail Use this object to specify the smartpost shipment details. <br>Required for SMARTPOST service. If SmartPostInfoDetail is indicated, the elements below it are also required.
	SmartPostInfoDetail *SmartPostInfoDetail `json:"smartPostInfoDetail,omitempty"`

	// TotalWeight shipment total weight should be in Kg or in Lbs
	TotalWeight *int32 `json:"totalWeight,omitempty"`

	// VariableHandlingChargeDetail Indicate the details about how to calculate variable handling charges at the shipment level. They can be based on a percentage of the shipping charges or a fixed amount. If indicated, element rateLevelType is required.
	VariableHandlingChargeDetail *VariableHandlingChargeDetail `json:"variableHandlingChargeDetail,omitempty"`
}

// RequestedShipmentVerifyPickupType Select if the shipment is to be dropped off at Fedex location or to be picked up by FedEx or if it is a scheduled pickup for this shipment.<br><a onclick='loadDocReference("pickuptypes")'>Click here for more information on Pickup Types.</a>
type RequestedShipmentVerifyPickupType string

// RequestedShipmentVerifyRateRequestType defines model for RequestedShipmentVerify.RateRequestType.
type RequestedShipmentVerifyRateRequestType string

// RequestedShipmentVerifyShipmentSpecialServices Indicate the shipment special service or handling required for this shipment. <br>Note: <ul><li>If the shipper is requesting a special service, the special service type must be indicated in the object specialServiceTypes, and all supporting detail must be provided in the appropriate sub-object below.</li><li>For returns it is required to provide value RETURN_SHIPMENT in the specialServiceTypes.</li></ul>
type RequestedShipmentVerifyShipmentSpecialServices struct {
	// DeliveryOnInvoiceAcceptanceDetail Indicate the Delivery On Invoice Acceptance detail. Recipient is required for Delivery On Invoice Special service.
	DeliveryOnInvoiceAcceptanceDetail *DeliveryOnInvoiceAcceptanceDetail `json:"deliveryOnInvoiceAcceptanceDetail,omitempty"`

	// EtdDetail Use this object to specify all information on how the electronic Trade document references used with the shipment.
	EtdDetail *ETDDetail `json:"etdDetail,omitempty"`

	// HoldAtLocationDetail Use this object to specify required information for a shipment to be held at destination FedEx location.<br><i>Note: This object HoldAtLocationDetail is Required, when HOLD_AT_LOCATION is chosen in the specialServiceTypes.</i>
	HoldAtLocationDetail *HoldAtLocationDetail `json:"holdAtLocationDetail,omitempty"`

	// HomeDeliveryPremiumDetail These are Special service elements for FedEx Ground Home Delivery shipments. If selected, element homedeliveryPremiumType is mandatory.
	HomeDeliveryPremiumDetail *HomeDeliveryPremiumDetail `json:"homeDeliveryPremiumDetail,omitempty"`

	// InternationalControlledExportDetail Use this object to specify International Controlled Export shipment Details.<br>Note: licenseOrPermitExpirationDate and licenseOrPermitNumber are not required when type is WAREHOUSE_WITHDRAWAL.
	InternationalControlledExportDetail *InternationalControlledExportDetail `json:"internationalControlledExportDetail,omitempty"`

	// InternationalTrafficInArmsRegulationsDetail These are International Traffic In Arms Regulations shipment service details.
	InternationalTrafficInArmsRegulationsDetail *InternationalTrafficInArmsRegulationsDetail `json:"internationalTrafficInArmsRegulationsDetail,omitempty"`

	// PendingShipmentDetail This object is used to specify the Pending Shipment Type for Email label.
	PendingShipmentDetail *PendingShipmentDetail `json:"pendingShipmentDetail,omitempty"`

	// ReturnShipmentDetail Use this object for specifying return shipment details.
	ReturnShipmentDetail *ReturnShipmentDetail `json:"returnShipmentDetail,omitempty"`

	// ShipmentCODDetail This is the shipment level COD detail.
	ShipmentCODDetail *ShipmentCODDetail `json:"shipmentCODDetail,omitempty"`

	// ShipmentDryIceDetail This is the descriptive data required for a FedEx shipment containing dangerous materials. This element is required when SpecialServiceType DRY_ICE is selected.<p><i>Note:<ul><li>Dry Ice is a Package level Special Service for Domestic and International shipments.</li><li>Dry Ice must be declared at both Shipment and Package level for International MPS shipments to print the compliance statement on Airway Bill labels.</li></ul></i></p>
	ShipmentDryIceDetail *ShipmentDryIceDetail1 `json:"shipmentDryIceDetail,omitempty"`

	// SpecialServiceTypes Indicate the Special services requested for this shipment.<br>Example: <ul><li>HOLD_AT_LOCATION</li><li>RETURN_SHIPMENT</li><li>BROKER_SELECT_OPTION</li><li>CALL_BEFORE_DELIVERY</li><li>COD</li><li>CUSTOM_DELIVERY_WINDOW</li></ul><br><a onclick='loadDocReference("shipmentlevelspecialservicetypes")'>click here to see Shipment Special Service Types</a>
	SpecialServiceTypes *[]string `json:"specialServiceTypes,omitempty"`
}

// ResponsiblePartyParty Indicate the payer Information responsible for paying for the shipment. <br>Note: ResponsibleParty accountNumber is required for ACCOUNT based services.
type ResponsiblePartyParty struct {
	// AccountNumber This is FedEx Account number details.
	AccountNumber PartyAccountNumber `json:"accountNumber"`

	// Address This is detailed information on physical location. May be used as an actual physical address (place to which one could go), or as a container of address parts which should be handled as a unit (such as a city-state-ZIP combination within the US).
	Address *PartyAddress `json:"address,omitempty"`

	// Contact Indicate the contact details for this shipment.
	Contact *PartyContact `json:"contact,omitempty"`
}

// RetrieveDateRange Date Range for custom delivery request; only used if type is BETWEEN.
type RetrieveDateRange struct {
	// Begins Indicates the start date.
	Begins *string `json:"begins,omitempty"`

	// Ends Indicates the end date.
	Ends *string `json:"ends,omitempty"`
}

// ReturnAssociationDetail Specifies the details of an outbound shipment in order to associate the return shipment to it.
type ReturnAssociationDetail struct {
	// ShipDatestamp This is the ship date for the outbound shipment associated with a return shipment. The format is YYYY-MM-DD.<br> Example: 2019-10-01
	ShipDatestamp *string `json:"shipDatestamp,omitempty"`

	// TrackingNumber This is the tracking number associated with this package.<br>Example: 49XXX0000XXX20032835
	TrackingNumber *string `json:"trackingNumber,omitempty"`
}

// ReturnEmailDetail These are email details for the return shipment.
type ReturnEmailDetail struct {
	// AllowedSpecialService Indicate the allowed (merchant-authorized) special services which may be selected when the subsequent shipment is created.<br>Only services represented in EmailLabelAllowedSpecialServiceType will be controlled by this list.
	AllowedSpecialService *[]ReturnEmailDetailAllowedSpecialService `json:"allowedSpecialService,omitempty"`

	// MerchantPhoneNumber This is the merchant phone number and required for Email Return Labels.<br>Example: 19012635656
	MerchantPhoneNumber string `json:"merchantPhoneNumber"`
}

// ReturnEmailDetailAllowedSpecialService defines model for ReturnEmailDetail.AllowedSpecialService.
type ReturnEmailDetailAllowedSpecialService string

// ReturnInstructionsDetail These are return instruction details which will be returned in the transaction to be printed on Return Label.
type ReturnInstructionsDetail struct {
	// CustomText Specify additional information (text) to be inserted into the return document.<br>Example: This is additional text printed on Return Label
	CustomText *string `json:"customText,omitempty"`

	// DocumentFormat These are characteristics of a shipping document to be produced.
	DocumentFormat *ReturnShippingDocumentFormat `json:"documentFormat,omitempty"`
}

// ReturnMerchandiseAuthorization This is a Return Merchant Authorization (RMA) for the return shipment.<br> Reason for the requirement is mandatory.
type ReturnMerchandiseAuthorization struct {
	// Reason Specify the reason for the return.<br> Note: There is no validation for reason. Recommended length is 60 alpha-numeric characters<br>Example: Wrong color or size.
	Reason *string `json:"reason,omitempty"`
}

// ReturnShipmentDetail Use this object for specifying return shipment details.
type ReturnShipmentDetail struct {
	// ReturnAssociationDetail Specifies the details of an outbound shipment in order to associate the return shipment to it.
	ReturnAssociationDetail *ReturnAssociationDetail `json:"returnAssociationDetail,omitempty"`

	// ReturnEmailDetail These are email details for the return shipment.
	ReturnEmailDetail *ReturnEmailDetail `json:"returnEmailDetail,omitempty"`

	// ReturnType This is the return Type. Required to be set to PRINT_RETURN_LABEL for printed return label shipments. For email return label shipments returnType must be set to PENDING and pendingShipmentDetail must be set to EMAIL.
	ReturnType ReturnShipmentDetailReturnType `json:"returnType"`

	// Rma This is a Return Merchant Authorization (RMA) for the return shipment.<br> Reason for the requirement is mandatory.
	Rma *ReturnMerchandiseAuthorization `json:"rma,omitempty"`
}

// ReturnShipmentDetailReturnType This is the return Type. Required to be set to PRINT_RETURN_LABEL for printed return label shipments. For email return label shipments returnType must be set to PENDING and pendingShipmentDetail must be set to EMAIL.
type ReturnShipmentDetailReturnType string

// ReturnShippingDocumentFormat These are characteristics of a shipping document to be produced.
type ReturnShippingDocumentFormat struct {
	// Dispositions Details on creating, organizing, and returning the document.
	//
	Dispositions *[]ShippingDocumentDispositionDetail `json:"dispositions,omitempty"`

	// DocType Specify the image format used for shipping document.<br><a onclick='loadDocReference("labelstocktypes")'>click here to see label format types</a>
	DocType *ReturnShippingDocumentFormatDocType `json:"docType,omitempty"`

	// Locale These are locale details.<br>example: 'en_US'<br><a onclick='loadDocReference("locales")'>click here to see Locales</a><br>Note: If the locale is left blank or an invalid locale is entered, an error message is returned in response.
	Locale *string `json:"locale,omitempty"`

	// OptionsRequested Indicate the requested options for document format.
	OptionsRequested *DocumentFormatOptionsRequested `json:"optionsRequested,omitempty"`

	// ProvideInstructions Use this element to indicate whether or not to provide the instructions.
	ProvideInstructions *bool `json:"provideInstructions,omitempty"`

	// StockType Specify the label stock type.<br><a onclick='loadDocReference("labelstocktypes")'>click here to see label format types</a>
	StockType *ReturnShippingDocumentFormatStockType `json:"stockType,omitempty"`
}

// ReturnShippingDocumentFormatDocType Specify the image format used for shipping document.<br><a onclick='loadDocReference("labelstocktypes")'>click here to see label format types</a>
type ReturnShippingDocumentFormatDocType string

// ReturnShippingDocumentFormatStockType Specify the label stock type.<br><a onclick='loadDocReference("labelstocktypes")'>click here to see label format types</a>
type ReturnShippingDocumentFormatStockType string

// SHPCResponseVO Wrapper class for CancelTagOuputVO. It holds transactionId and output.
type SHPCResponseVO struct {
	// CustomerTransactionId This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
	CustomerTransactionId *string `json:"customerTransactionId,omitempty"`

	// Output The output details when a tag is cancelled.
	Output *BaseProcessOutputVO `json:"output,omitempty"`

	// TransactionId The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
	TransactionId *string `json:"transactionId,omitempty"`
}

// SHPCResponseVOCancelShipment This is a wrapper class for outputVO
type SHPCResponseVOCancelShipment struct {
	// CustomerTransactionId This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
	CustomerTransactionId *string `json:"customerTransactionId,omitempty"`

	// Output The response elements received when a shipment is cancelled.
	Output *BaseProcessOutputVOCancelShipment `json:"output,omitempty"`

	// TransactionId The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
	TransactionId *string `json:"transactionId,omitempty"`
}

// SHPCResponseVOCreateTag Wrapper class for ShipShipmentOutputVO. It holds transactionId and output.
type SHPCResponseVOCreateTag struct {
	// CustomerTransactionId This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
	CustomerTransactionId *string `json:"customerTransactionId,omitempty"`

	// Output Specifies the output details when a tag is created.
	Output *BaseProcessOutputVOCreateTag `json:"output,omitempty"`

	// TransactionId The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
	TransactionId *string `json:"transactionId,omitempty"`
}

// SHPCResponseVOGetOpenShipmentResults Wrapper class for GetOpenshipmentResultsOutputVo. It holds transactionId and output.
type SHPCResponseVOGetOpenShipmentResults struct {
	// CustomerTransactionId This is a unique identifier to your transaction and helps you match the request to the reply. <br> Example: AnyCo_order123456789
	CustomerTransactionId *string `json:"customerTransactionId,omitempty"`
	Output                *struct {
		// Alerts object indicate the alert details received in the output.
		Alerts *[]Alert `json:"alerts,omitempty"`

		// TransactionShipments These are shipping transaction details, such as master tracking number, service type, and ship date and time.
		TransactionShipments *[]TransactionShipmentOutputVO `json:"transactionShipments,omitempty"`
	} `json:"output,omitempty"`

	// TransactionId The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624xxxxx-b709-470c-8c39-4b55112xxxxx
	TransactionId *string `json:"transactionId,omitempty"`
}

// SHPCResponseVOShipShipment Wrapper class for ShipShipmentOutputVO. It holds transactionId and output.
type SHPCResponseVOShipShipment struct {
	// CustomerTransactionId This element has a unique identifier added in your request, helps you match the request to the reply.<br>Example: XXXX_XXX123XXXXX
	CustomerTransactionId *string `json:"customerTransactionId,omitempty"`

	// Output This is the response received when a shipment is requested.
	Output *BaseProcessOutputVOShipShipment `json:"output,omitempty"`

	// TransactionId The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
	TransactionId *string `json:"transactionId,omitempty"`
}

// SHPCResponseVOValidate Wrapper class for VerifyShipmentOutputVO. It holds transactionId and output.
type SHPCResponseVOValidate struct {
	// CustomerTransactionId This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789
	CustomerTransactionId *string `json:"customerTransactionId,omitempty"`

	// Output The response elements received when a shipment is created.
	Output *BaseProcessOutputVOValidate `json:"output,omitempty"`

	// TransactionId The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492
	TransactionId *string `json:"transactionId,omitempty"`
}

// ServiceDescription Descriptions for a service.
type ServiceDescription struct {
	// AstraDescription Specifies astra Description.<br>Example: 2 DAY FRT
	AstraDescription *string `json:"astraDescription,omitempty"`

	// Code Specifies code of the Service.<br>example: 80
	Code *string `json:"code,omitempty"`

	// Description Specifies the description.
	Description *string `json:"description,omitempty"`

	// Names Branded, translated, and/or localized names for this service.
	Names *[]ProductName `json:"names,omitempty"`

	// OperatingOrgCodes FOR FEDEX INTERNAL USE ONLY. The operating org code in a service.<br>Example: ["FXE", "FXE"]
	OperatingOrgCodes *[]string `json:"operatingOrgCodes,omitempty"`

	// ServiceCategory FOR FEDEX INTERNAL USE ONLY. This is tied to the Product EFS interface definition which will currently contain the values of parcel.<br>Example: EXPRESS_PARCEL
	ServiceCategory *string `json:"serviceCategory,omitempty"`

	// ServiceId FOR FEDEX INTERNAL USE ONLY, Designates the service ID.<br>Example: EP1000000027
	ServiceId *string `json:"serviceId,omitempty"`

	// ServiceType Indicate the FedEx serviceType used for this shipment. The results will be filtered by the serviceType value indicated.<br>Example: STANDARD_OVERNIGHT<br><a onclick='loadDocReference("servicetypes")'>click here to see Service Types</a>
	ServiceType *string `json:"serviceType,omitempty"`
}

// ShipEmailDispositionDetail These are email disposition details. Provides the type and email addresses of e-mail recipients. If returnedDispositionDetail in labelSpecification is set as true then email will be send with label and documents copy.
type ShipEmailDispositionDetail struct {
	// EmailAddress This is email Address.<br>Example: xxxx@xxx.com
	EmailAddress *string `json:"emailAddress,omitempty"`

	// RecipientType Specify the recipient Type.<br>Example: SHIPPER/BROKER
	RecipientType *string `json:"recipientType,omitempty"`

	// Type Specify the email status.<br>Example: EMAILED
	Type *string `json:"type,omitempty"`
}

// ShipShipmentEMailNotificationDetail This is used to provide eMail notification information..
type ShipShipmentEMailNotificationDetail struct {
	// AggregationType This is the shipment Notification Aggregation Type.
	AggregationType *ShipShipmentEMailNotificationDetailAggregationType `json:"aggregationType,omitempty"`

	// EmailNotificationRecipients These are email notification recipient details.
	EmailNotificationRecipients *[]ShipShipmentEmailNotificationRecipient `json:"emailNotificationRecipients,omitempty"`

	// PersonalMessage This is your personal message for the email.<br>Note: The maximum personal message character limit depends on the element notificationFormatType values:<ul><li>If notificationFormatType is TEXT, then only 120 characters printed on the email</li><li>If notificationFormatType is HTML, then 500 characters printed on the email</li></ul><br>Example: This is concerning the order 123456 of 26 July 2021 - art no 34324-23 Teddy Bear, brown
	PersonalMessage *string `json:"personalMessage,omitempty"`
}

// ShipShipmentEMailNotificationDetailAggregationType This is the shipment Notification Aggregation Type.
type ShipShipmentEMailNotificationDetailAggregationType string

// ShipShipmentEmailNotificationRecipient These are recipient details for receiving email notification.
type ShipShipmentEmailNotificationRecipient struct {
	// EmailAddress Specify the recipient email address.<br>Example: xyz@aol.com
	EmailAddress string `json:"emailAddress"`

	// EmailNotificationRecipientType Specify the recipient type for email notification.
	EmailNotificationRecipientType ShipShipmentEmailNotificationRecipientEmailNotificationRecipientType `json:"emailNotificationRecipientType"`

	// Locale These are the locale details for email.<br>Example: en_US, fr_CA, es_MX,.etc.<br><a onclick='loadDocReference("locales")'>click here to see Locales</a><br>Note: If the locale is left blank or an invalid locale is entered, an error message is returned in response.
	Locale *string `json:"locale,omitempty"`

	// Name Specify the recipient name.<br>Example: Joe Smith
	Name *string `json:"name,omitempty"`

	// NotificationEventType These are to specify the notification event types.<br> Example: [ON_PICKUP_DRIVER_ARRIVED, ON_SHIPMENT]<br><a onclick='loadDocReference("notificationeventtypes")'>Click here for more information on Notification Event Types.</a>
	NotificationEventType *[]ShipShipmentEmailNotificationRecipientNotificationEventType `json:"notificationEventType,omitempty"`

	// NotificationFormatType This is the format for the email notification. Either HTML or plain text can be provided.<br>Example: TEXT
	NotificationFormatType *ShipShipmentEmailNotificationRecipientNotificationFormatType `json:"notificationFormatType,omitempty"`

	// NotificationType Indicate the type of notification that will be sent as an email<br>Example: EMAIL
	NotificationType *ShipShipmentEmailNotificationRecipientNotificationType `json:"notificationType,omitempty"`
}

// ShipShipmentEmailNotificationRecipientEmailNotificationRecipientType Specify the recipient type for email notification.
type ShipShipmentEmailNotificationRecipientEmailNotificationRecipientType string

// ShipShipmentEmailNotificationRecipientNotificationEventType defines model for ShipShipmentEmailNotificationRecipient.NotificationEventType.
type ShipShipmentEmailNotificationRecipientNotificationEventType string

// ShipShipmentEmailNotificationRecipientNotificationFormatType This is the format for the email notification. Either HTML or plain text can be provided.<br>Example: TEXT
type ShipShipmentEmailNotificationRecipientNotificationFormatType string

// ShipShipmentEmailNotificationRecipientNotificationType Indicate the type of notification that will be sent as an email<br>Example: EMAIL
type ShipShipmentEmailNotificationRecipientNotificationType string

// ShipShipmentOutputVO This is the response received when a shipment is requested.
type ShipShipmentOutputVO struct {
	// Alerts The alerts received when processing a shipment request.
	Alerts *[]Alert `json:"alerts,omitempty"`

	// JobId Unique identifier for a Job. Example: abc123456
	JobId *string `json:"jobId,omitempty"`

	// TransactionShipments These are shipping transaction details, such as master tracking number, service type, and ship date and time.
	TransactionShipments *[]TransactionShipmentOutputVO `json:"transactionShipments,omitempty"`
}

// ShipmentAccountNumber The account number of the recipient.
type ShipmentAccountNumber = PartyAccountNumber2

// ShipmentAdvisoryDetails These are shipment advisory details.
type ShipmentAdvisoryDetails struct {
	// RegulatoryAdvisory Indicates the regulatory advisory details.
	RegulatoryAdvisory *RegulatoryAdvisoryDetail `json:"regulatoryAdvisory,omitempty"`
}

// ShipmentCODDetail This is the shipment level COD detail.
type ShipmentCODDetail struct {
	// AddTransportationChargesDetail Use this object to specify C.O.D. transportation charges.
	AddTransportationChargesDetail *CODTransportationChargesDetail `json:"addTransportationChargesDetail,omitempty"`

	// CodCollectionAmount Indicate the COD collection amount.
	CodCollectionAmount *Money `json:"codCollectionAmount,omitempty"`

	// CodCollectionType Identifies the type of funds FedEx should collect upon shipment delivery
	CodCollectionType ShipmentCODDetailCodCollectionType `json:"codCollectionType"`

	// CodRecipient Descriptive data of the Cash On Delivery along with their details of the physical location.
	CodRecipient *Party1 `json:"codRecipient,omitempty"`

	// FinancialInstitutionContactAndAddress Specifies the contact and address details of a location.
	FinancialInstitutionContactAndAddress *ContactAndAddress `json:"financialInstitutionContactAndAddress,omitempty"`

	// RemitToName Specify the name of the person or company receiving the secured/unsecured funds payment.
	RemitToName *string `json:"remitToName,omitempty"`

	// ReturnReferenceIndicatorType Indicate return reference type information to include on the COD return shipping label.
	ReturnReferenceIndicatorType *ShipmentCODDetailReturnReferenceIndicatorType `json:"returnReferenceIndicatorType,omitempty"`

	// ShipmentCodAmount Indicate the COD amount for this shipment.
	ShipmentCodAmount *Money `json:"shipmentCodAmount,omitempty"`
}

// ShipmentCODDetailCodCollectionType Identifies the type of funds FedEx should collect upon shipment delivery
type ShipmentCODDetailCodCollectionType string

// ShipmentCODDetailReturnReferenceIndicatorType Indicate return reference type information to include on the COD return shipping label.
type ShipmentCODDetailReturnReferenceIndicatorType string

// ShipmentDryIceDetail Specifies the shipment level totals of dry ice data across all packages.
type ShipmentDryIceDetail struct {
	// PackageCount Specifies the package Count for the shipment<br>Example: 10
	PackageCount int32 `json:"packageCount"`

	// ProcessingOptions Specify that dry ice information is only applicable at the shipment level. Package level dry ice information would not apply.
	ProcessingOptions *ShipmentDryIceProcessingOptionsRequested `json:"processingOptions,omitempty"`

	// TotalWeight Specify total dry ice weight for the shipment.
	TotalWeight Weight `json:"totalWeight"`
}

// ShipmentDryIceDetail1 This is the descriptive data required for a FedEx shipment containing dangerous materials. This element is required when SpecialServiceType DRY_ICE is selected.<p><i>Note:<ul><li>Dry Ice is a Package level Special Service for Domestic and International shipments.</li><li>Dry Ice must be declared at both Shipment and Package level for International MPS shipments to print the compliance statement on Airway Bill labels.</li></ul></i></p>
type ShipmentDryIceDetail1 struct {
	// PackageCount Indicates the total number of packages in the shipment that contain dry ice.<br>Example: 12
	PackageCount *int32 `json:"packageCount,omitempty"`

	// TotalWeight These are the package weight details.
	TotalWeight *Weight1 `json:"totalWeight,omitempty"`
}

// ShipmentDryIceProcessingOptionsRequested Specify that dry ice information is only applicable at the shipment level. Package level dry ice information would not apply.
type ShipmentDryIceProcessingOptionsRequested struct {
	// Options Specifies the options.<br>Example: ["options"]
	Options *[]string `json:"options,omitempty"`
}

// ShipmentLegRateDetail This is a placeholder for single leg of a shipment rates details, as calculated per a specific rate type.
type ShipmentLegRateDetail struct {
	// Currency This is the currency code for the amount.<br>Example: USD<br><a onclick='loadDocReference("currencycodes")'>click here to see Currency codes</a>
	Currency *string `json:"currency,omitempty"`

	// CurrencyExchangeRate Specifies currency exchange rate.
	CurrencyExchangeRate *CurrencyExchangeRate `json:"currencyExchangeRate,omitempty"`

	// DimDivisor The value used to calculate the weight based on the dimensions.<br>Example: 6
	DimDivisor *int32 `json:"dimDivisor,omitempty"`

	// DimDivisorType Identifies the type of dim divisor that was applied.<br>Example: dimDivisorType
	DimDivisorType   *string         `json:"dimDivisorType,omitempty"`
	FreightDiscounts *[]RateDiscount `json:"freightDiscounts,omitempty"`

	// FuelSurchargePercent Specifies a fuel surcharge percentage.<br>Example: 6.0
	FuelSurchargePercent *float64 `json:"fuelSurchargePercent,omitempty"`

	// LegDestinationLocationId Specifies the location id the destination of shipment leg.<br>Example: HKAA
	LegDestinationLocationId *string `json:"legDestinationLocationId,omitempty"`

	// MinimumChargeType Specifies minimum charge type.
	MinimumChargeType *string `json:"minimumChargeType,omitempty"`

	// PricingCode Specifies the Pricing Code.<br>Example: pricingCode
	PricingCode *string `json:"pricingCode,omitempty"`

	// RateScale Indicates the rate scale used.<br>Example: 6702
	RateScale *string `json:"rateScale,omitempty"`

	// RateType Type used for this specific set of rate data.<br>Example: PAYOR_RETAIL_PACKAGE
	RateType *string `json:"rateType,omitempty"`

	// RateZone Indicates the rate zone used (based on origin and destination).<br>Example: rateZone
	RateZone *string `json:"rateZone,omitempty"`

	// RatedWeightMethod Indicates which weight was used.<br>Example: ratedWeightMethod
	RatedWeightMethod *string `json:"ratedWeightMethod,omitempty"`

	// Surcharges All surcharges that apply to this shipment.<br><a onclick='loadDocReference("surcharges")'>click here to see surcharges</a>
	Surcharges *[]Surcharge `json:"surcharges,omitempty"`

	// Taxes Specifies the taxes.
	Taxes *[]Tax `json:"taxes,omitempty"`

	// TotalBaseCharge The total freight charge that was calculated before surcharges, discounts and taxes.<br>Example: 6.0
	TotalBaseCharge *float64 `json:"totalBaseCharge,omitempty"`

	// TotalBillingWeight The weight used to calculate these rates.
	TotalBillingWeight *Weight `json:"totalBillingWeight,omitempty"`

	// TotalDimWeight Sum of dimensional weights for all packages.
	TotalDimWeight *Weight `json:"totalDimWeight,omitempty"`

	// TotalDutiesAndTaxes Total of shipments duties and taxes; only provided if estimated duties and taxes were calculated for this shipment.<br>Example: 17.78
	TotalDutiesAndTaxes *float64 `json:"totalDutiesAndTaxes,omitempty"`

	// TotalFreightDiscounts The sum of all discounts.<br>Example: 9.0
	TotalFreightDiscounts *float64 `json:"totalFreightDiscounts,omitempty"`

	// TotalNetCharge The net charge after applying all discounts and surcharges.<br>Example: 253
	TotalNetCharge *float64 `json:"totalNetCharge,omitempty"`

	// TotalNetChargeWithDutiesAndTaxes Sum of total net charge, total duties and taxes; only provided if estimated duties and taxes were calculated for this shipment and duties, taxes and transportation charges are all paid by the same sender account.<br>Example: 25.67
	TotalNetChargeWithDutiesAndTaxes *float64 `json:"totalNetChargeWithDutiesAndTaxes,omitempty"`

	// TotalNetFedExCharge This is the sum of shipment's total surcharges (not including total taxes).<br>Example: 3.2
	TotalNetFedExCharge *float64 `json:"totalNetFedExCharge,omitempty"`

	// TotalNetFreight The freight charge minus discounts.<br>Example: 6.0
	TotalNetFreight *float64 `json:"totalNetFreight,omitempty"`

	// TotalRebates Specifies the total rebate.<br>Example: 2.0
	TotalRebates *float64 `json:"totalRebates,omitempty"`

	// TotalSurcharges The total of all surcharges.<br>Example: 5.0
	TotalSurcharges *float64 `json:"totalSurcharges,omitempty"`

	// TotalTaxes Total of the transportation-based taxes.<br>Example: 12.6
	TotalTaxes *float64 `json:"totalTaxes,omitempty"`
}

// ShipmentOperationalDetail Indicates the shipment level operational information.
type ShipmentOperationalDetail struct {
	// AirportId Indicates the airport identifier.<br>Example: DFW
	AirportId *string `json:"airportId,omitempty"`

	// AstraDescription Specifies astra description.<br>Example: SMART POST
	AstraDescription *string `json:"astraDescription,omitempty"`

	// AstraPlannedServiceLevel Text describing planned delivery.<br>Example: TUE - 15 OCT 10:30A
	AstraPlannedServiceLevel *string `json:"astraPlannedServiceLevel,omitempty"`

	// CommitDate This is committed date of delivery.<br>Example: 2019-10-15
	CommitDate *string `json:"commitDate,omitempty"`

	// CommitDay Committed day of week of delivery.<br>Example: TUE
	CommitDay *string `json:"commitDay,omitempty"`

	// CountryCode Indicate the two-letter country code.<br>Example: US<br><a onclick='loadDocReference("countrycodes")'>click here to see Country codes</a>
	CountryCode *string `json:"countryCode,omitempty"`

	// CustomTransitTime Transit time based on customer eligibility.<br>Example: ONE_DAY
	CustomTransitTime *string `json:"customTransitTime,omitempty"`

	// DeliveryDate Specifies delivery date for the shipment. The format is [YYYY-MM-DD]<br>Example: 2001-04-05
	DeliveryDate *string `json:"deliveryDate,omitempty"`

	// DeliveryDay Specifies expected/estimated day of week of the delivery.<br>Example: TUE
	DeliveryDay *string `json:"deliveryDay,omitempty"`

	// DeliveryEligibilities FedEx Ground delivery features for which this shipment may be eligible.<br>Example: ["deliveryEligibilities"]
	DeliveryEligibilities *[]string `json:"deliveryEligibilities,omitempty"`

	// DestinationLocationId Specifies the FedEx Destination Location Identifier.<br>Example: DALA
	DestinationLocationId *string `json:"destinationLocationId,omitempty"`

	// DestinationLocationNumber Indicates destination location number.<br>Example: 876
	DestinationLocationNumber *int32 `json:"destinationLocationNumber,omitempty"`

	// DestinationLocationStateOrProvinceCode This is the state or province code of the shipment destination location, and is not necessarily the same as the postal state.<br>Example: GA<br><a onclick='loadDocReference("canadaprovincecodes")'>click here to see State or Province Code</a>
	DestinationLocationStateOrProvinceCode *string `json:"destinationLocationStateOrProvinceCode,omitempty"`

	// DestinationServiceArea Specifies destination service area.<br>Example: A1
	DestinationServiceArea *string `json:"destinationServiceArea,omitempty"`

	// IneligibleForMoneyBackGuarantee Indicates that this shipment is not eligible for money back guarantee.
	IneligibleForMoneyBackGuarantee *bool `json:"ineligibleForMoneyBackGuarantee,omitempty"`

	// MaximumTransitTime Maximum expected transit time.<br>Example: SEVEN_DAYS
	MaximumTransitTime *string `json:"maximumTransitTime,omitempty"`

	// OriginLocationId This is the origin Location identifier.<br>Example: 678
	OriginLocationId *string `json:"originLocationId,omitempty"`

	// OriginLocationNumber Specifies origin location number.<br>Example: 243
	OriginLocationNumber *int32 `json:"originLocationNumber,omitempty"`

	// OriginServiceArea Indicates the origin service area.<br>Example: A1
	OriginServiceArea *string `json:"originServiceArea,omitempty"`

	// PackagingCode Indicates packaging code.<br>Example: 03
	PackagingCode *string `json:"packagingCode,omitempty"`

	// PostalCode Specifies the postal code.<br>Example: 38010<br><a onclick='loadDocReference("postalawarecountries")'>click here to see Postal aware countries</a>
	PostalCode *string `json:"postalCode,omitempty"`

	// PublishedDeliveryTime This is delivery time, as published in Service Guide.<br>Example: 10:30A
	PublishedDeliveryTime *string `json:"publishedDeliveryTime,omitempty"`

	// Scac Indicates standard carrier alpha code.
	Scac *string `json:"scac,omitempty"`

	// ServiceCode Indicates the service code.<br>Example: 010
	ServiceCode *string `json:"serviceCode,omitempty"`

	// StateOrProvinceCode This is a placeholder for State or Province code.Only 2 characters are accepted for US and Canada.<br>Example: CA<br><a onclick='loadDocReference("canadaprovincecodes")'>click here to see State or Province Code</a>
	StateOrProvinceCode *string `json:"stateOrProvinceCode,omitempty"`

	// TransitTime Standard transit time per origin, destination, and service.<br>Example: TWO_DAYS
	TransitTime *string `json:"transitTime,omitempty"`

	// UrsaPrefixCode This is ursa prefix code.<br>Example: XH
	UrsaPrefixCode *string `json:"ursaPrefixCode,omitempty"`

	// UrsaSuffixCode This is ursa suffix code.<br>Example: Ga
	UrsaSuffixCode *string `json:"ursaSuffixCode,omitempty"`
}

// ShipmentRateDetail This is a placeholder for shipment total/summary rates details, as calculated per a specific rate type. The totals may differ from the sum of corresponding package data for Multiweight or Express MPS.
type ShipmentRateDetail struct {
	// Currency Indicates the currency code.<br><a onclick='loadDocReference("currencycodes")'>click here to see Currency Codes</a>
	Currency *string `json:"currency,omitempty"`

	// CurrencyExchangeRate Specifies the currency exchange performed on financial amounts on this rate.
	CurrencyExchangeRate *CurrencyExchangeRate `json:"currencyExchangeRate,omitempty"`

	// DimDivisor The value used to calculate the weight based on the dimensions.<br>Example: 0
	DimDivisor *int32 `json:"dimDivisor,omitempty"`

	// FreightDiscounts Indicates the freight discounts.
	FreightDiscounts *[]RateDiscount `json:"freightDiscounts,omitempty"`

	// FuelSurchargePercent Specifies a fuel surcharge percentage.<br>Example: 4.56
	FuelSurchargePercent *float64 `json:"fuelSurchargePercent,omitempty"`

	// PricingCode Specifies pricing Code.<br>Example: PACKAGE
	PricingCode *string `json:"pricingCode,omitempty"`

	// RateScale Indicates the rate scale used.<br>Example: 00000
	RateScale *string `json:"rateScale,omitempty"`

	// RateType The Type used for this specific set of rate data.<br>Example: RATED_ACCOUNT_SHIPMENT
	RateType *string `json:"rateType,omitempty"`

	// RateZone Indicates the rate zone used (based on origin and destination).<br>Example: US001O
	RateZone *string `json:"rateZone,omitempty"`

	// RatedWeightMethod Indicates which weight was used.<br>Example: ACTUAL
	RatedWeightMethod *string `json:"ratedWeightMethod,omitempty"`

	// ShipmentLegRateDetails This is data for a single leg of a shipment's total/summary rates, as calculated per a specific rate type.
	ShipmentLegRateDetails *[]ShipmentLegRateDetail `json:"shipmentLegRateDetails,omitempty"`

	// Surcharges All surcharges that apply to this shipment.<br><a onclick='loadDocReference("surcharges")'>click here to see Surcharges</a>
	Surcharges *[]Surcharge `json:"surcharges,omitempty"`

	// Taxes All transportation-based taxes applicable to this shipment.
	Taxes *[]Tax `json:"taxes,omitempty"`

	// TotalAncillaryFeesAndTaxes Identifies the total amount of the shipment-level fees and taxes that are not based on transportation charges or commodity-level estimated duties and taxes.<br>Example: 5.67
	TotalAncillaryFeesAndTaxes *float64 `json:"totalAncillaryFeesAndTaxes,omitempty"`

	// TotalBaseCharge The total Shipment charge that was calculated before surcharges, discounts and taxes.<br>Example: 234.56
	TotalBaseCharge *float64 `json:"totalBaseCharge,omitempty"`

	// TotalBillingWeight The weight used to calculate these rates.
	TotalBillingWeight *Weight `json:"totalBillingWeight,omitempty"`

	// TotalDutiesAndTaxes Total of all values under this shipment's duties and taxes; only provided if estimated duties and taxes were calculated for this shipment.<br>Example: 6.78
	TotalDutiesAndTaxes *float64 `json:"totalDutiesAndTaxes,omitempty"`

	// TotalDutiesTaxesAndFees The total of the total duties & taxes and the total ancillary fees & taxes.<br>Example: 24.56
	TotalDutiesTaxesAndFees *float64 `json:"totalDutiesTaxesAndFees,omitempty"`

	// TotalFreightDiscounts The total discounts used in the rate calculation.<br>Example: 1.56
	TotalFreightDiscounts *float64 `json:"totalFreightDiscounts,omitempty"`

	// TotalNetCharge The net charge after applying all discounts and surcharges.<br>Example: 3.78
	TotalNetCharge *float64 `json:"totalNetCharge,omitempty"`

	// TotalNetChargeWithDutiesAndTaxes This is the sum of shipment's total net charges and total duties and taxes; only provided if estimated duties and taxes were calculated for this shipment AND duties, taxes and transportation charges are all paid by the same sender account.<br>Example: 222.56
	TotalNetChargeWithDutiesAndTaxes *float64 `json:"totalNetChargeWithDutiesAndTaxes,omitempty"`

	// TotalNetFedExCharge This is the sum of shipment's total net freight, total surchages (not including totalTaxes).<br>Example: 88.56
	TotalNetFedExCharge *float64 `json:"totalNetFedExCharge,omitempty"`

	// TotalNetFreight The freight charge minus discounts.<br>Example: 9.56
	TotalNetFreight *float64 `json:"totalNetFreight,omitempty"`

	// TotalRebates The total sum of all rebates applied to this shipment.<br>Example: 1.98
	TotalRebates *float64 `json:"totalRebates,omitempty"`

	// TotalSurcharges The total amount of all surcharges applied to this shipment.<br>Example: 9.88
	TotalSurcharges *float64 `json:"totalSurcharges,omitempty"`

	// TotalTaxes Total of the transportation-based taxes.<br>Example: 3.45
	TotalTaxes *float64 `json:"totalTaxes,omitempty"`
}

// ShipmentRating All shipment-level rating data for this shipment, which may include data for multiple rate types.
type ShipmentRating struct {
	// ActualRateType This rate type identifies which entry in the following array is considered as presenting the "actual" rates for the shipment.<br>Example: PAYOR_LIST_SHIPMENT
	ActualRateType *string `json:"actualRateType,omitempty"`

	// ShipmentRateDetails Each element of this field provides shipment-level rate totals for a specific rate type.
	ShipmentRateDetails *[]ShipmentRateDetail `json:"shipmentRateDetails,omitempty"`
}

// ShipmentSpecialServicesRequested Specify the special services requested at the shipment level.<br>If the shipper is requesting a special service which requires additional data (such as the COD amount), the shipment special service type must be present in the specialServiceTypes collection, and the supporting detail must be provided in the appropriate sub-object below.<br>RETURN_SHIPMENT is required for creating return shipments.
type ShipmentSpecialServicesRequested struct {
	// DeliveryOnInvoiceAcceptanceDetail Indicate the Delivery On Invoice Acceptance detail. Recipient is required for Delivery On Invoice Special service.
	DeliveryOnInvoiceAcceptanceDetail *DeliveryOnInvoiceAcceptanceDetail `json:"deliveryOnInvoiceAcceptanceDetail,omitempty"`

	// EtdDetail Use this object to specify all information on how the electronic Trade document references used with the shipment.
	EtdDetail *ETDDetail `json:"etdDetail,omitempty"`

	// HoldAtLocationDetail Use this object to specify required information for a shipment to be held at destination FedEx location.<br><i>Note: This object HoldAtLocationDetail is Required, when HOLD_AT_LOCATION is chosen in the specialServiceTypes.</i>
	HoldAtLocationDetail *HoldAtLocationDetail `json:"holdAtLocationDetail,omitempty"`

	// HomeDeliveryPremiumDetail These are Special service elements for FedEx Ground Home Delivery shipments. If selected, element homedeliveryPremiumType is mandatory.
	HomeDeliveryPremiumDetail *HomeDeliveryPremiumDetail `json:"homeDeliveryPremiumDetail,omitempty"`

	// InternationalControlledExportDetail Use this object to specify International Controlled Export shipment Details.<br>Note: licenseOrPermitExpirationDate and licenseOrPermitNumber are not required when type is WAREHOUSE_WITHDRAWAL.
	InternationalControlledExportDetail *InternationalControlledExportDetail `json:"internationalControlledExportDetail,omitempty"`

	// InternationalTrafficInArmsRegulationsDetail These are International Traffic In Arms Regulations shipment service details.
	InternationalTrafficInArmsRegulationsDetail *InternationalTrafficInArmsRegulationsDetail `json:"internationalTrafficInArmsRegulationsDetail,omitempty"`

	// PendingShipmentDetail This object is used to specify the Pending Shipment Type for Email label.
	PendingShipmentDetail *PendingShipmentDetail `json:"pendingShipmentDetail,omitempty"`

	// ReturnShipmentDetail Use this object for specifying return shipment details.
	ReturnShipmentDetail *ReturnShipmentDetail `json:"returnShipmentDetail,omitempty"`

	// ShipmentCODDetail This is the shipment level COD detail.
	ShipmentCODDetail *ShipmentCODDetail `json:"shipmentCODDetail,omitempty"`

	// ShipmentDryIceDetail This is the descriptive data required for a FedEx shipment containing dangerous materials. This element is required when SpecialServiceType DRY_ICE is selected.<p><i>Note:<ul><li>Dry Ice is a Package level Special Service for Domestic and International shipments.</li><li>Dry Ice must be declared at both Shipment and Package level for International MPS shipments to print the compliance statement on Airway Bill labels.</li></ul></i></p>
	ShipmentDryIceDetail *ShipmentDryIceDetail1 `json:"shipmentDryIceDetail,omitempty"`

	// SpecialServiceTypes Special services requested for the shipment.<br>Example: <ul><li>HOLD_AT_LOCATION</li><li>RETURN_SHIPMENT</li><li>BROKER_SELECT_OPTION</li><li>CALL_BEFORE_DELIVERY</li><li>COD</li><li>CUSTOM_DELIVERY_WINDOW</li></ul><br><a onclick='loadDocReference("shipmentlevelspecialservicetypes")'>click here to see Shipment Special Service Types</a>
	SpecialServiceTypes *[]string `json:"specialServiceTypes,omitempty"`
}

// ShipperAccountNumber The account number associated with the shipment.
type ShipperAccountNumber struct {
	// Value The account number value. Maximum length is 9 .<br>Example: Your account number
	Value string `json:"value"`
}

// ShipperParty Indicate the Shipper contact details for this shipment.
type ShipperParty struct {
	// Address This is detailed information on physical location. May be used as an actual physical address (place to which one could go), or as a container of address parts which should be handled as a unit (such as a city-state-ZIP combination within the US).
	Address PartyAddress `json:"address"`

	// Contact Indicate the contact details for this shipment.
	Contact PartyContact `json:"contact"`

	// Tins This is the tax identification number details.
	Tins *[]TaxpayerIdentification `json:"tins,omitempty"`
}

// ShippingDocumentDispositionDetail These are document diposition details. Each occurrence of this class specifies a particular way in which a kind of shipping document is to be produced and provided.
type ShippingDocumentDispositionDetail struct {
	// DispositionType Specify how to create and return the document.
	DispositionType *ShippingDocumentDispositionDetailDispositionType `json:"dispositionType,omitempty"`

	// EMailDetail Specifies how to e-mail shipping documents.
	EMailDetail *ShippingDocumentEmailDetail `json:"eMailDetail,omitempty"`
}

// ShippingDocumentDispositionDetailDispositionType Specify how to create and return the document.
type ShippingDocumentDispositionDetailDispositionType string

// ShippingDocumentEmailDetail Specifies how to e-mail shipping documents.
type ShippingDocumentEmailDetail struct {
	// EMailRecipients Indicates the shipping document email recipients.
	EMailRecipients []ShippingDocumentEmailRecipient `json:"eMailRecipients"`

	// Grouping Identifies the convention by which documents are to be grouped as email attachment.
	Grouping *ShippingDocumentEmailDetailGrouping `json:"grouping,omitempty"`

	// Locale These are locale details.<br>Example: 'en_US'<br><a onclick='loadDocReference("locales")'>click here to see locales</a><br>Note: If the locale is left blank or an invalid locale is entered, an error message is returned in response.
	Locale *string `json:"locale,omitempty"`
}

// ShippingDocumentEmailDetailGrouping Identifies the convention by which documents are to be grouped as email attachment.
type ShippingDocumentEmailDetailGrouping string

// ShippingDocumentEmailRecipient defines model for ShippingDocumentEmailRecipient.
type ShippingDocumentEmailRecipient struct {
	// EmailAddress Specifies the email address.<br> Example: email@fedex.com
	EmailAddress *string `json:"emailAddress,omitempty"`

	// RecipientType Specify the email notification recipient type.
	RecipientType ShippingDocumentEmailRecipientRecipientType `json:"recipientType"`
}

// ShippingDocumentEmailRecipientRecipientType Specify the email notification recipient type.
type ShippingDocumentEmailRecipientRecipientType string

// ShippingDocumentFormat Specify the shipping document format.
type ShippingDocumentFormat struct {
	// Dispositions Specifies how to create, organize, and return the document
	//
	Dispositions *[]ShippingDocumentDispositionDetail `json:"dispositions,omitempty"`

	// DocType Specify the image format used for a shipping document.<br><a onclick='loadDocReference("labelstocktypes")'>click here to see label format types</a>
	DocType *ShippingDocumentFormatDocType `json:"docType,omitempty"`

	// Locale These are locale details.<br>example: 'en_US'<br><a onclick='loadDocReference("locales")'>click here to see Locales</a><br>Note: If the locale is left blank or an invalid locale is entered, an error message is returned in response.
	Locale *string `json:"locale,omitempty"`

	// OptionsRequested Indicate the requested options for document format.
	OptionsRequested *DocumentFormatOptionsRequested `json:"optionsRequested,omitempty"`

	// ProvideInstructions Indicates whether or not to provide the instructions.
	ProvideInstructions *bool `json:"provideInstructions,omitempty"`

	// StockType Indicate the used label stock type. Note to list the correct type of paper for the freight address label option.
	StockType *ShippingDocumentFormatStockType `json:"stockType,omitempty"`
}

// ShippingDocumentFormatDocType Specify the image format used for a shipping document.<br><a onclick='loadDocReference("labelstocktypes")'>click here to see label format types</a>
type ShippingDocumentFormatDocType string

// ShippingDocumentFormatStockType Indicate the used label stock type. Note to list the correct type of paper for the freight address label option.
type ShippingDocumentFormatStockType string

// ShippingDocumentSpecification Use this object to provide all data required for additional (non-label) shipping documents to be produced.
type ShippingDocumentSpecification struct {
	// CertificateOfOrigin The instructions indicating how to print the Certificate of Origin ( e.g. whether or not to include the instructions, image type, etc ...)
	CertificateOfOrigin *CertificateOfOriginDetail `json:"certificateOfOrigin,omitempty"`

	// CommercialInvoiceDetail The instructions indicating how to print the Commercial Invoice( e.g. image type) Specifies characteristics of a shipping document to be produced.
	CommercialInvoiceDetail *CommercialInvoiceDetail `json:"commercialInvoiceDetail,omitempty"`

	// GeneralAgencyAgreementDetail Use this object to specify details to generate general agency agreement detail.
	GeneralAgencyAgreementDetail *GeneralAgencyAgreementDetail `json:"generalAgencyAgreementDetail,omitempty"`

	// Op900Detail Use this object to specify details to generate the OP-900 document for hazardous material packages.
	Op900Detail *Op900Detail `json:"op900Detail,omitempty"`

	// ReturnInstructionsDetail These are return instruction details which will be returned in the transaction to be printed on Return Label.
	ReturnInstructionsDetail *ReturnInstructionsDetail `json:"returnInstructionsDetail,omitempty"`

	// ShippingDocumentTypes Indicates the types of shipping documents requested.
	ShippingDocumentTypes *[]ShippingDocumentSpecificationShippingDocumentTypes `json:"shippingDocumentTypes,omitempty"`

	// UsmcaCertificationOfOriginDetail The instructions indicating how to print the USMCA Certificate of Origin (e.g. whether or not to include the instructions, image type, etc ...).
	UsmcaCertificationOfOriginDetail *UsmcaCertificationOfOriginDetail `json:"usmcaCertificationOfOriginDetail,omitempty"`

	// UsmcaCommercialInvoiceCertificationOfOriginDetail The instructions indicating commercial invoice certification of origin.
	UsmcaCommercialInvoiceCertificationOfOriginDetail *UsmcaCommercialInvoiceCertificationOfOriginDetail `json:"usmcaCommercialInvoiceCertificationOfOriginDetail,omitempty"`
}

// ShippingDocumentSpecificationShippingDocumentTypes defines model for ShippingDocumentSpecification.ShippingDocumentTypes.
type ShippingDocumentSpecificationShippingDocumentTypes string

// SignatureOptionDetail This element specifies Signature option details.
type SignatureOptionDetail struct {
	// SignatureReleaseNumber This is release number.<br>Example: 23456
	SignatureReleaseNumber *string `json:"signatureReleaseNumber,omitempty"`
}

// SmartPostInfoDetail Use this object to specify the smartpost shipment details. <br>Required for SMARTPOST service. If SmartPostInfoDetail is indicated, the elements below it are also required.
type SmartPostInfoDetail struct {
	// AncillaryEndorsement Indicate the type of ancillary endorsement. Is required for Presorted Standard but not for returns or parcel select. <br>Note: Not all are usable for all ancillary endorsements.<br>For more information, refer to the <a href = 'https://www.fedex.com/en-us/shipping/fedex-smartpost/rates-zones.html' target='_blank'>FedEx SmartPost®</a>.
	AncillaryEndorsement *SmartPostInfoDetailAncillaryEndorsement `json:"ancillaryEndorsement,omitempty"`

	// HubId Specify the four-digit numeric Hub ID value used for smartport shipments.<br><a onclick='loadDocReference("smartposthubids")'>click here to see Hub Ids</a>
	HubId string `json:"hubId"`

	// Indicia Specify the indicia type.<br>Available options include:<ul><li>MEDIA_MAIL</li><li>PARCEL_SELECT (1 LB through 70 LB)</li><li>PRESORTED_BOUND_PRINTED_MATTER</li><li>PRESORTED_STANDARD (less than 1 LB)</li><li>PARCEL_RETURN</li></ul>
	Indicia SmartPostInfoDetailIndicia `json:"indicia"`

	// SpecialServices Specify the special handling associated with Smartpost Shipment.
	SpecialServices *SmartPostInfoDetailSpecialServices `json:"specialServices,omitempty"`
}

// SmartPostInfoDetailAncillaryEndorsement Indicate the type of ancillary endorsement. Is required for Presorted Standard but not for returns or parcel select. <br>Note: Not all are usable for all ancillary endorsements.<br>For more information, refer to the <a href = 'https://www.fedex.com/en-us/shipping/fedex-smartpost/rates-zones.html' target='_blank'>FedEx SmartPost®</a>.
type SmartPostInfoDetailAncillaryEndorsement string

// SmartPostInfoDetailIndicia Specify the indicia type.<br>Available options include:<ul><li>MEDIA_MAIL</li><li>PARCEL_SELECT (1 LB through 70 LB)</li><li>PRESORTED_BOUND_PRINTED_MATTER</li><li>PRESORTED_STANDARD (less than 1 LB)</li><li>PARCEL_RETURN</li></ul>
type SmartPostInfoDetailIndicia string

// SmartPostInfoDetailSpecialServices Specify the special handling associated with Smartpost Shipment.
type SmartPostInfoDetailSpecialServices string

// SoldToParty Will indicate the party responsible for purchasing the goods shipped from the shipper to the recipient. The sold to party is not necessarily the recipient or the importer of record. The sold to party is relevant when the purchaser, rather than the recipient determines when certain customs regulations apply.
type SoldToParty struct {
	// AccountNumber This is FedEx Account number details.
	AccountNumber *AccountNumber `json:"accountNumber,omitempty"`

	// Address This is detailed information on physical location. May be used as an actual physical address (place to which one could go), or as a container of address parts which should be handled as a unit (such as a city-state-ZIP combination within the US).
	Address *PartyAddress `json:"address,omitempty"`

	// Contact Indicate the contact details for this shipment.
	Contact *PartyContact `json:"contact,omitempty"`

	// Tins Used for adding the tax id
	Tins *[]TaxpayerIdentification `json:"tins,omitempty"`
}

// StringBarcode Each instance of this data type represents a barcode whose content must be represented as ASCII text (i.e. not binary data).
type StringBarcode struct {
	// Type This is the type of barcode data in this instance. <br>Valid values:<ul><li>ADDRESS - Represents the recipient address.</li></ul>
	Type *string `json:"type,omitempty"`

	// Value This is the value.<br>Example: 1010062512241535917900794953544894
	Value *string `json:"value,omitempty"`
}

// Surcharge These are surcharges details.<br><a onclick='loadDocReference("surcharges")'>click here to see Surcharges</a>
type Surcharge struct {
	// Amount This is the surcharge amount.<br>Example: 15.35
	Amount *interface{} `json:"amount,omitempty"`

	// Description Specifies the description of the surcharge. Indicates delivery and returns information for FedEx Ground Economy services. <br>Example: Fuel Surcharge
	Description *string `json:"description,omitempty"`

	// Level Specifies if the surcharge applies to the entire shipment, or to an individual package.<br>Example: PACKAGE
	Level *string `json:"level,omitempty"`

	// SurchargeType This is the surcharge type.<br>Example: APPOINTMENT_DELIVERY
	SurchargeType *string `json:"surchargeType,omitempty"`
}

// Tax Specifies the tax for the shipment.
type Tax struct {
	// Amount Indicates the amount of tax.<br>Example: 10.0
	Amount *float64 `json:"amount,omitempty"`

	// Description Specifies the tax description.
	Description *string `json:"description,omitempty"`

	// Level Indicates the level of tax.
	Level *string `json:"level,omitempty"`

	// Type Specifies the type of the tax.
	Type *string `json:"type,omitempty"`
}

// TaxpayerIdentification defines model for TaxpayerIdentification.
type TaxpayerIdentification struct {
	// EffectiveDate Specify the tax ID effective date.<br>Example: 2000-01-23T04:56:07.000+00:00
	EffectiveDate *string `json:"effectiveDate,omitempty"`

	// ExpirationDate Specify the tax ID expiration date.<br>Example: 2000-01-23T04:56:07.000+00:00
	ExpirationDate *string `json:"expirationDate,omitempty"`

	// Number Specify tax ID number. Maximum length is 18. <br>Example: 123567
	Number *string `json:"number,omitempty"`

	// TinType Indicate the type of tax identification number.
	TinType *TaxpayerIdentificationTinType `json:"tinType,omitempty"`

	// Usage Specify the reason for using the tax identification number in shipment processing.
	Usage *string `json:"usage,omitempty"`
}

// TaxpayerIdentificationTinType Indicate the type of tax identification number.
type TaxpayerIdentificationTinType string

// TrackingId Indicates the tracking details of the package.
type TrackingId struct {
	// FormId This is FedEx tracking Identifier associated with the package.<br>Example: 8600
	FormId *string `json:"formId,omitempty"`

	// TrackingIdType Specify the FedEx transportation type. <br>Example: EXPRESS
	TrackingIdType *string `json:"trackingIdType,omitempty"`

	// TrackingNumber This is the number associated with the package that is used to track it. <br>Example: 49XXX0000XXX20032835
	TrackingNumber *int `json:"trackingNumber,omitempty"`

	// UspsApplicationId Specify the USPS tracking Identifier associated with FedEx SmartPost shipment.<br>Example: 92
	UspsApplicationId *int `json:"uspsApplicationId,omitempty"`
}

// TransactionDetailVO defines model for TransactionDetailVO.
type TransactionDetailVO struct {
	// TransactionDetails Includes data returned which governs data payload language/translations. The TransactionDetail from the request is echoed back to the caller in the corresponding reply.<br>Example: transactionDetails
	TransactionDetails *string `json:"transactionDetails,omitempty"`

	// TransactionId This element has a unique identifier added in your request, helps you match the request to the reply. Maximum of 40 characters allowed.<br>Example: XXXX_XXX123XXXXX.
	TransactionId *string `json:"transactionId,omitempty"`
}

// TransactionShipmentOutputVO Specifies shipping transaction output details
type TransactionShipmentOutputVO struct {
	// Alerts These are alert details received in the response.
	Alerts *[]Alert `json:"alerts,omitempty"`

	// CompletedShipmentDetail Returns the result of processing the desired package as a single-package shipment.
	CompletedShipmentDetail *CompletedShipmentDetail `json:"completedShipmentDetail,omitempty"`

	// MasterTrackingNumber This is a master tracking number for the shipment (must be unique for stand-alone open shipments, or unique within consolidation if consolidation key is provided).<br>Example: 794953535000
	MasterTrackingNumber *string `json:"masterTrackingNumber,omitempty"`

	// PieceResponses Specifies the information about the pieces, received in the response.
	PieceResponses *[]PieceResponse `json:"pieceResponses,omitempty"`

	// ServiceCategory Indicates the Service Category.<br>Example: EXPRESS
	ServiceCategory *string `json:"serviceCategory,omitempty"`

	// ServiceName This is the service name associated with the shipment.<br>Example: FedEx Ground
	ServiceName *string `json:"serviceName,omitempty"`

	// ServiceType Indicate the FedEx serviceType used for this shipment. The results will be filtered by the serviceType value indicated.<br>Example: STANDARD_OVERNIGHT<br><a onclick='loadDocReference("servicetypes")'>click here to see Service Types</a>
	ServiceType *string `json:"serviceType,omitempty"`

	// ShipDatestamp This is the shipment date. Default value is current date in case the date is not provided or a past date is provided.<br>Format [YYYY-MM-DD].<br>Example: 2019-10-14
	ShipDatestamp *string `json:"shipDatestamp,omitempty"`

	// ShipmentAdvisoryDetails These are shipment advisory details.
	ShipmentAdvisoryDetails *ShipmentAdvisoryDetails `json:"shipmentAdvisoryDetails,omitempty"`

	// ShipmentDocuments These are shipping document details.
	ShipmentDocuments *[]LabelResponseVO `json:"shipmentDocuments,omitempty"`
}

// UploadDocumentReferenceDetail Specify the document upload reference details.
type UploadDocumentReferenceDetail struct {
	// Description Specify additional information about the uploaded document for better understanding.<br>Example: Certificate of Origin is uploaded for country of manufacturing verification.
	Description *string `json:"description,omitempty"`

	// DocumentId This is the uploaded document ID value.<br>Example: 090927d680038c61
	DocumentId *string `json:"documentId,omitempty"`

	// DocumentReference Specify the reference for the uploaded document.This is for the customer to reference their uploaded docs when they retrieve them. Could be anything, order number, po number, whatever the customer used to tie the document to something they would use.<br>Note: Ensure to supply document references in case of  Pre-Shipment document upload.</br><br>Example: Reference
	DocumentReference *string `json:"documentReference,omitempty"`

	// DocumentType Specify document type for the uploaded document. It should match with the type of uploaded document associated with documentId.
	DocumentType *UploadDocumentReferenceDetailDocumentType `json:"documentType,omitempty"`
}

// UploadDocumentReferenceDetailDocumentType Specify document type for the uploaded document. It should match with the type of uploaded document associated with documentId.
type UploadDocumentReferenceDetailDocumentType string

// UploadDocumentReferenceDetail1 Specify the document upload reference details.
type UploadDocumentReferenceDetail1 struct {
	// Description This is the document description of the attached document.<br>Example: PRO FORMA INVOICE
	Description *string `json:"description,omitempty"`

	// DocumentId This is the uploaded document ID value.<br>Example: 090927d680038c61
	DocumentId *string `json:"documentId,omitempty"`

	// DocumentReference Specify the reference for the uploaded document.<br>Example: Reference
	DocumentReference *string `json:"documentReference,omitempty"`

	// DocumentType This is the uploaded document type.
	DocumentType *UploadDocumentReferenceDetail1DocumentType `json:"documentType,omitempty"`
}

// UploadDocumentReferenceDetail1DocumentType This is the uploaded document type.
type UploadDocumentReferenceDetail1DocumentType string

// UsmcaCertificationOfOriginDetail The instructions indicating how to print the USMCA Certificate of Origin (e.g. whether or not to include the instructions, image type, etc ...).
type UsmcaCertificationOfOriginDetail struct {
	// BlanketPeriod Date Range for custom delivery request; only used if type is BETWEEN.
	BlanketPeriod *RetrieveDateRange `json:"blanketPeriod,omitempty"`

	// CertifierJobTitle Specify the job title of the certifier
	CertifierJobTitle *string `json:"certifierJobTitle,omitempty"`

	// CertifierSpecification This is certifier specification.
	CertifierSpecification *UsmcaCertificationOfOriginDetailCertifierSpecification `json:"certifierSpecification,omitempty"`

	// CustomerImageUsages Specifies the usage and identification of customer supplied images to be used on this document.
	CustomerImageUsages *[]CustomerImageUsage `json:"customerImageUsages,omitempty"`

	// DocumentFormat Specify the shipping document format.
	DocumentFormat *ShippingDocumentFormat `json:"documentFormat,omitempty"`

	// ImporterSpecification This is importer specification.
	ImporterSpecification *UsmcaCertificationOfOriginDetailImporterSpecification `json:"importerSpecification,omitempty"`
	Producer              *Party3                                                `json:"producer,omitempty"`

	// ProducerSpecification This is producer specification.
	ProducerSpecification *UsmcaCertificationOfOriginDetailProducerSpecification `json:"producerSpecification,omitempty"`
}

// UsmcaCertificationOfOriginDetailCertifierSpecification This is certifier specification.
type UsmcaCertificationOfOriginDetailCertifierSpecification string

// UsmcaCertificationOfOriginDetailImporterSpecification This is importer specification.
type UsmcaCertificationOfOriginDetailImporterSpecification string

// UsmcaCertificationOfOriginDetailProducerSpecification This is producer specification.
type UsmcaCertificationOfOriginDetailProducerSpecification string

// UsmcaCommercialInvoiceCertificationOfOriginDetail The instructions indicating commercial invoice certification of origin.
type UsmcaCommercialInvoiceCertificationOfOriginDetail struct {
	// CertifierJobTitle Specify the job title of the certifier
	CertifierJobTitle *string `json:"certifierJobTitle,omitempty"`

	// CertifierSpecification This is certifier specification.
	CertifierSpecification *UsmcaCommercialInvoiceCertificationOfOriginDetailCertifierSpecification `json:"certifierSpecification,omitempty"`

	// CustomerImageUsages Specifies the usage and identification of customer supplied images to be used on this document.
	CustomerImageUsages *[]CustomerImageUsage `json:"customerImageUsages,omitempty"`

	// DocumentFormat Specify the shipping document format.
	DocumentFormat *ShippingDocumentFormat `json:"documentFormat,omitempty"`

	// ImporterSpecification This is importer specification.
	ImporterSpecification *UsmcaCommercialInvoiceCertificationOfOriginDetailImporterSpecification `json:"importerSpecification,omitempty"`
	Producer              *Party3                                                                 `json:"producer,omitempty"`

	// ProducerSpecification This is producer specification.
	ProducerSpecification *UsmcaCommercialInvoiceCertificationOfOriginDetailProducerSpecification `json:"producerSpecification,omitempty"`
}

// UsmcaCommercialInvoiceCertificationOfOriginDetailCertifierSpecification This is certifier specification.
type UsmcaCommercialInvoiceCertificationOfOriginDetailCertifierSpecification string

// UsmcaCommercialInvoiceCertificationOfOriginDetailImporterSpecification This is importer specification.
type UsmcaCommercialInvoiceCertificationOfOriginDetailImporterSpecification string

// UsmcaCommercialInvoiceCertificationOfOriginDetailProducerSpecification This is producer specification.
type UsmcaCommercialInvoiceCertificationOfOriginDetailProducerSpecification string

// UsmcaDetail Indicates the USMCA detail
type UsmcaDetail struct {
	// OriginCriterion Specify the origin criterion.
	OriginCriterion *UsmcaDetailOriginCriterion `json:"originCriterion,omitempty"`
}

// UsmcaDetailOriginCriterion Specify the origin criterion.
type UsmcaDetailOriginCriterion string

// UsmcaLowValueStatementDetail Specify the low Value statement necessary for printing the USMCA for Customs documentation.
type UsmcaLowValueStatementDetail struct {
	// CountryOfOriginLowValueDocumentRequested Specify the country Of Origin of Low Value Document for Customs declaration.
	CountryOfOriginLowValueDocumentRequested *bool `json:"countryOfOriginLowValueDocumentRequested,omitempty"`

	// CustomsRole Specify the shipper role for Customs declaration.
	CustomsRole UsmcaLowValueStatementDetailCustomsRole `json:"customsRole"`
}

// UsmcaLowValueStatementDetailCustomsRole Specify the shipper role for Customs declaration.
type UsmcaLowValueStatementDetailCustomsRole string

// ValidatedHazardousCommodityContent These the details on the kind and quantity of an individual hazardous commodity in a package.
type ValidatedHazardousCommodityContent struct {
	// Description Identifies and describes an individual hazardous commodity. For 201001 load, this is based on data from the FedEx Ground Hazardous Materials Shipping Guide.
	Description *ValidatedHazardousCommodityDescription `json:"description,omitempty"`

	// MassPoints The mass points are a calculation used by ADR regulations for measuring the risk of a particular hazardous commodity.<br>Example: 2.0
	MassPoints *float64 `json:"massPoints,omitempty"`

	// NetExplosiveDetail Specifies the total mass of the contained explosive substances, without the mass of any casings, bullets, shells, etc.
	NetExplosiveDetail *NetExplosiveDetail `json:"netExplosiveDetail,omitempty"`

	// Options Customer-provided specifications for handling individual commodities.
	Options *HazardousCommodityContent001 `json:"options,omitempty"`

	// Quantity Indicates hazardous commodity quantity details.
	Quantity *HazardousCommodityQuantityDetail `json:"quantity,omitempty"`
}

// ValidatedHazardousCommodityDescription Identifies and describes an individual hazardous commodity. For 201001 load, this is based on data from the FedEx Ground Hazardous Materials Shipping Guide.
type ValidatedHazardousCommodityDescription struct {
	// Attributes Specifies attributes.<br>Example: ["attributes"]
	Attributes *[]string `json:"attributes,omitempty"`

	// Authorization Information related to quantity limitations and operator or state variations as may be applicable to the dangerous goods commodity.
	Authorization *string `json:"authorization,omitempty"`

	// HazardClass Specifies hazard class.<br>Example: Hazard Class
	HazardClass *string `json:"hazardClass,omitempty"`

	// Id Specifies the Identification.<br>Example: 1234
	Id *string `json:"id,omitempty"`

	// LabelText Specifies the text for the label.
	LabelText *string `json:"labelText,omitempty"`

	// PackingGroup Specifies packing group.
	PackingGroup *string `json:"packingGroup,omitempty"`

	// PackingInstructions Specifies Packing Instructions.<br>Example: packingInstructions
	PackingInstructions *string `json:"packingInstructions,omitempty"`

	// ProperShippingName Specifies proper shipping name.
	ProperShippingName *string `json:"properShippingName,omitempty"`

	// ProperShippingNameAndDescription Fully-expanded descriptive text for a hazardous commodity.<br>Example: properShippingNameAndDescription
	ProperShippingNameAndDescription *string `json:"properShippingNameAndDescription,omitempty"`

	// SequenceNumber In conjunction with the regulatory identifier, this field uniquely identifies a specific hazardous materials commodity.<br>Example: 876
	SequenceNumber *int32 `json:"sequenceNumber,omitempty"`

	// SpecialProvisions Specifies Special Provisions if any.<br>Example: specialProvisions
	SpecialProvisions *string `json:"specialProvisions,omitempty"`

	// SubsidiaryClasses Specifies subsidiary Classes.<br>Example:["Subsidiary Classes"]
	SubsidiaryClasses *[]string `json:"subsidiaryClasses,omitempty"`

	// Symbols Specifies Symbols.<br>Example: symbols
	Symbols *string `json:"symbols,omitempty"`

	// TechnicalName Specifies Technical Name.<br>Example: technicalName
	TechnicalName *string `json:"technicalName,omitempty"`

	// TunnelRestrictionCode There are five categories of tunnel categorization with A representing the least restrictive and E as the most restrictive. Category A, as the least restrictive, will not be sign-posted. Category E, the most restrictive, only allows the passage of UN2919, UN3291, UN3331, UN3359 and UN3373.<br>Example: UN2919
	TunnelRestrictionCode *string `json:"tunnelRestrictionCode,omitempty"`
}

// ValidatedHazardousContainer Specifies the details of a container used to package dangerous goods commodities.
type ValidatedHazardousContainer struct {
	// HazardousCommodities Indicates the details of the hazardous commodities in the completed package.
	HazardousCommodities *[]ValidatedHazardousCommodityContent `json:"hazardousCommodities,omitempty"`

	// Qvalue Indicates that the quantity of the dangerous goods packaged is permissible for shipping. This is used to ensure that the dangerous goods commodities do not exceed the net quantity per package restrictions.<br>Example: 2.0
	Qvalue *float64 `json:"qvalue,omitempty"`
}

// VariableHandlingChargeDetail Indicate the details about how to calculate variable handling charges at the shipment level. They can be based on a percentage of the shipping charges or a fixed amount. If indicated, element rateLevelType is required.
type VariableHandlingChargeDetail struct {
	// FixedValue This is to specify a fixed handling charge on the shipment. The element allows entry of 7 characters before the decimal and 2 characters following the decimal. <br>Example: 5.00.
	FixedValue *struct {
		// Amount fixed variable handling charge amount
		Amount float32 `json:"amount"`

		// Currency fixed variable handling charge currency type<br><a onclick='loadDocReference("currencycodes")'>click here to see Currency codes</a>
		Currency string `json:"currency"`
	} `json:"fixedValue,omitempty"`

	// PercentValue This is the variable handling percentage. If the percent value is mentioned as 10, it means 10%(multiplier of 0.1).<br>Example: 12.45
	PercentValue *float64 `json:"percentValue,omitempty"`

	// RateElementBasis Specify the charge type upon which the variable handling percentage amount is calculated.
	RateElementBasis *VariableHandlingChargeDetailRateElementBasis `json:"rateElementBasis,omitempty"`

	// RateLevelType indicates whether or not the rating is being done at the package level, or if the packages are bundled together. At the package level, charges are applied based on the details of each individual package. If they are bundled, one package is chosen as the parent and charges are applied based on that one package.
	RateLevelType *VariableHandlingChargeDetailRateLevelType `json:"rateLevelType,omitempty"`

	// RateType The rate type indicates what type of rate request is being returned; account, preferred, incentive, etc.
	RateType *VariableHandlingChargeDetailRateType `json:"rateType,omitempty"`
}

// VariableHandlingChargeDetailRateElementBasis Specify the charge type upon which the variable handling percentage amount is calculated.
type VariableHandlingChargeDetailRateElementBasis string

// VariableHandlingChargeDetailRateLevelType indicates whether or not the rating is being done at the package level, or if the packages are bundled together. At the package level, charges are applied based on the details of each individual package. If they are bundled, one package is chosen as the parent and charges are applied based on that one package.
type VariableHandlingChargeDetailRateLevelType string

// VariableHandlingChargeDetailRateType The rate type indicates what type of rate request is being returned; account, preferred, incentive, etc.
type VariableHandlingChargeDetailRateType string

// VerifyShipmentOutputVO The response elements received when a shipment is created.
type VerifyShipmentOutputVO struct {
	// Alerts The alerts received when a Shipment Package Validate is processed. This includes the alert code, alert type, and alert message.
	Alerts *[]Alert `json:"alerts,omitempty"`
}

// Weight These are the package weight details.<br>Note: Weight is not required for One rate shipments
type Weight struct {
	// Units Indicate the weight unit type. The package and commodity weight unit should be the same else the request will result in an error.
	Units WeightUnits `json:"units"`

	// Value Weight Value.<br> Example: 68.25<br><a href='https://developer.fedex.com/api/en-us/guides/api-reference.html#packagetypes' target='_blank'>Click here to see Weight Values</a>.
	Value float64 `json:"value"`
}

// WeightUnits Indicate the weight unit type. The package and commodity weight unit should be the same else the request will result in an error.
type WeightUnits string

// Weight1 These are the package weight details.
type Weight1 struct {
	// Units This is the package weight unit. For Dry Ice the unit of measure is KG.
	Units *Weight1Units `json:"units,omitempty"`

	// Value Weight Value.<br> Example: 68.25<br><a href='https://developer.fedex.com/api/en-us/guides/api-reference.html#packagetypes' target='_blank'>Click here to see Weight Values</a>.
	Value *float64 `json:"value,omitempty"`
}

// Weight1Units This is the package weight unit. For Dry Ice the unit of measure is KG.
type Weight1Units string

// Weight3 These are the package weight details.<br>Note: Weight is not required for One rate shipments
type Weight3 struct {
	// Units Indicate the weight unit type. The package and commodity weight unit should be the same else the request will result in an error.
	Units Weight3Units `json:"units"`

	// Value Weight Value.<br> Example: 68.25<br>
	Value float64 `json:"value"`
}

// Weight3Units Indicate the weight unit type. The package and commodity weight unit should be the same else the request will result in an error.
type Weight3Units string

// Weight4 It is the unit weight of the commodity.<br>Note: Weight is not required for One rate shipments
type Weight4 struct {
	// Units Indicate the weight unit type. The package and commodity weight unit should be the same else the request will result in an error.
	Units Weight4Units `json:"units"`

	// Value Weight Value.<br> Example: 68.25
	Value float64 `json:"value"`
}

// Weight4Units Indicate the weight unit type. The package and commodity weight unit should be the same else the request will result in an error.
type Weight4Units string

// CreateShipmentJSONBody defines parameters for CreateShipment.
type CreateShipmentJSONBody struct {
	union json.RawMessage
}

// CreateShipmentParams defines parameters for CreateShipment.
type CreateShipmentParams struct {
	// XCustomerTransactionId This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply.
	XCustomerTransactionId *string `json:"x-customer-transaction-id,omitempty"`

	// ContentType This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file.
	ContentType string `json:"content-type"`

	// XLocale This indicates the combination of language code and country code.  <a onclick='loadDocReference("locales")'>Click here to see Locales</a>
	XLocale *string `json:"x-locale,omitempty"`

	// Authorization This indicates the authorization token for the input request.
	Authorization string `json:"authorization"`
}

// CancelShipmentJSONBody defines parameters for CancelShipment.
type CancelShipmentJSONBody struct {
	union json.RawMessage
}

// CancelShipmentParams defines parameters for CancelShipment.
type CancelShipmentParams struct {
	// XCustomerTransactionId This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply.
	XCustomerTransactionId *string `json:"x-customer-transaction-id,omitempty"`

	// ContentType This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file.
	ContentType string `json:"content-type"`

	// XLocale This indicates the combination of language code and country code.  <a onclick='loadDocReference("locales")'>Click here to see Locales</a>
	XLocale *string `json:"x-locale,omitempty"`

	// Authorization This indicates the authorization token for the input request.
	Authorization string `json:"authorization"`
}

// ShipmentPackageValidateJSONBody defines parameters for ShipmentPackageValidate.
type ShipmentPackageValidateJSONBody struct {
	union json.RawMessage
}

// ShipmentPackageValidateParams defines parameters for ShipmentPackageValidate.
type ShipmentPackageValidateParams struct {
	// XCustomerTransactionId This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply.
	XCustomerTransactionId *string `json:"x-customer-transaction-id,omitempty"`

	// ContentType This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file.
	ContentType string `json:"content-type"`

	// XLocale This indicates the combination of language code and country code.  <a onclick='loadDocReference("locales")'>Click here to see Locales</a>
	XLocale *string `json:"x-locale,omitempty"`

	// Authorization This indicates the authorization token for the input request.
	Authorization string `json:"authorization"`
}

// GetConfirmedShipmentAsyncResultsJSONBody defines parameters for GetConfirmedShipmentAsyncResults.
type GetConfirmedShipmentAsyncResultsJSONBody struct {
	union json.RawMessage
}

// GetConfirmedShipmentAsyncResultsParams defines parameters for GetConfirmedShipmentAsyncResults.
type GetConfirmedShipmentAsyncResultsParams struct {
	// XCustomerTransactionId This transaction Id helps the customers to track the transaction with APIF.
	XCustomerTransactionId *string `json:"x-customer-transaction-id,omitempty"`

	// ContentType This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file.
	ContentType string `json:"content-type"`

	// XLocale This indicates the combination of language code and country code.  <a onclick='loadDocReference("locales")'>Click here to see Locales</a>
	XLocale *string `json:"x-locale,omitempty"`

	// Authorization This indicates the authorization token for the input request.
	Authorization string `json:"authorization"`
}

// CreateTagJSONBody defines parameters for CreateTag.
type CreateTagJSONBody struct {
	union json.RawMessage
}

// CreateTagParams defines parameters for CreateTag.
type CreateTagParams struct {
	// XCustomerTransactionId This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply.
	XCustomerTransactionId *string `json:"x-customer-transaction-id,omitempty"`

	// ContentType This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file.
	ContentType string `json:"content-type"`

	// XLocale This indicates the combination of language code and country code.  <a onclick='loadDocReference("locales")'>Click here to see Locales</a>
	XLocale *string `json:"x-locale,omitempty"`

	// Authorization This indicates the authorization token for the input request.
	Authorization string `json:"authorization"`
}

// CancelTagJSONBody defines parameters for CancelTag.
type CancelTagJSONBody struct {
	union json.RawMessage
}

// CancelTagParams defines parameters for CancelTag.
type CancelTagParams struct {
	// XCustomerTransactionId This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply.
	XCustomerTransactionId *string `json:"x-customer-transaction-id,omitempty"`

	// ContentType This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file.
	ContentType string `json:"content-type"`

	// XLocale This indicates the combination of language code and country code.  <a onclick='loadDocReference("locales")'>Click here to see Locales</a>
	XLocale *string `json:"x-locale,omitempty"`

	// Authorization This indicates the authorization token for the input request.
	Authorization string `json:"authorization"`
}

// CreateShipmentJSONRequestBody defines body for CreateShipment for application/json ContentType.
type CreateShipmentJSONRequestBody CreateShipmentJSONBody

// CancelShipmentJSONRequestBody defines body for CancelShipment for application/json ContentType.
type CancelShipmentJSONRequestBody CancelShipmentJSONBody

// ShipmentPackageValidateJSONRequestBody defines body for ShipmentPackageValidate for application/json ContentType.
type ShipmentPackageValidateJSONRequestBody ShipmentPackageValidateJSONBody

// GetConfirmedShipmentAsyncResultsJSONRequestBody defines body for GetConfirmedShipmentAsyncResults for application/json ContentType.
type GetConfirmedShipmentAsyncResultsJSONRequestBody GetConfirmedShipmentAsyncResultsJSONBody

// CreateTagJSONRequestBody defines body for CreateTag for application/json ContentType.
type CreateTagJSONRequestBody CreateTagJSONBody

// CancelTagJSONRequestBody defines body for CancelTag for application/json ContentType.
type CancelTagJSONRequestBody CancelTagJSONBody

// RequestEditorFn  is the function signature for the RequestEditor callback function
type RequestEditorFn func(ctx context.Context, req *http.Request) error

// Doer performs HTTP requests.
//
// The standard http.Client implements this interface.
type HttpRequestDoer interface {
	Do(req *http.Request) (*http.Response, error)
}

// Client which conforms to the OpenAPI3 specification for this service.
type Client struct {
	// The endpoint of the server conforming to this interface, with scheme,
	// https://api.deepmap.com for example. This can contain a path relative
	// to the server, such as https://api.deepmap.com/dev-test, and all the
	// paths in the swagger spec will be appended to the server.
	Server string

	// Doer for performing requests, typically a *http.Client with any
	// customized settings, such as certificate chains.
	Client HttpRequestDoer

	// A list of callbacks for modifying requests which are generated before sending over
	// the network.
	RequestEditors []RequestEditorFn
}

// ClientOption allows setting custom parameters during construction
type ClientOption func(*Client) error

// Creates a new Client, with reasonable defaults
func NewClient(server string, opts ...ClientOption) (*Client, error) {
	// create a client with sane default values
	client := Client{
		Server: server,
	}
	// mutate client and add all optional params
	for _, o := range opts {
		if err := o(&client); err != nil {
			return nil, err
		}
	}
	// ensure the server URL always has a trailing slash
	if !strings.HasSuffix(client.Server, "/") {
		client.Server += "/"
	}
	// create httpClient, if not already present
	if client.Client == nil {
		client.Client = &http.Client{}
	}
	return &client, nil
}

// WithHTTPClient allows overriding the default Doer, which is
// automatically created using http.Client. This is useful for tests.
func WithHTTPClient(doer HttpRequestDoer) ClientOption {
	return func(c *Client) error {
		c.Client = doer
		return nil
	}
}

// WithRequestEditorFn allows setting up a callback function, which will be
// called right before sending the request. This can be used to mutate the request.
func WithRequestEditorFn(fn RequestEditorFn) ClientOption {
	return func(c *Client) error {
		c.RequestEditors = append(c.RequestEditors, fn)
		return nil
	}
}

// The interface specification for the client above.
type ClientInterface interface {
	// CreateShipmentWithBody request with any body
	CreateShipmentWithBody(ctx context.Context, params *CreateShipmentParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	CreateShipment(ctx context.Context, params *CreateShipmentParams, body CreateShipmentJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// CancelShipmentWithBody request with any body
	CancelShipmentWithBody(ctx context.Context, params *CancelShipmentParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	CancelShipment(ctx context.Context, params *CancelShipmentParams, body CancelShipmentJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// ShipmentPackageValidateWithBody request with any body
	ShipmentPackageValidateWithBody(ctx context.Context, params *ShipmentPackageValidateParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	ShipmentPackageValidate(ctx context.Context, params *ShipmentPackageValidateParams, body ShipmentPackageValidateJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetConfirmedShipmentAsyncResultsWithBody request with any body
	GetConfirmedShipmentAsyncResultsWithBody(ctx context.Context, params *GetConfirmedShipmentAsyncResultsParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	GetConfirmedShipmentAsyncResults(ctx context.Context, params *GetConfirmedShipmentAsyncResultsParams, body GetConfirmedShipmentAsyncResultsJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// CreateTagWithBody request with any body
	CreateTagWithBody(ctx context.Context, params *CreateTagParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	CreateTag(ctx context.Context, params *CreateTagParams, body CreateTagJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// CancelTagWithBody request with any body
	CancelTagWithBody(ctx context.Context, shipmentid string, params *CancelTagParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	CancelTag(ctx context.Context, shipmentid string, params *CancelTagParams, body CancelTagJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)
}

func (c *Client) CreateShipmentWithBody(ctx context.Context, params *CreateShipmentParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCreateShipmentRequestWithBody(c.Server, params, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) CreateShipment(ctx context.Context, params *CreateShipmentParams, body CreateShipmentJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCreateShipmentRequest(c.Server, params, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) CancelShipmentWithBody(ctx context.Context, params *CancelShipmentParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCancelShipmentRequestWithBody(c.Server, params, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) CancelShipment(ctx context.Context, params *CancelShipmentParams, body CancelShipmentJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCancelShipmentRequest(c.Server, params, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) ShipmentPackageValidateWithBody(ctx context.Context, params *ShipmentPackageValidateParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewShipmentPackageValidateRequestWithBody(c.Server, params, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) ShipmentPackageValidate(ctx context.Context, params *ShipmentPackageValidateParams, body ShipmentPackageValidateJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewShipmentPackageValidateRequest(c.Server, params, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetConfirmedShipmentAsyncResultsWithBody(ctx context.Context, params *GetConfirmedShipmentAsyncResultsParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetConfirmedShipmentAsyncResultsRequestWithBody(c.Server, params, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetConfirmedShipmentAsyncResults(ctx context.Context, params *GetConfirmedShipmentAsyncResultsParams, body GetConfirmedShipmentAsyncResultsJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetConfirmedShipmentAsyncResultsRequest(c.Server, params, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) CreateTagWithBody(ctx context.Context, params *CreateTagParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCreateTagRequestWithBody(c.Server, params, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) CreateTag(ctx context.Context, params *CreateTagParams, body CreateTagJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCreateTagRequest(c.Server, params, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) CancelTagWithBody(ctx context.Context, shipmentid string, params *CancelTagParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCancelTagRequestWithBody(c.Server, shipmentid, params, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) CancelTag(ctx context.Context, shipmentid string, params *CancelTagParams, body CancelTagJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCancelTagRequest(c.Server, shipmentid, params, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

// NewCreateShipmentRequest calls the generic CreateShipment builder with application/json body
func NewCreateShipmentRequest(server string, params *CreateShipmentParams, body CreateShipmentJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewCreateShipmentRequestWithBody(server, params, "application/json", bodyReader)
}

// NewCreateShipmentRequestWithBody generates requests for CreateShipment with any type of body
func NewCreateShipmentRequestWithBody(server string, params *CreateShipmentParams, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ship/v1/shipments")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	if params != nil {

		if params.XCustomerTransactionId != nil {
			var headerParam0 string

			headerParam0, err = runtime.StyleParamWithLocation("simple", false, "x-customer-transaction-id", runtime.ParamLocationHeader, *params.XCustomerTransactionId)
			if err != nil {
				return nil, err
			}

			req.Header.Set("x-customer-transaction-id", headerParam0)
		}

		var headerParam1 string

		headerParam1, err = runtime.StyleParamWithLocation("simple", false, "content-type", runtime.ParamLocationHeader, params.ContentType)
		if err != nil {
			return nil, err
		}

		req.Header.Set("content-type", headerParam1)

		if params.XLocale != nil {
			var headerParam2 string

			headerParam2, err = runtime.StyleParamWithLocation("simple", false, "x-locale", runtime.ParamLocationHeader, *params.XLocale)
			if err != nil {
				return nil, err
			}

			req.Header.Set("x-locale", headerParam2)
		}

		var headerParam3 string

		headerParam3, err = runtime.StyleParamWithLocation("simple", false, "authorization", runtime.ParamLocationHeader, params.Authorization)
		if err != nil {
			return nil, err
		}

		req.Header.Set("authorization", headerParam3)

	}

	return req, nil
}

// NewCancelShipmentRequest calls the generic CancelShipment builder with application/json body
func NewCancelShipmentRequest(server string, params *CancelShipmentParams, body CancelShipmentJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewCancelShipmentRequestWithBody(server, params, "application/json", bodyReader)
}

// NewCancelShipmentRequestWithBody generates requests for CancelShipment with any type of body
func NewCancelShipmentRequestWithBody(server string, params *CancelShipmentParams, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ship/v1/shipments/cancel")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("PUT", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	if params != nil {

		if params.XCustomerTransactionId != nil {
			var headerParam0 string

			headerParam0, err = runtime.StyleParamWithLocation("simple", false, "x-customer-transaction-id", runtime.ParamLocationHeader, *params.XCustomerTransactionId)
			if err != nil {
				return nil, err
			}

			req.Header.Set("x-customer-transaction-id", headerParam0)
		}

		var headerParam1 string

		headerParam1, err = runtime.StyleParamWithLocation("simple", false, "content-type", runtime.ParamLocationHeader, params.ContentType)
		if err != nil {
			return nil, err
		}

		req.Header.Set("content-type", headerParam1)

		if params.XLocale != nil {
			var headerParam2 string

			headerParam2, err = runtime.StyleParamWithLocation("simple", false, "x-locale", runtime.ParamLocationHeader, *params.XLocale)
			if err != nil {
				return nil, err
			}

			req.Header.Set("x-locale", headerParam2)
		}

		var headerParam3 string

		headerParam3, err = runtime.StyleParamWithLocation("simple", false, "authorization", runtime.ParamLocationHeader, params.Authorization)
		if err != nil {
			return nil, err
		}

		req.Header.Set("authorization", headerParam3)

	}

	return req, nil
}

// NewShipmentPackageValidateRequest calls the generic ShipmentPackageValidate builder with application/json body
func NewShipmentPackageValidateRequest(server string, params *ShipmentPackageValidateParams, body ShipmentPackageValidateJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewShipmentPackageValidateRequestWithBody(server, params, "application/json", bodyReader)
}

// NewShipmentPackageValidateRequestWithBody generates requests for ShipmentPackageValidate with any type of body
func NewShipmentPackageValidateRequestWithBody(server string, params *ShipmentPackageValidateParams, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ship/v1/shipments/packages/validate")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	if params != nil {

		if params.XCustomerTransactionId != nil {
			var headerParam0 string

			headerParam0, err = runtime.StyleParamWithLocation("simple", false, "x-customer-transaction-id", runtime.ParamLocationHeader, *params.XCustomerTransactionId)
			if err != nil {
				return nil, err
			}

			req.Header.Set("x-customer-transaction-id", headerParam0)
		}

		var headerParam1 string

		headerParam1, err = runtime.StyleParamWithLocation("simple", false, "content-type", runtime.ParamLocationHeader, params.ContentType)
		if err != nil {
			return nil, err
		}

		req.Header.Set("content-type", headerParam1)

		if params.XLocale != nil {
			var headerParam2 string

			headerParam2, err = runtime.StyleParamWithLocation("simple", false, "x-locale", runtime.ParamLocationHeader, *params.XLocale)
			if err != nil {
				return nil, err
			}

			req.Header.Set("x-locale", headerParam2)
		}

		var headerParam3 string

		headerParam3, err = runtime.StyleParamWithLocation("simple", false, "authorization", runtime.ParamLocationHeader, params.Authorization)
		if err != nil {
			return nil, err
		}

		req.Header.Set("authorization", headerParam3)

	}

	return req, nil
}

// NewGetConfirmedShipmentAsyncResultsRequest calls the generic GetConfirmedShipmentAsyncResults builder with application/json body
func NewGetConfirmedShipmentAsyncResultsRequest(server string, params *GetConfirmedShipmentAsyncResultsParams, body GetConfirmedShipmentAsyncResultsJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewGetConfirmedShipmentAsyncResultsRequestWithBody(server, params, "application/json", bodyReader)
}

// NewGetConfirmedShipmentAsyncResultsRequestWithBody generates requests for GetConfirmedShipmentAsyncResults with any type of body
func NewGetConfirmedShipmentAsyncResultsRequestWithBody(server string, params *GetConfirmedShipmentAsyncResultsParams, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ship/v1/shipments/results")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	if params != nil {

		if params.XCustomerTransactionId != nil {
			var headerParam0 string

			headerParam0, err = runtime.StyleParamWithLocation("simple", false, "x-customer-transaction-id", runtime.ParamLocationHeader, *params.XCustomerTransactionId)
			if err != nil {
				return nil, err
			}

			req.Header.Set("x-customer-transaction-id", headerParam0)
		}

		var headerParam1 string

		headerParam1, err = runtime.StyleParamWithLocation("simple", false, "content-type", runtime.ParamLocationHeader, params.ContentType)
		if err != nil {
			return nil, err
		}

		req.Header.Set("content-type", headerParam1)

		if params.XLocale != nil {
			var headerParam2 string

			headerParam2, err = runtime.StyleParamWithLocation("simple", false, "x-locale", runtime.ParamLocationHeader, *params.XLocale)
			if err != nil {
				return nil, err
			}

			req.Header.Set("x-locale", headerParam2)
		}

		var headerParam3 string

		headerParam3, err = runtime.StyleParamWithLocation("simple", false, "authorization", runtime.ParamLocationHeader, params.Authorization)
		if err != nil {
			return nil, err
		}

		req.Header.Set("authorization", headerParam3)

	}

	return req, nil
}

// NewCreateTagRequest calls the generic CreateTag builder with application/json body
func NewCreateTagRequest(server string, params *CreateTagParams, body CreateTagJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewCreateTagRequestWithBody(server, params, "application/json", bodyReader)
}

// NewCreateTagRequestWithBody generates requests for CreateTag with any type of body
func NewCreateTagRequestWithBody(server string, params *CreateTagParams, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ship/v1/shipments/tag")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	if params != nil {

		if params.XCustomerTransactionId != nil {
			var headerParam0 string

			headerParam0, err = runtime.StyleParamWithLocation("simple", false, "x-customer-transaction-id", runtime.ParamLocationHeader, *params.XCustomerTransactionId)
			if err != nil {
				return nil, err
			}

			req.Header.Set("x-customer-transaction-id", headerParam0)
		}

		var headerParam1 string

		headerParam1, err = runtime.StyleParamWithLocation("simple", false, "content-type", runtime.ParamLocationHeader, params.ContentType)
		if err != nil {
			return nil, err
		}

		req.Header.Set("content-type", headerParam1)

		if params.XLocale != nil {
			var headerParam2 string

			headerParam2, err = runtime.StyleParamWithLocation("simple", false, "x-locale", runtime.ParamLocationHeader, *params.XLocale)
			if err != nil {
				return nil, err
			}

			req.Header.Set("x-locale", headerParam2)
		}

		var headerParam3 string

		headerParam3, err = runtime.StyleParamWithLocation("simple", false, "authorization", runtime.ParamLocationHeader, params.Authorization)
		if err != nil {
			return nil, err
		}

		req.Header.Set("authorization", headerParam3)

	}

	return req, nil
}

// NewCancelTagRequest calls the generic CancelTag builder with application/json body
func NewCancelTagRequest(server string, shipmentid string, params *CancelTagParams, body CancelTagJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewCancelTagRequestWithBody(server, shipmentid, params, "application/json", bodyReader)
}

// NewCancelTagRequestWithBody generates requests for CancelTag with any type of body
func NewCancelTagRequestWithBody(server string, shipmentid string, params *CancelTagParams, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "shipmentid", runtime.ParamLocationPath, shipmentid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ship/v1/shipments/tag/cancel/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("PUT", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	if params != nil {

		if params.XCustomerTransactionId != nil {
			var headerParam0 string

			headerParam0, err = runtime.StyleParamWithLocation("simple", false, "x-customer-transaction-id", runtime.ParamLocationHeader, *params.XCustomerTransactionId)
			if err != nil {
				return nil, err
			}

			req.Header.Set("x-customer-transaction-id", headerParam0)
		}

		var headerParam1 string

		headerParam1, err = runtime.StyleParamWithLocation("simple", false, "content-type", runtime.ParamLocationHeader, params.ContentType)
		if err != nil {
			return nil, err
		}

		req.Header.Set("content-type", headerParam1)

		if params.XLocale != nil {
			var headerParam2 string

			headerParam2, err = runtime.StyleParamWithLocation("simple", false, "x-locale", runtime.ParamLocationHeader, *params.XLocale)
			if err != nil {
				return nil, err
			}

			req.Header.Set("x-locale", headerParam2)
		}

		var headerParam3 string

		headerParam3, err = runtime.StyleParamWithLocation("simple", false, "authorization", runtime.ParamLocationHeader, params.Authorization)
		if err != nil {
			return nil, err
		}

		req.Header.Set("authorization", headerParam3)

	}

	return req, nil
}

func (c *Client) applyEditors(ctx context.Context, req *http.Request, additionalEditors []RequestEditorFn) error {
	for _, r := range c.RequestEditors {
		if err := r(ctx, req); err != nil {
			return err
		}
	}
	for _, r := range additionalEditors {
		if err := r(ctx, req); err != nil {
			return err
		}
	}
	return nil
}

// ClientWithResponses builds on ClientInterface to offer response payloads
type ClientWithResponses struct {
	ClientInterface
}

// NewClientWithResponses creates a new ClientWithResponses, which wraps
// Client with return type handling
func NewClientWithResponses(server string, opts ...ClientOption) (*ClientWithResponses, error) {
	client, err := NewClient(server, opts...)
	if err != nil {
		return nil, err
	}
	return &ClientWithResponses{client}, nil
}

// WithBaseURL overrides the baseURL.
func WithBaseURL(baseURL string) ClientOption {
	return func(c *Client) error {
		newBaseURL, err := url.Parse(baseURL)
		if err != nil {
			return err
		}
		c.Server = newBaseURL.String()
		return nil
	}
}

// ClientWithResponsesInterface is the interface specification for the client with responses above.
type ClientWithResponsesInterface interface {
	// CreateShipmentWithBodyWithResponse request with any body
	CreateShipmentWithBodyWithResponse(ctx context.Context, params *CreateShipmentParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*CreateShipmentResponse, error)

	CreateShipmentWithResponse(ctx context.Context, params *CreateShipmentParams, body CreateShipmentJSONRequestBody, reqEditors ...RequestEditorFn) (*CreateShipmentResponse, error)

	// CancelShipmentWithBodyWithResponse request with any body
	CancelShipmentWithBodyWithResponse(ctx context.Context, params *CancelShipmentParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*CancelShipmentResponse, error)

	CancelShipmentWithResponse(ctx context.Context, params *CancelShipmentParams, body CancelShipmentJSONRequestBody, reqEditors ...RequestEditorFn) (*CancelShipmentResponse, error)

	// ShipmentPackageValidateWithBodyWithResponse request with any body
	ShipmentPackageValidateWithBodyWithResponse(ctx context.Context, params *ShipmentPackageValidateParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*ShipmentPackageValidateResponse, error)

	ShipmentPackageValidateWithResponse(ctx context.Context, params *ShipmentPackageValidateParams, body ShipmentPackageValidateJSONRequestBody, reqEditors ...RequestEditorFn) (*ShipmentPackageValidateResponse, error)

	// GetConfirmedShipmentAsyncResultsWithBodyWithResponse request with any body
	GetConfirmedShipmentAsyncResultsWithBodyWithResponse(ctx context.Context, params *GetConfirmedShipmentAsyncResultsParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*GetConfirmedShipmentAsyncResultsResponse, error)

	GetConfirmedShipmentAsyncResultsWithResponse(ctx context.Context, params *GetConfirmedShipmentAsyncResultsParams, body GetConfirmedShipmentAsyncResultsJSONRequestBody, reqEditors ...RequestEditorFn) (*GetConfirmedShipmentAsyncResultsResponse, error)

	// CreateTagWithBodyWithResponse request with any body
	CreateTagWithBodyWithResponse(ctx context.Context, params *CreateTagParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*CreateTagResponse, error)

	CreateTagWithResponse(ctx context.Context, params *CreateTagParams, body CreateTagJSONRequestBody, reqEditors ...RequestEditorFn) (*CreateTagResponse, error)

	// CancelTagWithBodyWithResponse request with any body
	CancelTagWithBodyWithResponse(ctx context.Context, shipmentid string, params *CancelTagParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*CancelTagResponse, error)

	CancelTagWithResponse(ctx context.Context, shipmentid string, params *CancelTagParams, body CancelTagJSONRequestBody, reqEditors ...RequestEditorFn) (*CancelTagResponse, error)
}

type CreateShipmentResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *SHPCResponseVOShipShipment
	JSON400      *ErrorResponseVO
	JSON401      *ErrorResponseVO401
	JSON403      *ErrorResponseVO403
	JSON404      *ErrorResponseVO404
	JSON500      *ErrorResponseVO500
	JSON503      *ErrorResponseVO503
}

// Status returns HTTPResponse.Status
func (r CreateShipmentResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r CreateShipmentResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type CancelShipmentResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *SHPCResponseVOCancelShipment
	JSON400      *ErrorResponseVO2
	JSON401      *ErrorResponseVO4012
	JSON403      *ErrorResponseVO4032
	JSON404      *ErrorResponseVO4042
	JSON500      *ErrorResponseVO5002
	JSON503      *ErrorResponseVO5032
}

// Status returns HTTPResponse.Status
func (r CancelShipmentResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r CancelShipmentResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type ShipmentPackageValidateResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *SHPCResponseVOValidate
	JSON400      *ErrorResponseVO2
	JSON401      *ErrorResponseVO2
	JSON403      *ErrorResponseVO2
	JSON500      *ErrorResponseVO2
}

// Status returns HTTPResponse.Status
func (r ShipmentPackageValidateResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r ShipmentPackageValidateResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetConfirmedShipmentAsyncResultsResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *SHPCResponseVOGetOpenShipmentResults
	JSON400      *ErrorResponseVO2
	JSON401      *ErrorResponseVO4012
	JSON403      *ErrorResponseVO4032
	JSON404      *ErrorResponseVO4042
	JSON500      *ErrorResponseVO5002
	JSON503      *ErrorResponseVO5032
}

// Status returns HTTPResponse.Status
func (r GetConfirmedShipmentAsyncResultsResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetConfirmedShipmentAsyncResultsResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type CreateTagResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *SHPCResponseVOCreateTag
	JSON400      *ErrorResponseVO
	JSON401      *ErrorResponseVO401
	JSON403      *ErrorResponseVO403
	JSON404      *ErrorResponseVO404
	JSON500      *ErrorResponseVO500
	JSON503      *ErrorResponseVO503
}

// Status returns HTTPResponse.Status
func (r CreateTagResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r CreateTagResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type CancelTagResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *SHPCResponseVO
	JSON400      *ErrorResponseVO2
	JSON401      *ErrorResponseVO4012
	JSON403      *ErrorResponseVO4032
	JSON404      *ErrorResponseVO4042
	JSON500      *ErrorResponseVO5002
	JSON503      *ErrorResponseVO5032
}

// Status returns HTTPResponse.Status
func (r CancelTagResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r CancelTagResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

// CreateShipmentWithBodyWithResponse request with arbitrary body returning *CreateShipmentResponse
func (c *ClientWithResponses) CreateShipmentWithBodyWithResponse(ctx context.Context, params *CreateShipmentParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*CreateShipmentResponse, error) {
	rsp, err := c.CreateShipmentWithBody(ctx, params, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCreateShipmentResponse(rsp)
}

func (c *ClientWithResponses) CreateShipmentWithResponse(ctx context.Context, params *CreateShipmentParams, body CreateShipmentJSONRequestBody, reqEditors ...RequestEditorFn) (*CreateShipmentResponse, error) {
	rsp, err := c.CreateShipment(ctx, params, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCreateShipmentResponse(rsp)
}

// CancelShipmentWithBodyWithResponse request with arbitrary body returning *CancelShipmentResponse
func (c *ClientWithResponses) CancelShipmentWithBodyWithResponse(ctx context.Context, params *CancelShipmentParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*CancelShipmentResponse, error) {
	rsp, err := c.CancelShipmentWithBody(ctx, params, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCancelShipmentResponse(rsp)
}

func (c *ClientWithResponses) CancelShipmentWithResponse(ctx context.Context, params *CancelShipmentParams, body CancelShipmentJSONRequestBody, reqEditors ...RequestEditorFn) (*CancelShipmentResponse, error) {
	rsp, err := c.CancelShipment(ctx, params, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCancelShipmentResponse(rsp)
}

// ShipmentPackageValidateWithBodyWithResponse request with arbitrary body returning *ShipmentPackageValidateResponse
func (c *ClientWithResponses) ShipmentPackageValidateWithBodyWithResponse(ctx context.Context, params *ShipmentPackageValidateParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*ShipmentPackageValidateResponse, error) {
	rsp, err := c.ShipmentPackageValidateWithBody(ctx, params, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseShipmentPackageValidateResponse(rsp)
}

func (c *ClientWithResponses) ShipmentPackageValidateWithResponse(ctx context.Context, params *ShipmentPackageValidateParams, body ShipmentPackageValidateJSONRequestBody, reqEditors ...RequestEditorFn) (*ShipmentPackageValidateResponse, error) {
	rsp, err := c.ShipmentPackageValidate(ctx, params, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseShipmentPackageValidateResponse(rsp)
}

// GetConfirmedShipmentAsyncResultsWithBodyWithResponse request with arbitrary body returning *GetConfirmedShipmentAsyncResultsResponse
func (c *ClientWithResponses) GetConfirmedShipmentAsyncResultsWithBodyWithResponse(ctx context.Context, params *GetConfirmedShipmentAsyncResultsParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*GetConfirmedShipmentAsyncResultsResponse, error) {
	rsp, err := c.GetConfirmedShipmentAsyncResultsWithBody(ctx, params, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetConfirmedShipmentAsyncResultsResponse(rsp)
}

func (c *ClientWithResponses) GetConfirmedShipmentAsyncResultsWithResponse(ctx context.Context, params *GetConfirmedShipmentAsyncResultsParams, body GetConfirmedShipmentAsyncResultsJSONRequestBody, reqEditors ...RequestEditorFn) (*GetConfirmedShipmentAsyncResultsResponse, error) {
	rsp, err := c.GetConfirmedShipmentAsyncResults(ctx, params, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetConfirmedShipmentAsyncResultsResponse(rsp)
}

// CreateTagWithBodyWithResponse request with arbitrary body returning *CreateTagResponse
func (c *ClientWithResponses) CreateTagWithBodyWithResponse(ctx context.Context, params *CreateTagParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*CreateTagResponse, error) {
	rsp, err := c.CreateTagWithBody(ctx, params, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCreateTagResponse(rsp)
}

func (c *ClientWithResponses) CreateTagWithResponse(ctx context.Context, params *CreateTagParams, body CreateTagJSONRequestBody, reqEditors ...RequestEditorFn) (*CreateTagResponse, error) {
	rsp, err := c.CreateTag(ctx, params, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCreateTagResponse(rsp)
}

// CancelTagWithBodyWithResponse request with arbitrary body returning *CancelTagResponse
func (c *ClientWithResponses) CancelTagWithBodyWithResponse(ctx context.Context, shipmentid string, params *CancelTagParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*CancelTagResponse, error) {
	rsp, err := c.CancelTagWithBody(ctx, shipmentid, params, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCancelTagResponse(rsp)
}

func (c *ClientWithResponses) CancelTagWithResponse(ctx context.Context, shipmentid string, params *CancelTagParams, body CancelTagJSONRequestBody, reqEditors ...RequestEditorFn) (*CancelTagResponse, error) {
	rsp, err := c.CancelTag(ctx, shipmentid, params, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCancelTagResponse(rsp)
}

// ParseCreateShipmentResponse parses an HTTP response from a CreateShipmentWithResponse call
func ParseCreateShipmentResponse(rsp *http.Response) (*CreateShipmentResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &CreateShipmentResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest SHPCResponseVOShipShipment
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ErrorResponseVO
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ErrorResponseVO401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ErrorResponseVO403
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ErrorResponseVO404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ErrorResponseVO500
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON500 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 503:
		var dest ErrorResponseVO503
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON503 = &dest

	}

	return response, nil
}

// ParseCancelShipmentResponse parses an HTTP response from a CancelShipmentWithResponse call
func ParseCancelShipmentResponse(rsp *http.Response) (*CancelShipmentResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &CancelShipmentResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest SHPCResponseVOCancelShipment
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ErrorResponseVO2
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ErrorResponseVO4012
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ErrorResponseVO4032
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ErrorResponseVO4042
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ErrorResponseVO5002
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON500 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 503:
		var dest ErrorResponseVO5032
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON503 = &dest

	}

	return response, nil
}

// ParseShipmentPackageValidateResponse parses an HTTP response from a ShipmentPackageValidateWithResponse call
func ParseShipmentPackageValidateResponse(rsp *http.Response) (*ShipmentPackageValidateResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &ShipmentPackageValidateResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest SHPCResponseVOValidate
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ErrorResponseVO2
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ErrorResponseVO2
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ErrorResponseVO2
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ErrorResponseVO2
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON500 = &dest

	}

	return response, nil
}

// ParseGetConfirmedShipmentAsyncResultsResponse parses an HTTP response from a GetConfirmedShipmentAsyncResultsWithResponse call
func ParseGetConfirmedShipmentAsyncResultsResponse(rsp *http.Response) (*GetConfirmedShipmentAsyncResultsResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetConfirmedShipmentAsyncResultsResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest SHPCResponseVOGetOpenShipmentResults
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ErrorResponseVO2
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ErrorResponseVO4012
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ErrorResponseVO4032
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ErrorResponseVO4042
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ErrorResponseVO5002
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON500 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 503:
		var dest ErrorResponseVO5032
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON503 = &dest

	}

	return response, nil
}

// ParseCreateTagResponse parses an HTTP response from a CreateTagWithResponse call
func ParseCreateTagResponse(rsp *http.Response) (*CreateTagResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &CreateTagResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest SHPCResponseVOCreateTag
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ErrorResponseVO
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ErrorResponseVO401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ErrorResponseVO403
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ErrorResponseVO404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ErrorResponseVO500
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON500 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 503:
		var dest ErrorResponseVO503
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON503 = &dest

	}

	return response, nil
}

// ParseCancelTagResponse parses an HTTP response from a CancelTagWithResponse call
func ParseCancelTagResponse(rsp *http.Response) (*CancelTagResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &CancelTagResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest SHPCResponseVO
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ErrorResponseVO2
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ErrorResponseVO4012
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ErrorResponseVO4032
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ErrorResponseVO4042
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ErrorResponseVO5002
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON500 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 503:
		var dest ErrorResponseVO5032
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON503 = &dest

	}

	return response, nil
}
